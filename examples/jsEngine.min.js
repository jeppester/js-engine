
Array.prototype.getElementByPropertyValue=function(property,value){return this[this.getKeyByPropertyValue(property,value)];};Array.prototype.getArrayByPropertyValue=function(property,value){return this.filter(function(arr){return arr[property]===value;});};Array.prototype.getKeyByPropertyValue=function(property,value){var i;for(i=0;i<this.length;i++){if(this[i][property]===value){return i;}}
return false;};Array.prototype.getKeysByPropertyValue=function(property,value){var i,keys;keys=[];for(i=0;i<this.length;i++){if(this[i][property]===value){keys.push(i);}}
return keys;};Array.prototype.getArrayFromProperty=function(property){var i,array;array=[];for(i=0;i<this.length;i++){this[i][property]&&array.push(this[i][property]);}
return array;};Array.prototype.sortByNumericProperty=function(property,desc){var sortedArray=[],copy=[],currentID,currentVal,i;Array.prototype.push.apply(copy,this);while(copy.length){currentVal=false;for(i=0;i<copy.length;i++){if(!desc){if(copy[i][property]<currentVal||currentVal===false){currentID=i;currentVal=copy[i][property];}}
else{if(copy[i][property]>currentVal||currentVal===false){currentID=i;currentVal=copy[i][property];}}}
sortedArray.push(copy.splice(currentID,1)[0]);}
return sortedArray;};Array.prototype.forEach=function(func){if(typeof func!=='function'){throw new Error('Argument func should be of type: function');}
var cp;cp=[];cp.push.apply(cp,this);for(var i=0;i<cp.length;i++){func.call(cp[i],i);}};Object.prototype.importProperties=function(from,copyIfPossible){var i;for(i in from){if(from.hasOwnProperty(i)){if(i===undefined){continue;}
if(!copyIfPossible||typeof from[i]!=='object'){this[i]=from[i];}
else{if(from[i].copy){this[i]=from[i].copy();}
else if(from[i].clone){this[i]=from[i].clone();}
else{this[i]=from[i];}}}}};Object.prototype.implements=function(checkClass){return(checkClass.prototype.isPrototypeOf(this)?true:this.inherits(checkClass));};Object.prototype.inherits=function(checkClass){if(this.inheritedClasses){return this.inheritedClasses.indexOf(checkClass)!==-1;}
return false;};if(!window.requestAnimationFrame){window.requestAnimationFrame=(function(){return window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback){window.setTimeout(callback,1000/60);};})();}
function Class(className,inherits,functions){var name,constructor,str,i,ii,inheritClass,newClass,propName;name=className.split('.');constructor=name[name.length-1];for(i=0;i<name.length-1;i++){str=name.slice(0,i-1).join('.');if(eval('window.'+str)===undefined){eval(str+' = {}');}}
if(inherits!==undefined&&!Array.prototype.isPrototypeOf(inherits)&&inherits.prototype===undefined){functions=inherits;inherits=undefined;}
eval('\
    '+className+' = function () {\
        this.'+name[name.length-1]+'.apply(this, arguments);\
    }');newClass=eval('window.'+className);newClass.prototype[constructor]=function(){};newClass.prototype.className=className;newClass.prototype.inheritedClasses=[];function inherit(newClass,inheritClass){var functionName;newClass.prototype.inheritedClasses.push(inheritClass);Array.prototype.push.apply(newClass.prototype.inheritedClasses,inheritClass.prototype.inheritedClasses);for(functionName in inheritClass.prototype){if(inheritClass.prototype.hasOwnProperty(functionName)){if(typeof inheritClass.prototype[functionName]==="function"){newClass.prototype[functionName]=inheritClass.prototype[functionName];}}}}
if(inherits){if(!Array.prototype.isPrototypeOf(inherits)){throw new Error("Arguments inherits is not an array");}
for(i=0;i<inherits.length;i++){inheritClass=inherits[i];inherit(newClass,inheritClass);}}
for(propName in functions){if(functions.hasOwnProperty(propName)){newClass.prototype[propName]=functions[propName];}}};KEY_LEFT=37;KEY_UP=38;KEY_RIGHT=39;KEY_DOWN=40;KEY_SPACE=32;KEY_BACKSPACE=8;KEY_TAB=9;KEY_ENTER=13;KEY_SHIFT=16;KEY_CONTROL=17;KEY_ALT_LEFT=18;KEY_CAPSLOCK=20;KEY_ESCAPE=27;KEY_ALT_RIGHT=0;KEY_F1=112;KEY_F2=113;KEY_F3=114;KEY_F4=115;KEY_F5=116;KEY_F6=117;KEY_F7=118;KEY_F8=119;KEY_F9=120;KEY_F10=121;KEY_F11=122;KEY_F12=123;MOUSE_ANY=0;MOUSE_1=1;MOUSE_2=2;MOUSE_3=3;MOUSE_4=4;MOUSE_5=5;MOUSE_6=6;MOUSE_7=7;MOUSE_8=8;MOUSE_9=9;MOUSE_10=10;TOUCH_ANY=20;TOUCH_1=21;TOUCH_2=22;TOUCH_3=23;TOUCH_4=24;TOUCH_5=25;TOUCH_6=26;TOUCH_7=27;TOUCH_8=28;TOUCH_9=29;TOUCH_10=30;MOUSE_TOUCH_ANY=100;SPEED_PIXELS_PER_SECOND=1;SPEED_PIXELS_PER_FRAME=2;OFFSET_TOP_LEFT='tl';OFFSET_TOP_CENTER='tc';OFFSET_TOP_RIGHT='tr';OFFSET_MIDDLE_LEFT='ml';OFFSET_MIDDLE_CENTER='mc';OFFSET_MIDDLE_RIGHT='mr';OFFSET_BOTTOM_LEFT='bl';OFFSET_BOTTOM_CENTER='bc';OFFSET_BOTTOM_RIGHT='br';ALIGNMENT_LEFT='left';ALIGNMENT_CENTER='center';ALIGNMENT_RIGHT='right';(function(){new Class('Engine',{Engine:function(options){engine=this;this.options=options?options:{};this.load();},load:function(){var copyOpt,audioFormats,i,opt;this.host={hasTouch:'ontouchstart'in document,hasMouse:false,browserEngine:'Unknown',device:'Unknown',supportedAudio:[]};if(navigator.userAgent.match(/Firefox/)){this.host.browserEngine='Gecko';}else if(navigator.userAgent.match(/AppleWebKit/)){this.host.browserEngine='WebKit';if(navigator.userAgent.match(/iPad|iPhone/)){this.host.device='iDevice';}else if(navigator.userAgent.match(/Android/)){this.host.device='Android';}}else if(navigator.userAgent.match(/Trident/)){this.host.browserEngine='Trident';}
audioFormats=['mp3','ogg','wav'];for(i=0;i<audioFormats.length;i++){if(document.createElement('audio').canPlayType('audio/'+audioFormats[i])){this.host.supportedAudio.push(audioFormats[i]);}}
this.avoidSubPixelRendering=true;this.preloadSounds=true;switch(this.host.device){case'iDevice':this.preloadSounds=false;break;}
this.running=false;this.canvasResX=800;this.canvasResY=600;this.enginePath='js/jsEngine';this.focusOnLoad=true;this.themesPath='themes';this.drawBoundingBoxes=false;this.drawMasks=false;this.pauseOnBlur=true;this.disableRightClick=true;this.preventDefaultKeyboard=true;this.arena=document.getElementById('arena');this.autoResize=true;this.autoResizeLimitToResolution=true;this.cachedSoundCopies=5;this.gameClassPath="js/Game.js";this.loadText="jsEngine loading...";this.backgroundColor="#FFF";this.timeFactor=1;this.disableTouchScroll=true;this.resetCursorOnEachFrame=true;this.cameras=[];this.defaultCollisionResolution=6;this.redrawObjects=[];this.enableRedrawRegions=false;this.soundsMuted=false;this.musicMuted=false;copyOpt=['backgroundColor','preventDefaultKeyboard','enableRedrawRegions','resetCursorOnEachFrame','disableTouchScroll','defaultCollisionResolution','focusOnLoad','loadText','soundsMuted','musicMuted','cachedSoundCopies','avoidSubPixelRendering','arena','disableRightClick','pauseOnBlur','drawBoundingBoxes','drawMasks','canvasResX','canvasResY','autoResize','autoResizeLimitToResolution','enginePath','themesPath','gameClassPath'];for(i=0;i<copyOpt.length;i++){opt=copyOpt[i];if(this.options[opt]!==undefined){this[opt]=this.options[opt];delete this.options[opt];}}
this.arena.style.position="absolute";this.arena.style.background="#fff";this.arena.style.userSelect="none";this.arena.style.webkitUserSelect="none";this.arena.style.MozUserSelect="none";this.mainCanvas=document.createElement("canvas");this.mainCanvas.style.display="block";this.mainCanvas.width=this.canvasResX;this.mainCanvas.height=this.canvasResY;this.mainCtx=this.mainCanvas.getContext('2d');this.arena.appendChild(this.mainCanvas);if(this.autoResize){this.autoResize=false;this.setAutoResize(true);}
else{this.autoResize=true;this.setAutoResize(false);}
if(this.disableTouchScroll){document.addEventListener('touchmove',function(event){event.preventDefault();},false);document.addEventListener('touchstart',function(event){event.preventDefault();},false);}
loader=new Engine.Loader();loader.loadClasses([this.gameClassPath]);this.gameClassName=this.gameClassPath.match(/(\w*)\.\w+$/)[1];this.defaultTheme=this.options.themes[0];loader.onthemesloaded=function(){engine.initialize();};loader.loadThemes(this.options.themes);},initialize:function(){var objectName;this.objectIndex={};this.frames=0;this.last=new Date().getTime();this.now=this.last;this.gameTime=0;this.currentId=0;this.fps=0;this.fpsCounter=0;this.drawTime=0;this.drawTimeCounter=0;this.drawCalls=0;this.roomList=[];this.masterRoom=new Engine.Room('master');this.currentRoom=new Engine.Room('main');this.defaultAnimationLoop=this.masterRoom.loops.eachFrame;this.defaultActivityLoop=this.masterRoom.loops.eachFrame;this.cameras.push(new Engine.Camera(new Math.Rectangle(0,0,this.canvasResX,this.canvasResY),new Math.Rectangle(0,0,this.canvasResX,this.canvasResY)));if(this.disableRightClick){this.arena.oncontextmenu=function(){return false;};}
keyboard=new Input.Keyboard();pointer=new Input.Pointer();if(this.pauseOnBlur){window.addEventListener('blur',function(){engine.stopMainLoop();});window.addEventListener('focus',function(){engine.startMainLoop();});}
if(window[this.gameClassName]!=="undefined"){objectName=this.gameClassName.substr(0,1).toLowerCase()+this.gameClassName.substr(1);eval(objectName+" = new "+this.gameClassName+'()');}
else{;loader.hideOverlay();}
this.startMainLoop();if(this.focusOnLoad){window.focus();}
if(this.onload){this.onload();};},setAutoResize:function(enable){if(enable&&!this.autoResize){this.autoResize=true;this.autoResizeCanvas();window.addEventListener('resize',engine.autoResizeCanvas,false);window.addEventListener('load',engine.autoResizeCanvas,false);}
else if(!enable&&this.autoResize){this.autoResize=false;window.removeEventListener('resize',engine.autoResizeCanvas,false);window.removeEventListener('load',engine.autoResizeCanvas,false);this.arena.style.top="50%";this.arena.style.left="50%";this.arena.style.marginLeft=-this.canvasResX/2+"px";this.arena.style.marginTop=-this.canvasResY/2+"px";this.mainCanvas.style.width=this.canvasResX+"px";this.mainCanvas.style.height=this.canvasResY+"px";}},autoResizeCanvas:function(){if(this!==engine){engine.autoResizeCanvas();return;}
var h,w,windowWH,gameWH;windowWH=window.innerWidth/window.innerHeight;gameWH=this.canvasResX/this.canvasResY;if(windowWH>gameWH){h=window.innerHeight;w=this.canvasResX/this.canvasResY*h;}else{w=window.innerWidth;h=this.canvasResY/this.canvasResX*w;}
if(this.autoResizeLimitToResolution){w=Math.min(w,this.canvasResX);h=Math.min(h,this.canvasResY);}
this.arena.style.top="50%";this.arena.style.left="50%";this.arena.style.marginTop=-h/2+"px";this.arena.style.marginLeft=-w/2+"px";this.mainCanvas.style.height=h+"px";this.mainCanvas.style.width=w+"px";},convertSpeed:function(speed,from,to){if(speed===undefined){throw new Error('Missing argument: speed');}
if(speed.implements(Math.Vector)){return new Math.Vector(this.convertSpeed(speed.x,from,to),this.convertSpeed(speed.y,from,to));}
from=from!==undefined?from:SPEED_PIXELS_PER_SECOND;to=to!==undefined?to:SPEED_PIXELS_PER_FRAME;switch(from){case SPEED_PIXELS_PER_SECOND:speed=speed*this.gameTimeIncrease/1000;break;case SPEED_PIXELS_PER_FRAME:break;}
switch(to){case SPEED_PIXELS_PER_SECOND:speed=speed/this.gameTimeIncrease*1000;break;case SPEED_PIXELS_PER_FRAME:break;}
return speed;},goToRoom:function(room){if(room===undefined){throw new Error('Missing argument: room');}
if(typeof room==="string"){room=this.roomList.getElementByPropertyValue('name',room);if(!room){throw new Error('Could not find a room with the specified name');}}
else{if(this.roomList.indexOf(room)===-1){throw new Error('Room is not on room list, has it been removed?');}}
this.currentRoom.onLeave();this.currentRoom=room;this.currentRoom.onEnter();},addRoom:function(room){if(room===undefined){throw new Error('Missing argument: room');}
if(this.roomList.indexOf(room)!==-1){throw new Error('Room is already on room list, rooms are automatically added upon instantiation');}
this.roomList.push(room);},removeRoom:function(room){if(room===undefined){throw new Error('Missing argument: room');}
var index;if(typeof room==="string"){room=this.roomList.getElementByPropertyValue('name',room);if(!room){throw new Error('Could not find a room with the specified name');}}
index=this.roomList.indexOf(room);if(index===-1){throw new Error('Room is not on room list, has it been removed?');}
if(room===this.masterRoom){throw new Error('Cannot remove master room');}
else if(room===this.currentRoom){throw new Error('Cannot remove current room, remember to leave the room first, by entering another room (use engine.goToRoom)');}
this.roomList.splice(i,1);},setSoundsMuted:function(muted){muted=muted!==undefined?muted:true;if(muted){loader.getAllSounds().forEach(function(){this.stopAll();});}
this.soundsMuted=muted;},setMusicMuted:function(muted){muted=muted!==undefined?muted:true;if(muted){loader.getAllMusic().forEach(function(){this.stop();});}
this.musicMuted=muted;},setDefaultTheme:function(themeName,enforce){if(themeName===undefined){throw new Error('Missing argument: themeName');}
if(loader.themes[themeName]===undefined){throw new Error('Trying to set nonexistent theme: '+themeName);}
enforce=enforce!==undefined?enforce:false;this.defaultTheme=themeName;this.currentRoom.setTheme(undefined,enforce);},startMainLoop:function(){if(this.running){return;}
this.now=new Date().getTime();this.running=true;engine.mainLoop();},stopMainLoop:function(){if(!this.running){return;}
this.running=false;},mainLoop:function(){if(!this.running){return;}
var drawTime;this.last=this.now;this.now=new Date().getTime();this.timeIncrease=this.now-this.last;this.gameTimeIncrease=this.timeIncrease*this.timeFactor;this.gameTime+=this.gameTimeIncrease;this.frames++;if(this.resetCursorOnEachFrame){pointer.resetCursor();}
this.masterRoom.update();this.currentRoom.update();this.drawCalls=0;drawTime=new Date().getTime();this.redraw();drawTime=new Date().getTime()-drawTime;if(this.fpsMsCounter<1000){this.fpsCounter++;this.drawTimeCounter+=drawTime;this.fpsMsCounter+=this.timeIncrease;}
else{this.fps=this.fpsCounter;this.drawTime=this.drawTimeCounter/this.fpsCounter;this.fpsCounter=0;this.drawTimeCounter=0;this.fpsMsCounter=0;}
requestAnimationFrame(function(time){engine.mainLoop(time);});},setCanvasResX:function(res){this.mainCanvas.width=res;this.canvasResX=res;if(this.autoResize){this.autoResizeCanvas();}},setCanvasResY:function(res){this.mainCanvas.height=res;this.canvasResY=res;if(this.autoResize){this.autoResizeCanvas();}},registerObject:function(obj,id){if(obj===undefined){throw new Error('Missing argument: obj');}
if(id===undefined){this.currentId++;id="obj"+(this.currentId-1);}
else if(this.objectIndex[id]!==undefined){throw new Error('Object id already taken: '+id);}
this.objectIndex[id]=obj;obj.id=id;return id;},loadFiles:function(filePaths){var i,req,codeString;if(typeof filePaths==="string"){filePaths=[filePaths];}
for(i=0;i<filePaths.length;i++){req=new XMLHttpRequest();req.open('GET',filePaths[i],false);req.send();codeString=req.responseText+"\n//@ sourceURL=/"+filePaths[i];try{eval(codeString);}
catch(e){;throw new Error(e);}}
if(window.loadedFiles===undefined){window.loadedFiles=[];}
window.loadedFiles=window.loadedFiles.concat(filePaths);},ajaxRequest:function(url,params,async,callback,caller){if(url===undefined){throw new Error('Missing argument: url');}
if(callback===undefined){throw new Error('Missing argument: callback');}
params=params!==undefined?params:'';async=async!==undefined?async:true;caller=caller!==undefined?caller:window;if(typeof params!=='string'){params='data='+JSON.stringify(params);}
var req;req=new XMLHttpRequest();if(async){req.onreadystatechange=function(){if(req.readyState===4&&req.status===200){callback.call(caller,req.responseText);}};}
req.open('POST',url,async);req.setRequestHeader("Content-type","application/x-www-form-urlencoded");req.send(params);if(!async){if(req.readyState===4&&req.status===200){callback.call(caller,req.responseText);}
else{throw new Error('XMLHttpRequest failed: '+url);}}},purge:function(obj){var len,name,loop,roomId,room;if(obj===undefined){throw new Error('Cannot purge object: '+obj);}
if(typeof obj==="string"){obj=this.objectIndex[obj];}
if(obj.children){len=obj.children.length;while(len--){engine.purge(obj.children[len]);}}
for(roomId=0;roomId<this.roomList.length;roomId++){room=this.roomList[roomId];for(name in room.loops){if(room.loops.hasOwnProperty(name)){loop=room.loops[name];loop.detachFunctionsByCaller(obj);loop.unscheduleByCaller(obj);loop.removeAnimationsOfObject(obj);}}}
if(obj.parent){obj.parent.removeChildren(obj);}
delete this.objectIndex[obj.id];},redraw:function(){var i,c;c=this.mainCtx
for(i=0;i<this.cameras.length;i++){this.cameras[i].capture();this.cameras[i].draw(c);}
this.lastRedrawObjects=this.redrawObjects;this.redrawObjects=[];},dumpScreen:function(){var dataString,a;dataString=this.mainCanvas.toDataURL().replace(/image\/png/,'image/octet-stream');a=document.createElement('a');a.href=dataString;a.setAttribute('download','screendump.png');document.body.appendChild(a);a.click();document.body.removeChild(a,document.body);},ease:function(type,t,b,c,d){var a;switch(type){case"linear":t/=d;return b+c*t;case"quadIn":t/=d;return b+c*t*t;case"quadOut":t/=d;return b-c*t*(t-2);case"quadInOut":t=t/d*2;if(t<1){return b+c*t*t/2;}else{t--;return b+c*(1-t*(t-2))/2;}
case"powerIn":t/=d;a=c/Math.abs(c);return b+a*Math.pow(Math.abs(c),t);case"powerOut":t/=d;a=c/Math.abs(c);return b+c-a*Math.pow(Math.abs(c),1-t);case"powerInOut":t=t/d*2;a=c/Math.abs(c);if(t<1){return b+a*Math.pow(Math.abs(c),t)/2;}else{t--;return b+c-a*Math.pow(Math.abs(c),1-t)/2;}
case"sinusInOut":t/=d;return b+c*(1+Math.cos(Math.PI*(1+t)))/2;}
return b+c;}});}());new Class('Engine.Loader',{Loader:function(){this.images={};this.loaded={classes:[]};this.themes={External:{"name":"External","inherit":[],"music":{},"sfx":{},"images":{},"masks":{},"resourcesCount":0,"resourcesLoaded":0}};this.loadOverlay=document.createElement('div');this.loadOverlay.setAttribute('style','border: 0;position: absolute;top: 0;left: 0;width: 100%;height: 100%;z-index: 100;opacity: 1;');this.loadOverlay.id="loadOverlay";this.loadOverlay.innerHTML='<div id="loadOverlayText">'+engine.loadText+'</div>';engine.arena.appendChild(this.loadOverlay);},hideOverlay:function(callback){this.fadeCallback=callback;this.fadeOpacity=1;this.fade=function(){var obj=loader.loadOverlay;loader.fadeOpacity=Math.max(0,loader.fadeOpacity-0.1);loader.fadeOpacity=Math.floor(loader.fadeOpacity*100)/100;obj.style.opacity=loader.fadeOpacity;if(loader.fadeOpacity!==0){setTimeout(function(){loader.fade();},30);}
else{engine.arena.removeChild(loader.loadOverlay);delete loader.fade;if(loader.fadeCallback){loader.fadeCallback();}
delete loader.fadeCallback;}};this.fade();},getImage:function(resource,themeName){if(resource===undefined){throw new Error('Missing argument: resource');}
themeName=themeName!==undefined?themeName:engine.defaultTheme;return this.getResource(resource,'images',themeName);},getSound:function(resource,themeName){if(resource===undefined){throw new Error('Missing argument: resource');}
themeName=themeName!==undefined?themeName:engine.defaultTheme;return this.getResource(resource,'sfx',themeName);},getMusic:function(resource,themeName){if(resource===undefined){throw new Error('Missing argument: resource');}
themeName=themeName!==undefined?themeName:engine.defaultTheme;return this.getResource(resource,'music',themeName);},getMask:function(resource,themeName){if(resource===undefined){throw new Error('Missing argument: resource');}
themeName=themeName!==undefined?themeName:engine.defaultTheme;var mask;mask=this.getResource(resource,'masks',themeName);if(mask){return mask;}
else{mask=this.generateMask(resource);this.themes[themeName].masks[resource]=mask;return mask;}},getResource:function(resource,typeString,themeName){if(resource===undefined){throw new Error('Missing argument: resource');}
if(typeString===undefined){throw new Error('Missing argument: typeString');}
if(themeName===undefined){throw new Error('Missing argument: themeName');}
var res,inh,i;if(resource.indexOf('/')!==-1){resource=resource.replace(/\//g,'.');}
res=this.themes[themeName][typeString][resource];if(res===undefined){for(i=0;i<this.themes[themeName].inherit.length;i++){inh=this.themes[themeName].inherit[i];if(this.themes[inh]){res=this.themes[inh][typeString][resource];if(res){break;}}}}
return res===undefined?false:res;},getImageSources:function(){var object,sourceStrings,currentDir,loopThrough,inheritTheme,i;object=this.themes[engine.defaultTheme].images;sourceStrings=[];currentDir=[];loopThrough=function(object){var pushStr,name;if(object.src!==undefined){pushStr=currentDir.join('.');if(sourceStrings.indexOf(pushStr)===-1){sourceStrings.push(pushStr);}}
else{for(name in object){if(object.hasOwnProperty(name)){currentDir.push(name);loopThrough(object[name]);currentDir.pop();}}}};loopThrough(object);for(i=0;i<this.themes[engine.defaultTheme].inherit.length;i++){inheritTheme=this.themes[this.themes[engine.defaultTheme].inherit[i]];if(inheritTheme!==undefined&&inheritTheme.images!==undefined){loopThrough(inheritTheme.images);}}
return sourceStrings;},getAllSounds:function(){var res,themeName,theme,resourceString;res=[];for(themeName in this.themes){if(this.themes.hasOwnProperty(themeName)){theme=this.themes[themeName];for(resourceString in theme.sfx){if(theme.sfx.hasOwnProperty(resourceString)){res.push(theme.sfx[resourceString]);}}}}
return res;},getAllMusic:function(){var res,themeName,theme,resourceString;res=[];for(themeName in this.themes){if(this.themes.hasOwnProperty(themeName)){theme=this.themes[themeName];for(resourceString in theme.music){if(theme.music.hasOwnProperty(resourceString)){res.push(theme.music[resourceString]);}}}}
return res;},loadClasses:function(paths){if(paths===undefined){throw new Error('Missing argument: paths');}
var objectName,i;for(i in paths){if(paths.hasOwnProperty(i)){objectName=paths[i].match(/(\w*)\.\w+$/)[1];if(window[objectName]){continue;}
engine.loadFiles(paths[i]);this.loaded.classes[objectName]=paths[i];}}
return true;},reloadAllClasses:function(){var i;for(i in this.loaded.classes){if(this.loaded.classes.hasOwnProperty(i)){engine.loadFiles(this.loaded.classes[i]);}}},loadThemes:function(themeNames,callback){if(themeNames===undefined){throw new Error('Missing argument: themeNames');}
if(callback!==undefined){this.onthemesloaded=callback;}
var name,req,i,total,theme,codeString;for(i=0;i<themeNames.length;i++){name=themeNames[i];if(this.themes[name]){continue;}
req=new XMLHttpRequest();req.open('GET',engine.themesPath+'/'+name+'/theme.js',false);req.send();if(req.status===404){;continue;}
codeString=req.responseText+"\n//@ sourceURL=/"+engine.themesPath+'/'+name+'/theme.js';eval('theme = '+codeString);if(theme.inherit.length){this.loadThemes(theme.inherit);}
theme.inherit.push('External');this.themes[name]=theme;theme.resourcesCount=0;theme.resourcesLoaded=0;theme.masks={};this.loadResources(theme,theme.images,'images');this.loadResources(theme,theme.sfx,'sfx');this.loadResources(theme,theme.music,'music');}
total=0;for(i in this.themes){if(this.themes.hasOwnProperty(i)){total+=this.themes[i].resourcesCount;}}
if(total===0){if(this.onthemesloaded){this.onthemesloaded();}}},loadResources:function(theme,object,typeString){if(theme===undefined){throw new Error('Missing argument: theme');}
if(object===undefined){throw new Error('Missing argument: object');}
if(typeString===undefined){throw new Error('Missing argument: typeString');}
var onload,res,path,i,format,images;onload=function(){var theme;if(this.hasAttribute('data-loaded')){return;}
this.setAttribute('data-loaded','true');theme=loader.themes[this.getAttribute('data-theme')];theme.resourcesLoaded++;loader.checkAllLoaded();};for(path in object){if(object.hasOwnProperty(path)){switch(typeString){case'images':res=new Image();res.src=engine.themesPath+"/"+theme.name+"/images/"+path.replace(/\./g,'/')+'.png';images=object[path].match(/; *(\d+) *images?/);if(images){res.imageLength=parseInt(images[1],10);}
else{res.imageLength=1;}
if(object[path].match(/; *bordered/)){res.spacing=1;}
else{res.spacing=0;}
theme.images[path]=res;res.onload=onload;theme.resourcesCount++;break;case'sfx':format=false;for(i=0;i<engine.host.supportedAudio.length;i++){if(object[path].search(engine.host.supportedAudio[i])!==-1){format=engine.host.supportedAudio[i];}}
if(!format){;continue;}
res=new Audio(engine.themesPath+"/"+theme.name+"/sfx/"+path.replace(/\./g,'/')+'.'+format);theme.sfx[path]=new Sound.Effect(res);if(engine.preloadSounds){res.setAttribute('preload','auto');res.addEventListener("canplaythrough",onload,false);theme.resourcesCount++;}
break;case'music':format=false;for(i=0;i<engine.host.supportedAudio.length;i++){if(object[path].search(engine.host.supportedAudio[i])!==-1){format=engine.host.supportedAudio[i];}}
if(!format){throw new Error('Sound was not available in a supported format: '+theme.name+"/sfx/"+path.replace(/\./g,'/'));continue;}
res=new Audio(engine.themesPath+"/"+theme.name+"/music/"+path.replace(/\./g,'/')+'.'+format);theme.music[path]=new Sound.Music(res);if(engine.preloadSounds){res.setAttribute('preload','auto');res.addEventListener("canplaythrough",onload,false);theme.resourcesCount++;}
break;}
res.setAttribute('data-theme',theme.name);res.setAttribute('data-resourceString',path.replace(/\./g,'/'));}}},loadExternalResource:function(resourceString,path,onLoaded,typeString,options){if(resourceString===undefined){throw new Error('Missing argument: resourceString');}
if(path===undefined){throw new Error('Missing argument: path');}
typeString=typeString||"images";onLoaded=onLoaded||function(){};options=options||"";theme=this.themes.External;switch(typeString){case'images':res=new Image();res.src=path;images=options.match(/; *(\d+) *images?/);if(images){res.imageLength=parseInt(images[1],10);}
else{res.imageLength=1;}
if(options.match(/; *bordered/)){res.spacing=1;}
else{res.spacing=0;}
theme.images[resourceString]=res;res.onload=onLoaded;theme.resourcesCount++;break;case'sfx':format=path.match(/[^\.]*$/)[0];if(engine.host.supportedAudio.indexOf(format)===-1){throw new Error('Sound format is not supported:',format);return;}
res=new Audio(path);theme.sfx[resourceString]=new Sound.Effect(res);if(engine.preloadSounds){res.setAttribute('preload','auto');res.addEventListener("canplaythrough",onLoaded,false);theme.resourcesCount++;}
break;case'music':format=path.match(/[^\.]*$/)[0];if(engine.host.supportedAudio.indexOf(format)===-1){throw new Error('Sound format is not supported:',format);return;}
res=new Audio(path);theme.music[resourceString]=new Music(res);if(engine.preloadSounds){res.setAttribute('preload','auto');res.addEventListener("canplaythrough",onLoaded,false);theme.resourcesCount++;}
break;}
res.setAttribute('data-theme',theme.name);res.setAttribute('data-resourceString',resourceString);},generateMask:function(resourceString,alphaLimit){if(resourceString===undefined){throw new Error('Missing argument: resourceString');}
alphaLimit=alphaLimit!==undefined?alphaLimit:255;var image,canvas,ctx,bitmap,data,length,pixel,top,bottom,left,right,x,y;image=loader.getImage(resourceString);canvas=document.createElement('canvas');canvas.width=image.width;canvas.height=image.height;canvas.imageLength=image.imageLength;ctx=canvas.getContext('2d');if(image===false){throw new Error('Trying to create mask for non-existing resource: '+resourceString);}
ctx.drawImage(image,0,0,image.width,image.height);bitmap=ctx.getImageData(0,0,canvas.width,canvas.height);data=bitmap.data;length=data.length/4;top=bitmap.height;bottom=0;left=bitmap.width;right=0;for(pixel=0;pixel<length;pixel++){if(data[pixel*4+3]<alphaLimit){data[pixel*4]=0;data[pixel*4+1]=0;data[pixel*4+2]=0;data[pixel*4+3]=0;}
else{data[pixel*4]=0;data[pixel*4+1]=0;data[pixel*4+2]=0;data[pixel*4+3]=255;y=Math.floor(pixel/bitmap.width);x=pixel-y*bitmap.width;while(x>=Math.floor(image.width/image.imageLength)){x-=Math.floor(image.width/image.imageLength)+image.spacing;}
if(x<0){continue;}
top=Math.min(y,top);bottom=Math.max(y+1,bottom);left=Math.min(x,left);right=Math.max(x+1,right);}}
ctx.putImageData(bitmap,0,0);canvas.bBox=new Math.Rectangle(left,top,right-left,bottom-top).getPolygon();return canvas;},checkAllLoaded:function(){var i,total,loaded,theme;total=0;loaded=0;for(i in this.themes){if(this.themes.hasOwnProperty(i)){theme=this.themes[i];total+=theme.resourcesCount;loaded+=theme.resourcesLoaded;}}
if(loaded===total){if(this.onthemesloaded){this.onthemesloaded();}
return true;}
return false;}});new Class('Lib.Animatable',{animate:function(properties,options){if(properties===undefined){throw new Error('Missing argument: properties');}
if(options===undefined){throw new Error('Missing argument: options');}
var anim,i,c,loop,map,opt;anim={};map=properties;opt=options?options:{};anim.obj=this;loop=opt.loop!==undefined?opt.loop:(this.loop!==undefined?this.loop:engine.defaultAnimationLoop);anim.callback=opt.callback!==undefined?opt.callback:function(){};anim.easing=opt.easing!==undefined?opt.easing:"quadInOut";anim.duration=opt.duration!==undefined?opt.duration:1000;anim.prop={};for(i in map){if(map.hasOwnProperty(i)){anim.prop[i]={begin:this[i],end:map[i]};}}
c=0;for(i in anim.prop){if(anim.prop.hasOwnProperty(i)){if(anim.prop[i].begin===anim.prop[i].end&&!this.propertyIsAnimated(i)){delete anim.prop[i];}else{c++;}}}
if(!c&&anim.callback===function(){}){return;}
loop.addAnimation(anim);},isAnimated:function(){var roomId,room,name,loop,animId,animation;for(roomId=0;roomId<engine.roomList.length;roomId++){room=engine.roomList[roomId];for(name in room.loops){if(room.loops.hasOwnProperty(name)){loop=room.loops[name];for(animId=loop.animations.length-1;animId>-1;animId--){animation=loop.animations[animId];if(animation.obj===this){return true;}}}}}
return false;},propertyIsAnimated:function(property){var roomId,room,name,loop,animId,animation;for(roomId=0;roomId<engine.roomList.length;roomId++){room=engine.roomList[roomId];for(name in room.loops){if(room.loops.hasOwnProperty(name)){loop=room.loops[name];for(animId=loop.animations.length-1;animId>-1;animId--){animation=loop.animations[animId];if(animation.obj===this&&animation.prop[property]!==undefined){return true;}}}}}
return false;},getAnimations:function(){var animations,roomId,room,name,loop,animId,animation;animations=[];for(roomId=0;roomId<engine.roomList.length;roomId++){room=engine.roomList[roomId];for(name in room.loops){if(room.loops.hasOwnProperty(name)){loop=room.loops[name];for(animId=loop.animations.length-1;animId>-1;animId--){animation=loop.animations[animId];if(animation.obj===this){animations.push(animation);}}}}}
return animations;},stopAnimations:function(){var roomId,room,name;for(roomId=0;roomId<engine.roomList.length;roomId++){room=engine.roomList[roomId];for(name in room.loops){if(room.loops.hasOwnProperty(name)){room.loops[name].removeAnimationsOfObject(this);}}}},schedule:function(func,delay,loopName){var room;loopName=loopName||'eachFrame';room=this.getRoom();if(!room){throw new Error('Schedule requires that the object is added to a room');}
room.loops[loopName].schedule(this,func,delay);},});new Class('Math.Vector',[Lib.Animatable],{Vector:function(x,y){this.set(x,y);this.opacity=1;},set:function(x,y){this.x=x!==undefined?x:0;this.y=y!==undefined?y:0;return this;},setFromDirection:function(direction,length){if(typeof direction!=='number'){throw new Error('Argument direction should be of type: Number');}
if(typeof length!=='number'){throw new Error('Argument length should be of type: Number');}
this.x=Math.cos(direction)*length;this.y=Math.sin(direction)*length;return this;},copy:function(){return new Math.Vector(this.x,this.y);},move:function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x+=x;this.y+=y;return this;},rotate:function(direction){if(typeof direction!=='number'){throw new Error('Argument direction should be of type: Number');}
this.setFromDirection(this.getDirection()+direction,this.getLength());return this;},scale:function(scaleH,scaleV){if(typeof scaleH!=='number'){throw new Error('Argument scaleH should be of type Number');}
scaleV=scaleV!==undefined?scaleV:scaleH;this.x*=scaleH;this.y*=scaleV;return this;},add:function(vector){if(vector.implements(Math.Vector)){this.x+=vector.x;this.y+=vector.y;}
else if(typeof vector==='number'){this.x+=vector;this.y+=vector;}
else{throw new Error('Argument vector should be of type Vector or Number');}
return this;},subtract:function(vector){if(vector.implements(Math.Vector)){this.x-=vector.x;this.y-=vector.y;}
else if(typeof vector==='number'){this.x-=vector;this.y-=vector;}
else{throw new Error('Argument vector should be of type Vector or Number');}
return this;},divide:function(vector){if(vector.implements(Math.Vector)){this.x/=vector;this.y/=vector;}
else if(typeof vector==='number'){this.x/=vector;this.y/=vector;}
else{throw new Error('Argument vector should be of type Vector or Number');}
return this;},multiply:function(vector){if(!vector.implements(Math.Vector)){throw new Error('Argument vector should be of type Vector');}
this.x*=vector.x;this.y*=vector.y;return this;},getDot:function(vector){if(!vector.implements(Math.Vector)){throw new Error('Argument vector should be of type: Vector');}
return this.x*vector.x+this.y*vector.y;},getCross:function(vector){if(!vector.implements(Math.Vector)){throw new Error('Argument vector should be of type: Vector');}
return this.x*vector.y-this.y*vector.x;},getLength:function(){return Math.sqrt(this.getDot(this));},getDirection:function(){return Math.atan2(this.y,this.x);},getDirectionTo:function(point){if(!point.implements(Math.Vector)){throw new Error('Only Vectors or objects inheriting Vector are supported');}
return point.copy().subtract(this).getDirection();},getDistance:function(object){if(object.implements(Math.Vector)){return object.copy().subtract(this).getLength();}
if(object.implements(Math.Line)){return object.getDistance(this);}
if(object.implements(Math.Circle)){return object.getDistance(this);}
if(object.implements(Math.Rectangle)){return object.getDistance(this);}
if(object.implements(Math.Polygon)){return object.getDistance(this);}
throw new Error('Argument object should be of type: Vector, Line, Circle, Rectangle or Polygon');}});new Class('Math.Line',[Lib.Animatable],{Line:function(startVector,endVector){startVector=startVector!==undefined?startVector:new Math.Vector();endVector=endVector!==undefined?endVector:new Math.Vector();this.setFromVectors(startVector,endVector);},setFromVectors:function(startVector,endVector){if(!startVector.implements(Math.Vector)){throw new Error('Argument startVector should be of type: Vector');}
if(!endVector.implements(Math.Vector)){throw new Error('Argument endVector should be of type: Vector');}
this.a=startVector;this.b=endVector;return this;},setFromCoordinates:function(x1,y1,x2,y2){x1=x1!==undefined?x1:0;y1=y1!==undefined?y1:0;x2=x2!==undefined?x2:0;y2=y2!==undefined?y2:0;this.a=new Math.Vector(x1,y1);this.b=new Math.Vector(x2,y2);return this;},copy:function(){return new Math.Line(this.a,this.b);},move:function(x,y){this.a.move(x,y);this.b.move(x,y);return this;},rotate:function(direction){if(typeof direction!=='number'){throw new Error('Argument direction should be of type: Number');}
this.a.rotate(direction);this.b.rotate(direction);return this;},scale:function(scaleH,scaleV){this.a.scale(scaleH,scaleV);this.b.scale(scaleH,scaleV);return this;},add:function(vector){this.a.add(vector);this.b.add(vector);return this;},subtract:function(vector){this.a.substract(vector);this.b.substract(vector);return this;},divide:function(vector){this.a.divide(vector);this.b.divide(vector);return this;},multiply:function(vector){this.a.multiply(vector);this.b.multiply(vector);return this;},intersects:function(object){if(object.implements(Math.Line)){var c1,c2;c1=(this.b.x-this.a.x)*(object.a.y-this.b.y)-(object.a.x-this.b.x)*(this.b.y-this.a.y);c2=(this.b.x-this.a.x)*(object.b.y-this.b.y)-(object.b.x-this.b.x)*(this.b.y-this.a.y);if(c1*c2>0){return false;}
c1=(object.b.x-object.a.x)*(this.a.y-object.b.y)-(this.a.x-object.b.x)*(object.b.y-object.a.y);c2=(object.b.x-object.a.x)*(this.b.y-object.b.y)-(this.b.x-object.b.x)*(object.b.y-object.a.y);return c1*c2<0;}
else if(object.implements(Math.Circle)){return object.intersects(this);}
else if(object.implements(Math.Rectangle)){return object.getPolygon().intersects(this);}
else if(object.implements(Math.Polygon)){return object.intersects(this);}
else{throw new Error('Argument object should be of type: Line, Rectangle, Circle or Polygon');}},getLength:function(){return this.b.copy().subtract(this.a).getLength();},getDistance:function(object){var ba,ab,bc,ac;if(object.implements(Math.Vector)){ba=this.a.copy().subtract(this.b);ab=this.b.copy().subtract(this.a);bc=object.copy().subtract(this.b);ac=object.copy().subtract(this.a);if(ab.getDot(bc)>0){return bc.getLength();}
else if(ba.getDot(ac)>0){return ac.getLength();}
else{return Math.abs(ab.getCross(ac)/ab.getLength());}}
else if(object.implements(Math.Line)){if(this.intersects(object)){return 0;}
else{return Math.min(this.getDistance(object.a),this.getDistance(object.b),object.getDistance(this.a),object.getDistance(this.b));}}
else if(object.implements(Math.Rectangle)){return object.getDistance(this);}
else if(object.implements(Math.Circle)){return object.getDistance(this);}
else{throw new Error('Argument object should be of type: Vector, Line, Circle, Rectangle or Polygon');}},getPolygon:function(){return new Math.Polygon([this.a.copy(),this.b.copy()]);},});new Class('Math.Circle',[Lib.Animatable],{Circle:function(x,y,radius){this.set(x,y,radius);},set:function(x,y,radius){x=x!==undefined?x:0;y=y!==undefined?y:0;radius=radius!==undefined?radius:0;this.x=x;this.y=y;this.radius=radius;return this;},copy:function(){return new Math.Circle(this.x,this.y,this.radius);},move:function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x+=x;this.y+=y;return this;},moveTo:function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x=x;this.y=y;return this;},scale:function(factor){if(typeof factor!=='number'){throw new Error('Argument factor should be of type Number');}
this.radius*=factor;return this;},getArea:function(){return Math.pow(this.radius)*Math.PI;},getDistance:function(object){if(object.implements(Math.Vector)){return Math.max(0,object.getDistance(new Math.Vector(this.x,this.y))-this.radius);}
else if(object.implements(Math.Line)){return Math.max(0,object.getDistance(new Math.Vector(this.x,this.y))-this.radius);}
else if(object.implements(Math.Circle)){return Math.max(0,new Math.Vector(this.x,this.y).getDistance(new Math.Vector(object.x,object.y))-(this.radius+object.radius));}
else if(object.implements(Math.Rectangle)){return object.getDistance(this);}
else if(object.implements(Math.Polygon)){return object.getDistance(this);}
else{throw new Error('Argument object should be of type: Vector, Line, Circle, Rectangle or Polygon');}},contains:function(object){var i,cDist;if(object.implements(Math.Vector)){return object.copy().move(-this.x,-this.y).getLength()<this.radius;}
else if(object.implements(Math.Line)){return this.contains(object.a)&&this.contains(object.b);}
else if(object.implements(Math.Circle)){cDist=new Math.Vector(object.x,object.y).move(-this.x,-this.y).getLength();return cDist+object.radius<this.radius;}
else if(object.implements(Math.Rectangle)){return this.contains(object.getPolygon());}
else if(object.implements(Math.Polygon)){for(i=0;i<object.points.length;i++){if(!this.contains(object.points[i])){return false;}}
return true;}
else{throw new Error('Argument object has to be of type: Vector, Line, Circle, Rectangle or Polygon');}},intersects:function(object){if(object.implements(Math.Line)){return this.contains(object)===false&&object.getDistance(this)<=0;}
else if(object.implements(Math.Circle)){return!this.contains(object)&&!object.contains(this)&&new Math.Vector(this.x,this.y).getDistance(new Math.Vector(object.x,object.y))<=this.radius+object.radius;}
else if(object.implements(Math.Rectangle)){return object.getPolygon().intersects(this);}
else if(object.implements(Math.Polygon)){return object.intersects(this);}
else{throw new Error('Argument object has to be of type: Line, Circle, Rectangle or Polygon');}}});new Class('Math.Rectangle',[Math.Vector],{Rectangle:function(x,y,width,height,fillStyle,strokeStyle,lineWidth){this.set(x,y,width,height);},set:function(x,y,width,height){this.x=x!==undefined?x:0;this.y=y!==undefined?y:0;this.width=width!==undefined?width:0;this.height=height!==undefined?height:0;return this;},setFromVectors:function(position,size){position=position!==undefined?position:new Math.Vector();size=size!==undefined?size:new Math.Vector();this.x=position.x;this.y=position.y;this.width=size.x;this.height=size.y;return this;},copy:function(){return new Math.Rectangle(this.x,this.y,this.width,this.height);},move:function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x+=x;this.y+=y;return this;},moveTo:function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x=x;this.y=y;return this;},getOverlap:function(rectangle){var x2,y2,rx2,ry2,crop;x2=this.x+this.width;y2=this.y+this.height;rx2=rectangle.x+rectangle.width;ry2=rectangle.y+rectangle.height;crop=new Math.Rectangle();crop.x=rectangle.x>this.x?rectangle.x:this.x;crop.y=rectangle.y>this.y?rectangle.y:this.y;x2=rx2>x2?x2:rx2;y2=ry2>y2?y2:ry2;crop.width=x2-crop.x;crop.height=y2-crop.y;return crop.width<=0||crop.height<=0?false:crop;},scale:function(scaleH,scaleV){if(typeof scaleH!=='number'){throw new Error('Argument scaleH should be of type Number');}
scaleV=scaleV!==undefined?scaleV:scaleH;this.width*=scaleH;this.height*=scaleV;return this;},getBoundingRectangle:function(rectangle){var x2,y2,rx2,ry2,crop;x2=this.x+this.width;y2=this.y+this.height;rx2=rectangle.x+rectangle.width;ry2=rectangle.y+rectangle.height;crop=new Math.Rectangle();crop.x=rectangle.x<this.x?rectangle.x:this.x;crop.y=rectangle.y<this.y?rectangle.y:this.y;x2=rx2<x2?x2:rx2;y2=ry2<y2?y2:ry2;crop.width=x2-crop.x;crop.height=y2-crop.y;return crop;},getPolygon:function(){return new Math.Polygon(this.getPoints());},getPoints:function(){return[new Math.Vector(this.x,this.y),new Math.Vector(this.x+this.width,this.y),new Math.Vector(this.x+this.width,this.y+this.height),new Math.Vector(this.x,this.y+this.height)];},getArea:function(){return this.width*this.height;},getDiagonal:function(){return Math.sqrt(Math.pow(this.width,2)+Math.pow(this.height,2));},getDistance:function(object){return this.getPolygon().getDistance(object);},contains:function(object){if(object.implements(Math.Rectangle)){return this.contains(new Math.Vector(object.x,object.y))&&this.contains(new Math.Vector(object.x+object.width,object.y+object.height));}
if(object.implements(Math.Line)){return this.contains(object.a)&&this.contains(object.b);}
if(object.implements(Math.Vector)){return(object.x>this.x&&object.x<this.x+this.width&&object.y>this.y&&object.y<this.y+this.height)}
return this.getPolygon().contains(object);},intersects:function(object){return this.getPolygon().intersects(object);}});new Class('Math.Polygon',{Polygon:function(points){this.setFromPoints(points);},setFromPoints:function(points){this.points=points;return this;},setFromCoordinates:function(x1,y1,x2,y2,x3,y3){var numPoints,i,x,y;numPoints=Math.floor(arguments.length/2);this.points=[];for(i=0;i<numPoints;i++){x=arguments[i*2];y=arguments[i*2+1];if(typeof x!=='number'||typeof y!=='number'){throw new Error('All arguments should be of type: Number');}
this.points.push(new Math.Vector(x,y));}
return this;},move:function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type Number');}
return this.add(new Math.Vector(x,y));},add:function(vector){if(!vector.implements(Math.Vector)){throw new Error('Argument vector should be of type Vector');}
var i;for(i=0;i<this.points.length;i++){this.points[i].add(vector);}
return this;},rotate:function(direction){if(typeof direction!=='number'){throw new Error('Argument direction should be of type Number');}
var i;for(i=0;i<this.points.length;i++){this.points[i].rotate(direction);}
return this;},scale:function(scaleH,scaleV){var i;for(i=0;i<this.points.length;i++){this.points[i].scale(scaleH,scaleV);}
return this;},copy:function(){return new Math.Polygon(this.getPoints());},getPoints:function(){var points,i;points=[];for(i=0;i<this.points.length;i++){points.push(this.points[i].copy());}
return points;},getLines:function(){var lines,points,i,to;lines=[];points=this.points;for(i=0;i<points.length;i++){to=i===points.length-1?0:i+1;lines.push(new Math.Line(points[i],points[to]));}
return lines;},getBoundingRectangle:function(){if(this.points.length===0){throw new Error('Cannot create bounding rectangle for pointless polygon');}
var startVector,endVector,i;startVector=new Math.Vector(this.points[0].x,this.points[0].y);endVector=startVector.copy();for(i=0;i<this.points.length;i++){startVector.x=Math.min(this.points[i].x,startVector.x);startVector.y=Math.min(this.points[i].y,startVector.y);endVector.x=Math.max(this.points[i].x,endVector.x);endVector.y=Math.max(this.points[i].y,endVector.y);}
return new Math.Rectangle().setFromVectors(startVector,endVector.subtract(startVector));},getDistance:function(object){var dist,lines,objLines,i,ii,pVector;dist=2E+10308;lines=this.getLines();if(object.implements(Math.Vector)){for(i=0;i<lines.length;i++){dist=Math.min(dist,lines[i].getDistance(object));if(dist<0){break;}}
return dist;}
else if(object.implements(Math.Line)){for(i=0;i<lines.length;i++){dist=Math.min(dist,lines[i].getDistance(object));if(dist<0){break;}}
return dist;}
else if(object.implements(Math.Circle)){pVector=new Math.Vector(object.x,object.y);for(i=0;i<lines.length;i++){dist=Math.min(dist,lines[i].getDistance(pVector));if(dist<0){break;}}
return Math.max(0,dist-object.radius);}
else if(object.implements(Math.Rectangle)){return object.getDistance(this);}
else if(object.implements(Math.Polygon)){objLines=object.getLines();for(i=0;i<lines.length;i++){for(ii=0;ii<objLines.length;ii++){dist=Math.min(dist,lines[i].getDistance(objLines[ii]));if(dist<0){break;}}
if(dist<0){break;}}
return dist;}
else{throw new Error('Argument object should be of type: Vector, Line, Circle, Rectangle or Polygon');}},contains:function(object){if(object.implements(Math.Vector)){return this.intersects(new Math.Line().setFromCoordinates(-123456,-98765,object.x,object.y),true)%2;}
else if(object.implements(Math.Line)){return!this.intersects(object)&&this.contains(object.a);}
else if(object.implements(Math.Circle)){if(this.contains(new Math.Vector(object.x,object.y))){return!this.intersects(object);}
else{return false;}}
else if(object.implements(Math.Rectangle)){return this.contains(object.getPolygon());}
else if(object.implements(Math.Polygon)){return object.points.length>0&&!this.intersects(object)&&this.contains(object.points[0]);}
else{throw new Error('Argument object has to be of type: Vector, Line, Rectangle or Polygon');}},intersects:function(object,countIntersections){var intersectionCount,lines,line,oLines,oLine,i,ii;countIntersections=countIntersections!==undefined?countIntersections:false;if(countIntersections){intersectionCount=0;}
if(object.implements(Math.Line)){lines=this.getLines();for(i=0;i<lines.length;i++){line=lines[i];if(line.intersects(object)){if(countIntersections){intersectionCount++;}
else{return true;}}}}
else if(object.implements(Math.Circle)){lines=this.getLines();for(i=0;i<lines.length;i++){if(object.intersects(lines[i])){if(countIntersections){intersectionCount++;}
else{return true;}}}}
else if(object.implements(Math.Rectangle)){return this.intersects(object.getPolygon());}
else if(object.implements(Math.Polygon)){lines=this.getLines();oLines=object.getLines();for(i=0;i<lines.length;i++){line=lines[i];for(ii=0;ii<oLines.length;ii++){oLine=oLines[ii];if(line.intersects(oLine)){if(countIntersections){intersectionCount++;}
else{return true;}}}}}
else{throw new Error('Argument object has to be of type: Line, Circle, Rectangle or Polygon');}
if(countIntersections){return intersectionCount;}
else{return false;}},});new Class('View.Child',[Lib.Animatable],{Child:function(){if(engine.enableRedrawRegions){this.ChildInitWithRedrawRegions();}
else{this.ChildInitWithoutRedrawRegions();}
engine.registerObject(this);},ChildInitWithoutRedrawRegions:function(){this.x=0;this.y=0;this.opacity=1;this.direction=0;this.size=1;this.widthModifier=1;this.heightModifier=1;this.offset=new Math.Vector();},ChildInitWithRedrawRegions:function(){this.hasChanged=false;var hidden;hidden={x:0,y:0,opacity:1,direction:0,size:1,widthModifier:1,heightModifier:1,offset:undefined,parentObject:this};Object.defineProperty(this,'x',{get:function(){return hidden.x;},set:function(value){if(hidden.x!==value){hidden.x=value;this.onAfterChange();}}});Object.defineProperty(this,'y',{get:function(){return hidden.y;},set:function(value){if(hidden.y!==value){hidden.y=value;this.onAfterChange();}}});Object.defineProperty(this,'opacity',{get:function(){return hidden.opacity;},set:function(value){if(hidden.opacity!==value){hidden.opacity=value;this.onAfterChange();}}});Object.defineProperty(this,'direction',{get:function(){return hidden.direction;},set:function(value){if(hidden.direction!==value){hidden.direction=value;this.onAfterChange();}}});Object.defineProperty(this,'size',{get:function(){return hidden.size;},set:function(value){if(hidden.size!==value){hidden.size=value;this.onAfterChange();}}});Object.defineProperty(this,'widthModifier',{get:function(){return hidden.widthModifier;},set:function(value){if(hidden.widthModifier!==value){hidden.widthModifier=value;this.onAfterChange();}}});Object.defineProperty(this,'heightModifier',{get:function(){return hidden.heightModifier;},set:function(value){if(hidden.heightModifier!==value){hidden.heightModifier=value;this.onAfterChange();}}});Object.defineProperty(this,'offset',{get:function(){return hidden.offset;},set:function(value){if(hidden.offset!==value){hidden.offset=value;var off={x:value.x,y:value.y,};Object.defineProperty(hidden.offset,'x',{get:function(){return off.x;},set:function(value){if(off.x!==value){off.x=value;hidden.parentObject.onAfterChange();}}});Object.defineProperty(hidden.offset,'y',{get:function(){return off.y;},set:function(value){if(off.y!==value){off.y=value;hidden.parentObject.onAfterChange();}}});this.onAfterChange();}}});this.offset=new Math.Vector();},onAfterChange:function(){if(!this.hasChanged&&this.isDrawn()){this.lastRedrawRegion=this.currentRedrawRegion;this.currentRedrawRegion=this.getCombinedRedrawRegion?this.getCombinedRedrawRegion():this.getRedrawRegion();if(this.currentRedrawRegion){engine.redrawObjects.push(this);this.hasChanged=true;}}},isDrawn:function(){var p;p=this.getParents().pop();return this.isVisible()&&(p===engine.currentRoom||p===engine.masterRoom);},getRoomPosition:function(){var pos,parents,i;pos=new Math.Vector(this.x,this.y);parents=this.getParents();for(i=0;i<parents.length;i++){pos.move(parents[i].x,parents[i].y);}
return pos;},getParents:function(){var parent,parents;parents=[];parent=this;while((parent=parent.parent)!==undefined){parents.push(parent);}
return parents;},getRoom:function(){var parents,ancestor;parents=this.getParents();if(parents.length===0){return false;}
ancestor=parents[parents.length-1];return ancestor.implements(Engine.Room)?ancestor:false;},moveTo:function(x,y){this.x=x||0;this.y=y||0;},getDistanceTo:function(child){return this.getRoomPosition().subtract(child.getRoomPosition()).getLength();},getDirectionTo:function(child){return child.getRoomPosition().subtract(this.getRoomPosition()).getDirection();},transformCanvasContext:function(c){var x,y;if(engine.avoidSubPixelRendering){x=Math.round(this.x);y=Math.round(this.y);}
else{x=this.x;y=this.y;}
c.globalAlpha=this.opacity;if(this.composite!=='source-over'){c.globalCompositeOperation=this.composite;}
if(x!==0||y!==0){c.translate(x,y);}
if(this.direction!==0){c.rotate(this.direction);}
if(this.size!==1||this.widthModifier!==1||this.heightModifier!==1){c.scale(this.widthModifier*this.size,this.heightModifier*this.size);}},restoreCanvasContext:function(c){var x,y;if(engine.avoidSubPixelRendering){x=Math.round(this.x);y=Math.round(this.y);}
else{x=this.x;y=this.y;}
if(this.size!==1||this.widthModifier!==1||this.heightModifier!==1){c.scale(1/(this.widthModifier*this.size),1/(this.heightModifier*this.size));}
if(this.direction!==0){c.rotate(-this.direction);}
if(x!==0||y!==0){c.translate(-x,-y);}
if(this.composite!=='source-over'){c.globalCompositeOperation='source-over';}
c.globalAlpha=this.opacity;},isVisible:function(){return!(this.size===0||this.widthModifier===0||this.heightModifier===0);}});new Class('View.Line',[Math.Line,View.Child],{Line:function(startVector,endVector,strokeStyle,lineWidth,lineCap){this.Child();if(engine.enableRedrawRegions){this.LineInitWithRedrawRegions(startVector,endVector,strokeStyle,lineWidth,lineCap);}
else{this.LineInitWithoutRedrawRegions(startVector,endVector,strokeStyle,lineWidth,lineCap);}},LineInitWithoutRedrawRegions:function(startVector,endVector,strokeStyle,lineWidth,lineCap){this.strokeStyle=strokeStyle||"#000";this.lineWidth=lineWidth||1;this.lineCap=lineCap||'butt';this.setFromVectors(startVector||new Math.Vector(),endVector||new Math.Vector());},LineInitWithRedrawRegions:function(startVector,endVector,strokeStyle,lineWidth,lineCap){var hidden;hidden={strokeStyle:strokeStyle||"#000",lineWidth:lineWidth||1,lineCap:lineCap||'butt',a:undefined,b:undefined,parentObject:this};Object.defineProperty(this,'strokeStyle',{get:function(){return hidden.strokeStyle;},set:function(value){if(hidden.strokeStyle!==value){hidden.strokeStyle=value;this.onAfterChange();}}});Object.defineProperty(this,'lineCap',{get:function(){return hidden.lineCap;},set:function(value){if(hidden.lineCap!==value){hidden.lineCap=value;this.onAfterChange();}}});Object.defineProperty(this,'lineWidth',{get:function(){return hidden.lineWidth;},set:function(value){if(hidden.lineWidth!==value){hidden.lineWidth=value;this.onAfterChange();}}});Object.defineProperty(this,'a',{get:function(){return hidden.a;},set:function(value){if(hidden.a!==value){hidden.a=value;var xHidden,yHidden;xHidden=hidden.a.x;yHidden=hidden.a.y;Object.defineProperty(hidden.a,'x',{get:function(){return xHidden;},set:function(value){if(xHidden!==value){xHidden=value;hidden.parentObject.onAfterChange();}}});Object.defineProperty(hidden.a,'y',{get:function(){return yHidden;},set:function(value){if(yHidden!==value){yHidden=value;hidden.parentObject.onAfterChange();}}});this.onAfterChange();}}});Object.defineProperty(this,'b',{get:function(){return hidden.b;},set:function(value){if(hidden.b!==value){hidden.b=value;var xHidden,yHidden;xHidden=hidden.b.x;yHidden=hidden.b.y;Object.defineProperty(hidden.b,'x',{get:function(){return xHidden;},set:function(value){if(xHidden!==value){xHidden=value;hidden.parentObject.onAfterChange();}}});Object.defineProperty(hidden.b,'y',{get:function(){return yHidden;},set:function(value){if(yHidden!==value){yHidden=value;hidden.parentObject.onAfterChange();}}});this.onAfterChange();}}});this.setFromVectors(startVector||new Math.Vector(),endVector||new Math.Vector());},getRedrawRegion:function(){var box,parents,parent,i,ln;box=this.getPolygon();parents=this.getParents();parents.unshift(this);for(i=0;i<parents.length;i++){parent=parents[i];box.scale(parent.size*parent.widthModifier,parent.size*parent.heightModifier);box.rotate(parent.direction);box.move(parent.x,parent.y);}
box=box.getBoundingRectangle();ln=Math.ceil(this.lineWidth/2);box.x=Math.floor(box.x-ln);box.y=Math.floor(box.y-ln);box.width=Math.ceil(box.width+ln*2+1);box.height=Math.ceil(box.height+ln*2+1);return box;},drawCanvas:function(c){c.strokeStyle=this.strokeStyle;c.globalAlpha=this.opacity;c.beginPath();c.moveTo(this.a.x,this.a.y);c.lineTo(this.b.x,this.b.y);c.lineWidth=this.lineWidth;c.lineCap=this.lineCap;c.stroke();}});new Class('View.Circle',[Math.Circle,View.Child],{Circle:function(x,y,radius,fillStyle,strokeStyle,lineWidth){this.Child();if(engine.enableRedrawRegions){this.CircleInitWithRedrawRegions(x,y,radius,fillStyle,strokeStyle,lineWidth);}
else{this.CircleInitWithoutRedrawRegions(x,y,radius,fillStyle,strokeStyle,lineWidth);}},CircleInitWithoutRedrawRegions:function(x,y,radius,fillStyle,strokeStyle,lineWidth){this.radius=radius;this.fillStyle=fillStyle||"#000";this.strokeStyle=strokeStyle||"#000";this.lineWidth=lineWidth||1;this.set(x,y,radius);},CircleInitWithRedrawRegions:function(x,y,radius,fillStyle,strokeStyle,lineWidth){var hidden;hidden={radius:radius,fillStyle:fillStyle||"#000",strokeStyle:strokeStyle||"#000",lineWidth:lineWidth||1};Object.defineProperty(this,'radius',{get:function(){return hidden.radius;},set:function(value){if(hidden.radius!==value){hidden.radius=value;this.onAfterChange();}}});Object.defineProperty(this,'fillStyle',{get:function(){return hidden.fillStyle;},set:function(value){if(hidden.fillStyle!==value){hidden.fillStyle=value;this.onAfterChange();}}});Object.defineProperty(this,'strokeStyle',{get:function(){return hidden.strokeStyle;},set:function(value){if(hidden.strokeStyle!==value){hidden.strokeStyle=value;this.onAfterChange();}}});Object.defineProperty(this,'lineWidth',{get:function(){return hidden.lineWidth;},set:function(value){if(hidden.lineWidth!==value){hidden.lineWidth=value;this.onAfterChange();}}});this.set(x,y,radius);},getRedrawRegion:function(){var rect,ln;ln=Math.ceil(this.lineWidth/2);rect=new Math.Rectangle(Math.floor(this.x-(this.radius+ln+5)),Math.floor(this.y-(this.radius+ln+5)),Math.ceil((this.radius+ln+5)*2),Math.ceil((this.radius+ln+5)*2));return rect.add(this.parent.getRoomPosition());},drawCanvas:function(c){c.strokeStyle=this.strokeStyle;c.fillStyle=this.fillStyle;c.beginPath();c.arc(-this.offset.x,-this.offset.y,this.radius,0,Math.PI*2,true);c.lineWidth=this.lineWidth;c.globalAlpha=this.opacity;c.stroke();c.fill();}});new Class('View.Rectangle',[Math.Rectangle,View.Child],{Rectangle:function(x,y,width,height,fillStyle,strokeStyle,lineWidth){this.Child();if(engine.enableRedrawRegions){this.RectangleInitWithRedrawRegions(x,y,width,height,fillStyle,strokeStyle,lineWidth);}
else{this.RectangleInitWithoutRedrawRegions(x,y,width,height,fillStyle,strokeStyle,lineWidth);}},RectangleInitWithoutRedrawRegions:function(x,y,width,height,fillStyle,strokeStyle,lineWidth){this.width=width||0;this.height=height||0;this.fillStyle=fillStyle||"#000";this.strokeStyle=strokeStyle||"#000";this.lineWidth=lineWidth||1;this.set(x,y,width,height);},RectangleInitWithRedrawRegions:function(x,y,width,height,fillStyle,strokeStyle,lineWidth){var hidden;hidden={width:width||0,height:height||0,fillStyle:fillStyle||"#000",strokeStyle:strokeStyle||"#000",lineWidth:lineWidth||1};Object.defineProperty(this,'width',{get:function(){return hidden.width;},set:function(value){if(hidden.width!==value){hidden.width=value;this.onAfterChange();}}});Object.defineProperty(this,'height',{get:function(){return hidden.height;},set:function(value){if(hidden.height!==value){hidden.height=value;this.onAfterChange();}}});Object.defineProperty(this,'fillStyle',{get:function(){return hidden.fillStyle;},set:function(value){if(hidden.fillStyle!==value){hidden.fillStyle=value;this.onAfterChange();}}});Object.defineProperty(this,'strokeStyle',{get:function(){return hidden.strokeStyle;},set:function(value){if(hidden.strokeStyle!==value){hidden.strokeStyle=value;this.onAfterChange();}}});Object.defineProperty(this,'lineWidth',{get:function(){return hidden.lineWidth;},set:function(value){if(hidden.lineWidth!==value){hidden.lineWidth=value;this.onAfterChange();}}});this.set(x,y,width,height);},getRedrawRegion:function(){var ln;var rect=this.copy();ln=Math.ceil(this.lineWidth/2);rect.x-=ln;rect.y-=ln;rect.width+=ln*2;rect.height+=ln*2;return rect.add(this.parent.getRoomPosition());},drawCanvas:function(c){c.save();c.translate(-this.offset.x,-this.offset.y);c.strokeStyle=this.strokeStyle;c.fillStyle=this.fillStyle;c.beginPath();c.moveTo(0,0);c.lineTo(this.width,0);c.lineTo(this.width,this.height);c.lineTo(0,this.height);c.closePath();c.lineWidth=this.lineWidth;c.fill();c.stroke();c.restore();}});new Class('View.Polygon',[Math.Polygon,View.Child],{Polygon:function(points,fillStyle,strokeStyle,lineWidth){this.Child();this.setFromPoints(points);this.fillStyle=fillStyle||"#000";this.strokeStyle=strokeStyle||"#000";this.lineWidth=lineWidth||1;this.opacity=1;this.closed=1;this.lineDash=[];},getRedrawRegion:function(){var ln;var rect=this.getBoundingRectangle();ln=Math.ceil(this.lineWidth/2);rect.x-=ln;rect.y-=ln;rect.width+=ln*2;rect.height+=ln*2;return rect.add(this.parent.getRoomPosition());},drawCanvas:function(c){var i,len;c.translate(-this.offset.x,-this.offset.y);c.strokeStyle=this.strokeStyle;c.fillStyle=this.fillStyle;if(this.lineDash!==[]&&c.setLineDash){c.setLineDash(this.lineDash);}
c.beginPath();len=this.points.length;for(i=0;i<len;i++){c.lineTo(this.points[i].x,this.points[i].y);}
c.lineWidth=this.lineWidth;c.globalAlpha=this.opacity;if(this.closed){c.closePath();c.fill();c.stroke();}
else{c.fill();c.stroke();c.closePath();}}});new Class('View.Container',[View.Child],{Container:function(child1,child2,child3){this.children=[];this.Child();this.parent=undefined;this.drawCacheCanvas=document.createElement('canvas');this.drawCacheCtx=this.drawCacheCanvas.getContext('2d');this.drawCacheEnabled=false;this.drawCacheOffset=new Math.Vector();this.addChildren.apply(this,Array.prototype.slice.call(arguments));},addChildren:function(child1,child2){if(arguments.length===0){return;}
var i,child;for(i=0;i<arguments.length;i++){child=arguments[i];if(!child.implements(View.Child)){throw new Error('Argument child has to be of type: View.Child');}
if(child.parent){child.parent.removeChildren(child);}
this.children.push(child);child.parent=this;engine.enableRedrawRegions&&child.onAfterChange();if(child.refreshSource){child.refreshSource();}}
return arguments;},insertBelow:function(insertChildren,child){if(insertChildren===undefined){throw new Error('Missing argument: insertChildren');}
if(child===undefined){throw new Error('Missing argument: child');}
var arr,i;if(!Array.prototype.isPrototypeOf(insertChildren)){arr=[];arr.push(insertChildren);insertChildren=arr;}
if((i=this.children.indexOf(child))!==-1){this.children.splice.apply(this.children,[i,0].concat(insertChildren));}
for(i=0;i<insertChildren.length;i++){child=insertChildren[i];if(!child.implements(View.Child)){throw new Error('Argument child has to be of type: Child');}
child.parent=this;engine.enableRedrawRegions&&child.onAfterChange();if(child.refreshSource){child.refreshSource();}}
return insertChildren;},getChildren:function(){var ret,i;ret=[];for(i=0;i<this.children.length;i++){ret.push(this.children[i]);}
return ret;},setTheme:function(themeName,recursive){if(themeName){if(loader.themes[themeName]===undefined){throw new Error('Trying to set nonexistent theme: '+themeName);}}
else{themeName=undefined;}
var i;recursive=recursive!==undefined?recursive:false;this.theme=themeName;if(this.refreshSource){this.refreshSource();}
if(recursive){for(i=0;i<this.children.length;i++){this.children[i].setTheme(undefined,true);}}
else{this.applyToThisAndChildren(function(){if(this.refreshSource){this.refreshSource();}});}},applyToThisAndChildren:function(func){if(func===undefined){throw new Error('Missing argument: function');}
var i;func.call(this);for(i=0;i<this.children.length;i++){if(this.children[i].applyToThisAndChildren){this.children[i].applyToThisAndChildren(func);}
else{func.call(this.children[i]);}}},setDrawCache:function(enabled){enabled=enabled===true;if(enabled===this.drawCacheEnabled){return;}
if(enabled){this.cacheDrawing();}
this.drawCacheEnabled=enabled;},cacheDrawing:function(){var drawRegion;drawRegion=this.getCombinedRedrawRegion();drawRegion.move(-this.x,-this.y);if(drawRegion){this.drawCacheOffset=new Math.Vector(drawRegion.x,drawRegion.y);this.drawCacheCanvas.width=drawRegion.width;this.drawCacheCanvas.height=drawRegion.height;this.draw(this.drawCacheCtx,this.drawCacheOffset.copy().move(this.x,this.y),drawRegion,true);}},getCombinedRedrawRegion:function(){var box,addBox,i,child;if(this.getRedrawRegion){box=this.getRedrawRegion();}
for(i=0;i<this.children.length;i++){child=this.children[i];if(child.getCombinedRedrawRegion){addBox=child.getCombinedRedrawRegion();}
else{addBox=child.getRedrawRegion();}
child.currentRedrawRegion=addBox;if(addBox){if(box){box=box.getBoundingRectangle(addBox);}
else{box=addBox;}}}
return box;},removeChildren:function(child1,child2){if(arguments.length===0){throw new Error('This function needs at least one argument');}
var i,childId,removed;removed=[];i=arguments.length;while(i>-1){childId=this.children.indexOf(arguments[i]);if(childId!==-1){this.children.splice(childId,1);removed.push(arguments[i]);arguments[i].parent=undefined;}
i--;}
return removed;},removeAllChildren:function(purge){purge=purge!==undefined?purge:true;var rmChild;rmChild=this.children.splice(0,this.children.length);rmChild.forEach(function(){this.parent=undefined;if(purge){engine.purge(this);}});},draw:function(c,area){if(engine.enableRedrawRegions){this.drawRedrawRegions(c,area);}
else{this.drawWholeCanvas(c);}},drawRedrawRegions:function(c,area){var i,len,child;if(!this.isVisible()){return;}
this.transformCanvasContext(c);if(this.drawCanvas){if(!this.currentRedrawRegion){this.currentRedrawRegion=this.getCombinedRedrawRegion();}
if(this.currentRedrawRegion.getOverlap(area)){engine.drawCalls++;this.drawCanvas(c);if(engine.drawBoundingBoxes&&this.drawBoundingBox){this.drawBoundingBox(c);}
if(engine.drawMasks&&this.drawMask){this.drawMask(c);}}}
len=this.children.length;for(i=0;i<len;i++){child=this.children[i];if(child.draw){child.draw(c,area);}
else if(child.isVisible()&&child.currentRedrawRegion.getOverlap(area)){engine.drawCalls++;child.transformCanvasContext(c);child.drawCanvas(c);child.restoreCanvasContext(c);}}
this.restoreCanvasContext(c);},drawWholeCanvas:function(c){var i,len,child;if(!this.isVisible()){return;}
this.transformCanvasContext(c);if(this.drawCanvas){engine.drawCalls++;this.drawCanvas(c);if(engine.drawBoundingBoxes&&this.drawBoundingBox){this.drawBoundingBox(c);}
if(engine.drawMasks&&this.drawMask){this.drawMask(c);}}
len=this.children.length;for(i=0;i<len;i++){child=this.children[i];if(child.draw){child.draw(c);}
else if(child.isVisible()){engine.drawCalls++;child.transformCanvasContext(c);child.drawCanvas(c);child.restoreCanvasContext(c);}}
this.restoreCanvasContext(c);},drawCanvas:undefined,getRedrawRegion:undefined});new Class('View.Sprite',[View.Container,Lib.Animatable],{Sprite:function(source,x,y,direction,additionalProperties){if(source===undefined){throw new Error('Missing argument: source');}
var offset;this.Container();this.x=x!==undefined?x:0;this.y=y!==undefined?y:0;this.source=source;this.direction=direction!==undefined?direction:0;this.imageNumber=0;this.imageLength=1;this.animationSpeed=30;this.animationLastSwitch=engine.gameTime;this.animationLoops=true;this.clipWidth;this.clipHeight;offset=OFFSET_MIDDLE_CENTER;if(additionalProperties&&additionalProperties.offset){if(typeof additionalProperties.offset==='string'){offset=additionalProperties.offset;delete additionalProperties.offset;}
else{offset=undefined;}}
Object.defineProperty(this,'width',{get:function(){return Math.abs(this.clipWidth*this.size*this.widthModifier);},set:function(value){var sign=this.widthModifier>0?1:-1;this.widthModifier=sign*Math.abs(value/(this.clipWidth*this.size));return value;}});Object.defineProperty(this,'height',{get:function(){return Math.abs(this.clipHeight*this.size*this.heightModifier);},set:function(value){var sign=this.heightModifier>0?1:-1;this.heightModifier=sign*Math.abs(value/(this.clipHeight*this.size));return value}});this.importProperties(additionalProperties);if(!this.refreshSource()){throw new Error('Sprite source was not successfully loaded: '+source);}
if(offset){if([OFFSET_TOP_LEFT,OFFSET_MIDDLE_LEFT,OFFSET_BOTTOM_LEFT].indexOf(offset)!==-1){this.offset.x=0;}
else if([OFFSET_TOP_CENTER,OFFSET_MIDDLE_CENTER,OFFSET_BOTTOM_CENTER].indexOf(offset)!==-1){this.offset.x=this.bm.width/this.imageLength/2;}
else if([OFFSET_TOP_RIGHT,OFFSET_MIDDLE_RIGHT,OFFSET_BOTTOM_RIGHT].indexOf(offset)!==-1){this.offset.x=this.bm.width/this.imageLength;}
if([OFFSET_TOP_LEFT,OFFSET_TOP_CENTER,OFFSET_TOP_RIGHT].indexOf(offset)!==-1){this.offset.y=0;}
else if([OFFSET_MIDDLE_LEFT,OFFSET_MIDDLE_CENTER,OFFSET_MIDDLE_RIGHT].indexOf(offset)!==-1){this.offset.y=this.bm.height/2;}
else if([OFFSET_BOTTOM_LEFT,OFFSET_BOTTOM_CENTER,OFFSET_BOTTOM_RIGHT].indexOf(offset)!==-1){this.offset.y=this.bm.height;}}
if(engine.avoidSubPixelRendering){this.offset.x=Math.round(this.offset.x);this.offset.y=Math.round(this.offset.y);}},getTheme:function(){var parent,theme;theme=this.theme;parent=this;while(theme===undefined){if(parent.theme){theme=parent.theme;}
else{if(parent.parent){parent=parent.parent;}
else{break;}}}
return theme?theme:engine.defaultTheme;},refreshSource:function(){var theme;theme=this.getTheme();this.bm=loader.getImage(this.source,theme);this.imageLength=this.bm.imageLength;this.imageNumber=Math.min(this.imageLength-1,this.imageNumber);this.clipWidth=Math.floor(this.bm.width/this.imageLength);this.clipHeight=this.bm.height;return this.bm;},setSource:function(source){if(source===undefined){throw new Error('Missing argument: source');}
if(this.source===source){return;}
this.source=source;this.refreshSource();},drawCanvas:function(c,cameraOffset){var offX,offY;if(engine.avoidSubPixelRendering){offX=Math.round(this.offset.x);offY=Math.round(this.offset.y);}
else{offX=this.offset.x;offY=this.offset.y;}
if(this.imageLength!==1&&this.animationSpeed!==0){if(engine.gameTime-this.animationLastSwitch>1000/this.animationSpeed){this.imageNumber=this.imageNumber+(this.animationSpeed>0?1:-1);this.animationLastSwitch=engine.gameTime;if(this.imageNumber===this.imageLength){this.imageNumber=this.animationLoops?0:this.imageLength-1;}
else if(this.imageNumber===-1){this.imageNumber=this.animationLoops?this.imageLength-1:0;}}}
c.drawImage(this.bm,(this.clipWidth+this.bm.spacing)*this.imageNumber,0,this.clipWidth,this.clipHeight,-offX,-offY,this.clipWidth,this.clipHeight);},getRedrawRegion:function(){var box,parents,parent,i;box=new Math.Rectangle(-this.offset.x,-this.offset.y,this.clipWidth,this.clipHeight).getPolygon();parents=this.getParents();parents.unshift(this);for(i=0;i<parents.length;i++){parent=parents[i];box.scale(parent.size*parent.widthModifier,parent.size*parent.heightModifier);box.rotate(parent.direction);box.move(parent.x,parent.y);}
box=box.getBoundingRectangle();box.x=Math.floor(box.x);box.y=Math.floor(box.y);box.width=Math.ceil(box.width+1);box.height=Math.ceil(box.height+1);return box;}});new Class('View.Collidable',[View.Sprite],{Collidable:function(source,x,y,direction,additionalProperties){this.Sprite(source,x,y,direction,additionalProperties);this.mask=this.mask?this.mask:loader.getMask(source,this.getTheme());this.collisionResolution=this.collisionResolution?this.collisionResolution:engine.defaultCollisionResolution;},boundingBoxCollidesWith:function(objects,getCollidingObjects){if(objects===undefined){throw new Error('Missing argument: objects');}
if(!Array.prototype.isPrototypeOf(objects)){objects=[objects];}
getCollidingObjects=getCollidingObjects!==undefined?getCollidingObjects:false;var pol1,pol2,i,collidingObjects,obj;pol1=this.getTransformedBoundingBox();collidingObjects=[];for(i=0;i<objects.length;i++){obj=objects[i];pol2=obj.getTransformedBoundingBox();if(pol1.intersects(pol2)||pol1.contains(pol2.points[0])||pol2.contains(pol1.points[0])){if(getCollidingObjects){collidingObjects.push(obj);}
else{return true;}}}
if(collidingObjects.length){return collidingObjects;}
else{return false;}},getTransformedBoundingBox:function(){var box,parents,parent,i;box=this.mask.bBox.copy().move(-this.offset.x,-this.offset.y);parents=this.getParents();parents.unshift(this);for(i=0;i<parents.length;i++){parent=parents[i];if(parent.size!==1||parent.widthModifier!==1||parent.heightModifier!==1){box.scale(parent.size*parent.widthModifier,parent.size*parent.heightModifier);}
if(parent.direction!==0){box.rotate(parent.direction);}
if(parent.x!==0||parent.y!==0){box.move(parent.x,parent.y);}}
return box;},maskCollidesWith:function(objects,getCollisionPosition){if(objects===undefined){throw new Error('Missing argument: objects');}
var canvas,mask,ctx,roomPos,parents,obj,bitmap,i,ii,data,length,pixel,pxArr,x,y,avX,avY,retVector;if(!Array.prototype.isPrototypeOf(objects)){objects=[objects];}
getCollisionPosition=getCollisionPosition!==undefined?getCollisionPosition:false;mask=this.mask;canvas=document.createElement('canvas');canvas.width=Math.ceil(this.clipWidth);canvas.height=Math.ceil(this.clipHeight);canvas.id='colCanvas';c=canvas.getContext('2d');c.fillStyle="#FFF";c.fillRect(0,0,canvas.width,canvas.height);c.save();c.translate(this.offset.x,this.offset.y);parents=this.getParents();parents.unshift(this);for(i=0;i<parents.length;i++){parents[i].restoreCanvasContext(c);}
for(i=0;i<objects.length;i++){obj=objects[i];if(obj===this){continue;}
parents=obj.getParents();parents.reverse();parents.push(obj);parents.forEach(function(){this.transformCanvasContext(c);})
c.drawImage(obj.mask,(obj.clipWidth+obj.bm.spacing)*obj.imageNumber,0,obj.clipWidth,obj.clipHeight,-obj.offset.x,-obj.offset.y,obj.clipWidth,obj.clipHeight);parents.reverse();parents.forEach(function(){this.restoreCanvasContext(c);});}
c.restore();c.globalAlpha=0.5;c.fillRect(0,0,canvas.width,canvas.height);c.translate(canvas.width/2,canvas.height/2);c.drawImage(mask,(this.clipWidth+this.bm.spacing)*this.imageNumber,0,this.clipWidth,this.clipHeight,-this.clipWidth/2,-this.clipHeight/2,this.clipWidth,this.clipHeight);bitmap=c.getImageData(0,0,canvas.width,canvas.height);data=bitmap.data;length=data.length/4;pxArr=[];for(pixel=0;pixel<length;pixel+=this.collisionResolution){x=pixel%bitmap.width;if(this.collisionResolution>1&&x<this.collisionResolution){y=Math.floor(pixel/bitmap.width);pixel-=x;if(y%2){pixel+=Math.floor(this.collisionResolution/2);}}
if(data[pixel*4]<127){if(getCollisionPosition){if(y===undefined){y=Math.floor(pixel/bitmap.width);}
pxArr.push({x:x,y:y});}
else{return true;}}}
if(pxArr.length>0){pxArr=pxArr.sortByNumericProperty('x');avX=(pxArr[0].x+pxArr[pxArr.length-1].x)/2;pxArr=pxArr.sortByNumericProperty('y');avY=(pxArr[0].y+pxArr[pxArr.length-1].y)/2;avX-=this.offset.x;avY-=this.offset.y;avX/=this.size*this.widthModifier;avY/=this.size*this.heightModifier;retVector=new Math.Vector(avX,avY);retVector.rotate(this.direction);retVector.pixelCount=pxArr.length;return retVector;}
return false;},collidesWith:function(objects,getCollisionPosition,getCollidingObjects){if(objects===undefined){throw new Error('Missing argument: objects');}
var ret,i,position;if(!Array.prototype.isPrototypeOf(objects)){objects=[objects];}
getCollidingObjects=getCollidingObjects!==undefined?getCollidingObjects:false;if(this.size===0||this.widthModifier===0||this.heightModifier===0){return false;}
objects=this.boundingBoxCollidesWith(objects,true);if(objects===false){return false;}
if(!getCollisionPosition&&!getCollidingObjects){return this.maskCollidesWith(objects);}
else{ret={objects:[],positions:[],combinedPosition:false};if(getCollidingObjects===false){position=this.maskCollidesWith(objects,true);if(position){ret.positions.push(position);ret.combinedPosition=position.copy();ret.combinedPosition.pixelCount=0;}}
else{if(getCollisionPosition){for(i=0;i<objects.length;i++){position=this.maskCollidesWith(objects[i],true);if(position){ret.objects.push(objects[i]);ret.positions.push(position);}}
if(ret.positions.length){ret.combinedPosition=new Math.Vector();ret.combinedPosition.pixelCount=0;ret.positions.forEach(function(){ret.combinedPosition.add(this.scale(this.pixelCount));ret.combinedPosition.pixelCount+=this.pixelCount;});ret.combinedPosition.scale(1/ret.combinedPosition.pixelCount);}}
else{for(i=0;i<objects.length;i++){if(this.maskCollidesWith(objects[i])){ret.objects.push(objects[i]);}}}}}
if(ret.positions.length+ret.objects.length!==0){return ret;}
else{return false;}},drawBoundingBox:function(c){var pol;pol=this.mask.bBox.copy().move(-this.offset.x,-this.offset.y);c.beginPath();c.moveTo(pol.points[0].x,pol.points[0].y);c.lineTo(pol.points[1].x,pol.points[1].y);c.lineTo(pol.points[2].x,pol.points[2].y);c.lineTo(pol.points[3].x,pol.points[3].y);c.closePath();c.strokeStyle="#0F0";c.lineWidth=1;c.stroke();},drawMask:function(c){if(!this.mask){return;}
try{c.drawImage(this.mask,(this.clipWidth+this.bm.spacing)*this.imageNumber,0,this.clipWidth,this.clipHeight,-this.offset.x,-this.offset.y,this.clipWidth,this.clipHeight);}catch(e){;;engine.stopMainLoop();throw new Error(e);}
1}});new Class('View.TextBlock',[Lib.Animatable,View.Container],{TextBlock:function(string,x,y,width,additionalProperties){if(string===undefined){throw new Error('Missing argument: string');}
var offset;this.Container();this.x=x!==undefined?x:0;this.y=y!==undefined?y:0;this.clipWidth=parseInt(width,10)||200;this.lines=[];this.lineWidth=[];this.bm=document.createElement('canvas');this.bmCtx=this.bm.getContext('2d');this.bm.width=this.clipWidth;this.bm.height=10;var hidden;hidden={string:'',font:'normal 14px Verdana',alignment:'left',color:"#000000",lineHeight:0,};Object.defineProperty(this,'string',{get:function(){return hidden.string;},set:function(value){hidden.string=typeof value==='string'?value:value.toString();this.stringToLines();this.cacheRendering();engine.enableRedrawRegions&&this.onAfterChange();return value;}});Object.defineProperty(this,'font',{get:function(){return hidden.font;},set:function(value){if(typeof value!=='string'){throw new Error('font should be of type: string');}
if(value===hidden.font){return value;}
hidden.font=value;this.stringToLines();this.cacheRendering();engine.enableRedrawRegions&&this.onAfterChange();return value;}});Object.defineProperty(this,'alignment',{get:function(){return hidden.alignment;},set:function(value){if(['left','center','right'].indexOf(value)===-1){throw new Error('alignment should be one of the following: ALIGNMENT_LEFT, ALIGNMENT_CENTER, ALIGNMENT_RIGHT');}
if(value===hidden.alignment){return value;}
hidden.alignment=value;this.cacheRendering();engine.enableRedrawRegions&&this.onAfterChange();return value;}});Object.defineProperty(this,'color',{get:function(){return hidden.color;},set:function(value){if(!/#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})/.test(value)){throw new Error('color should be a CSS color string');}
if(value===hidden.color){return value;}
hidden.color=value;this.cacheRendering();engine.enableRedrawRegions&&this.onAfterChange();return value;}});Object.defineProperty(this,'lineHeight',{get:function(){return hidden.lineHeight;},set:function(value){hidden.lineHeight=typeof value!=="number"?value:parseFloat(value);this.calculateCanvasHeight();this.cacheRendering();engine.enableRedrawRegions&&this.onAfterChange();return value;}});if(additionalProperties&&additionalProperties.offset){if(typeof additionalProperties.offset==='string'){offset=additionalProperties.offset;delete additionalProperties.offset;}
else{offset=undefined;}}
Object.defineProperty(this,'width',{get:function(){return Math.abs(this.clipWidth*this.size*this.widthModifier);},set:function(value){var sign=this.widthModifier>0?1:-1;this.widthModifier=sign*Math.abs(value/(this.clipWidth*this.size));return value;}});Object.defineProperty(this,'height',{get:function(){return Math.abs(this.clipHeight*this.size*this.heightModifier);},set:function(value){var sign=this.heightModifier>0?1:-1;this.heightModifier=sign*Math.abs(value/(this.clipHeight*this.size));return value}});this.lineHeight=additionalProperties&&additionalProperties.lineHeight?additionalProperties.lineHeight:this.font.match(/[0.0-9]+/)*1.25;this.importProperties(additionalProperties);this.string=string;if(offset){if([OFFSET_TOP_LEFT,OFFSET_MIDDLE_LEFT,OFFSET_BOTTOM_LEFT].indexOf(offset)!==-1){this.offset.x=0;}
else if([OFFSET_TOP_CENTER,OFFSET_MIDDLE_CENTER,OFFSET_BOTTOM_CENTER].indexOf(offset)!==-1){this.offset.x=this.clipWidth/2;}
else if([OFFSET_TOP_RIGHT,OFFSET_MIDDLE_RIGHT,OFFSET_BOTTOM_RIGHT].indexOf(offset)!==-1){this.offset.x=this.clipWidth;}
if([OFFSET_TOP_LEFT,OFFSET_TOP_CENTER,OFFSET_TOP_RIGHT].indexOf(offset)!==-1){this.offset.y=0;}
else if([OFFSET_MIDDLE_LEFT,OFFSET_MIDDLE_CENTER,OFFSET_MIDDLE_RIGHT].indexOf(offset)!==-1){this.offset.y=this.clipHeight/2;}
else if([OFFSET_BOTTOM_LEFT,OFFSET_BOTTOM_CENTER,OFFSET_BOTTOM_RIGHT].indexOf(offset)!==-1){this.offset.y=this.clipHeight;}}
if(engine.avoidSubPixelRendering){this.offset.x=Math.round(this.offset.x);this.offset.y=Math.round(this.offset.y);}},stringToLines:function(){var lt,line,paragraphs,pid,words,wid,word;lt=document.createElement('span');lt.style.font=this.font;lt.style.visibility='hidden';lt.style.position='absolute';document.body.appendChild(lt);line=0;this.lines=[];this.lines[line]='';paragraphs=this.string.split("\n");for(pid=0;pid<paragraphs.length;pid++){words=paragraphs[pid].split(' ');lt.innerHTML='';this.lines[line]='';for(wid=0;wid<words.length;wid++){word=words[wid];lt.innerHTML+=word+" ";if(lt.offsetWidth>this.clipWidth){line++;this.lines[line]='';lt.innerHTML='';lt.innerHTML+=word+" ";this.lineWidth[line]=lt.offsetWidth;}
else{this.lineWidth[line]=lt.offsetWidth;}
this.lines[line]+=word+" ";}
line++;}
this.calculateCanvasHeight();lt.parentNode.removeChild(lt);},calculateCanvasHeight:function(){this.bm.height=(this.lines.length-1)*this.lineHeight+this.font.match(/[0.0-9]+/)*1.25;this.clipHeight=this.bm.height;},cacheRendering:function(){var xOffset,i;this.bmCtx.clearRect(0,0,this.bm.width,this.bm.height);this.bmCtx.font=this.font;this.bmCtx.fillStyle=this.color;for(i=0;i<this.lines.length;i++){xOffset=0;switch(this.alignment){case'left':xOffset=0;break;case'right':xOffset=this.clipWidth-this.lineWidth[i];break;case'center':xOffset=(this.clipWidth-this.lineWidth[i])/2;break;}
if(this.lines[i]){this.bmCtx.fillText(this.lines[i],xOffset,this.lineHeight*i+this.font.match(/[0.0-9]+/)*1);}}},isVisible:function(){return!(this.size===0||this.widthModifier===0||this.heightModifier===0||/^\s*$/.test(this.string));},drawCanvas:function(c){var x,y;var offX,offY;if(engine.avoidSubPixelRendering){offX=Math.round(this.offset.x);offY=Math.round(this.offset.y);}
else{offX=this.offset.x;offY=this.offset.y;}
c.drawImage(this.bm,0,0,this.clipWidth,this.clipHeight,-offX,-offY,this.clipWidth,this.clipHeight);},getRedrawRegion:function(){var ret;ret=new Math.Rectangle(-this.offset.x,-this.offset.y,this.clipWidth,this.clipHeight);ret=ret.getPolygon();ret=ret.scale(this.size*this.widthModifier,this.size*this.heightModifier);ret=ret.rotate(this.direction);ret=ret.getBoundingRectangle().add(this.getRoomPosition());ret.x=Math.floor(ret.x-1);ret.y=Math.floor(ret.y-1);ret.width=Math.ceil(ret.width+2);ret.height=Math.ceil(ret.height+2);return ret;}});new Class('View.GameObject',[View.Collidable],{GameObject:function(source,x,y,direction,additionalProperties){if(source===undefined){throw new Error('Missing argument: source');}
if(x===undefined){throw new Error('Missing argument: x');}
if(y===undefined){throw new Error('Missing argument: y');}
this.Collidable(source,x,y,direction,additionalProperties);this.loop=this.loop?this.loop:engine.defaultActivityLoop;this.loop.attachFunction(this,this.updatePosition);this.speed=this.speed?this.speed:new Math.Vector(0,0);this.alive=true;},updatePosition:function(){if(this.alive){this.x+=engine.convertSpeed(this.speed.x);this.y+=engine.convertSpeed(this.speed.y);}}});new Class('Engine.Room',[View.Container],{Room:function(name,onEntered,onLeft){this.Container();this.name=name?name:engine.roomList.length;this.onEntered=onEntered!==undefined?onEntered:function(){};this.onLeft=onLeft!==undefined?onLeft:function(){};this.loops={};this.addLoop('eachFrame',new Engine.CustomLoop());engine.addRoom(this);},update:function(){var i;for(i in this.loops){if(this.loops.hasOwnProperty(i)){this.loops[i].execute();}}},addLoop:function(name,loop){if(loop===undefined){throw new Error('Missing argument: loop');}
if(name===undefined){throw new Error('Missing argument: name');}
if(this.loops[name]!==undefined){throw new Error('Name is taken: '+name);}
this.loops[name]=loop;},removeLoop:function(name){if(name===undefined){throw new Error('Missing argument: name');}
if(name==='eachFrame'){throw new Error('The "eachFrame" loop cannot be removed');}
delete this.loops[name];},remove:undefined});new Class('Engine.Camera',{Camera:function(captureRegion,projectionRegion){if(!captureRegion.implements(Math.Rectangle)){throw new Error('Argument captureRegion should be of type: Rectangle');}
if(!projectionRegion.implements(Math.Rectangle)){throw new Error('Argument projectionRegion should be of type: Rectangle');}
this.captureRegion=captureRegion;this.projectionRegion=projectionRegion;this.canvas=document.createElement('canvas');this.canvas.width=this.captureRegion.width;this.canvas.height=this.captureRegion.height;this.room=engine.currentRoom;this.ctx=this.canvas.getContext('2d');},updateCaptureCanvas:function(){var changed;changed=false;if(this.captureRegion.width!==this.canvas.width){this.canvas.width=this.captureRegion.width;changed=true;}
if(this.captureRegion.height!==this.canvas.height){this.canvas.height=this.captureRegion.height;changes=true;}
return changed;},capture:function(){if(engine.enableRedrawRegions){this.captureRedrawRegions();}
else{this.captureWholeCanvas();}},captureWholeCanvas:function(){var region;this.captureRegion.x=Math.round(this.captureRegion.x);this.captureRegion.y=Math.round(this.captureRegion.y);region=this.captureRegion;this.ctx.save();if(engine.backgroundColor){this.ctx.fillStyle=engine.backgroundColor;this.ctx.fillRect(0,0,engine.canvasResX,engine.canvasResY);}
this.ctx.translate(-region.x,-region.y);engine.masterRoom.draw(this.ctx,region);this.room.draw(this.ctx,region);this.ctx.restore();},captureRedrawRegions:function(){var x,y,i,captureRegion,regions,object,region,ctx,overlap;this.captureRegion.x=Math.round(this.captureRegion.x);this.captureRegion.y=Math.round(this.captureRegion.y);regions=[];for(i=0;i<engine.redrawObjects.length;i++){object=engine.redrawObjects[i];if(object.lastRedrawRegion){region=object.currentRedrawRegion.getBoundingRectangle(object.lastRedrawRegion);}
else{region=object.currentRedrawRegion;}
region=region.getOverlap(this.captureRegion);region.object=object;if(region){if(region.getArea()===this.captureRegion.getArea()){regions=[region];break;}
else{regions.push(region);}}}
engine.redrawObjects.forEach(function(){this.hasChanged=false;});if(regions.length>20){regions=[this.captureRegion.copy()];}
engine.redrawRegions=regions;engine.redrawnPixels=0;for(i=0;i<regions.length;i++){engine.redrawnPixels+=regions[i].getArea();}
for(i=0;i<regions.length;i++){region=regions[i];region.canvas=document.createElement('canvas');region.canvas.width=region.width;region.canvas.height=region.height;ctx=region.canvas.getContext('2d');ctx.translate(-region.x,-region.y);engine.masterRoom.draw(ctx,region);this.room.draw(ctx,region);this.ctx.drawImage(region.canvas,region.x-this.captureRegion.x,region.y-this.captureRegion.y);}},draw:function(c){c.save();engine.drawCalls++;c.drawImage(this.canvas,this.projectionRegion.x,this.projectionRegion.y,this.projectionRegion.width,this.projectionRegion.height);c.restore();}});new Class('Engine.CustomLoop',{CustomLoop:function(framesPerExecution,maskFunction){this.framesPerExecution=framesPerExecution===undefined?1:framesPerExecution;this.maskFunction=maskFunction===undefined?function(){return true;}:maskFunction;this.functionsQueue=[];this.functions=[];this.executionsQueue=[];this.executions=[];this.animations=[];this.lastFrame=engine.frames;this.last=engine.now?engine.now:new Date().getTime();this.time=0;this.execTime=0;},attachFunction:function(caller,func){if(caller===undefined){throw new Error('Missing argument: caller');}
if(func===undefined){throw new Error('Missing argument: func');}
if(typeof func!=="function"){throw new Error('Argument func must be of type function');}
this.functionsQueue.push({object:caller,activity:func});},addFunctionsQueue:function(){this.functions=this.functions.concat(this.functionsQueue);this.functionsQueue=[];},detachFunction:function(caller,func){if(caller===undefined){throw new Error('Missing argument: caller');}
if(func===undefined){throw new Error('Missing argument: func');}
var i,a;for(i=0;i<this.functions.length;i++){a=this.functions[i];if(a.object===caller&&a.activity===func){this.functions.splice(i,1);return true;}}
for(i=0;i<this.functionsQueue.length;i++){a=this.functionsQueue[i];if(a.object===caller&&a.activity===func){this.functionsQueue.splice(i,1);return true;}}
return false;},detachFunctionsByFunction:function(func){if(func===undefined){throw new Error('Missing argument: func');}
var removeArray,i;removeArray=[];i=this.functions.length;while(i--){if(func===this.functions[i].func){removeArray.push(this.functions.splice(i,1));}}
i=this.functionsQueue.length;while(i--){if(func===this.functions[i].func){removeArray.push(this.functionsQueue.splice(i,1));}}
if(removeArray.length){return removeArray;}
else{return false;}},detachFunctionsByCaller:function(caller){if(caller===undefined){throw new Error('Missing argument: caller');}
var removeArray,i;removeArray=[];i=this.functions.length;while(i--){if(caller===this.functions[i].object){removeArray.push(this.functions.splice(i,1));}}
i=this.functionsQueue.length;while(i--){if(caller===this.functionsQueue[i].object){removeArray.push(this.functionsQueue.splice(i,1));}}
if(removeArray.length){return removeArray;}
else{return false;}},schedule:function(caller,func,delay){if(caller===undefined){throw new Error('Missing argument: caller');}
if(func===undefined){throw new Error('Missing argument: function');}
if(delay===undefined){throw new Error('Missing argument: delay');}
this.executionsQueue.push({func:func,execTime:this.time+delay,caller:caller});},addExecutionsQueue:function(){this.executions=this.executions.concat(this.executionsQueue);this.executionsQueue=[];},unschedule:function(caller,func){if(caller===undefined){throw new Error('Missing argument: caller');}
if(func===undefined){throw new Error('Missing argument: function');}
var i,exec;for(i=0;i<this.executions.length;i++){exec=this.executions[i];if(caller===exec.caller&&(exec.func===func||exec.func.toString()===func)){this.executions.splice(i,1);return true;}}
for(i=0;i<this.executionsQueue.length;i++){exec=this.executionsQueue[i];if(caller===exec.caller&&(exec.func===func||exec.func.toString()===func)){this.executionsQueue.splice(i,1);return true;}}
return false;},unscheduleByFunction:function(func){if(func===undefined){throw new Error('Missing argument: func');}
var unscheduledArray,i,exec;unscheduledArray=[];i=this.executions.length;while(i--){exec=this.executions[i];if(func===exec.func){unscheduledArray.push(this.executions.splice(i,1));}}
i=this.executionsQueue.length;while(i--){exec=this.executionsQueue[i];if(func===exec.func){unscheduledArray.push(this.executionsQueue.splice(i,1));}}
if(unscheduledArray.length){return unscheduledArray;}
else{return false;}},unscheduleByCaller:function(caller){if(caller===undefined){throw new Error('Missing argument: caller');}
var unscheduledArray,i,exec;unscheduledArray=[];i=this.executions.length;while(i--){exec=this.executions[i];if(caller===exec.caller){unscheduledArray.push(this.executions.splice(i,1));}}
i=this.executionsQueue.length;while(i--){exec=this.executionsQueue[i];if(caller===exec.caller){unscheduledArray.push(this.executionsQueue.splice(i,1));}}
if(unscheduledArray.length){return unscheduledArray;}
else{return false;}},unscheduleAll:function(){var removeArray;removeArray=[].concat(this.executions,this.executionsQueue);this.executions=[];this.executionsQueue=[];return removeArray;},addAnimation:function(animation){if(animation===undefined){throw new Error('Missing argument: animation');}
var anim,propList,currentAnimations,i,cur,propName;anim=animation;anim.start=this.time;propList=Object.keys(anim.prop);currentAnimations=anim.obj.getAnimations();for(i=0;i<currentAnimations.length;i++){cur=currentAnimations[i];for(propName in cur.prop){if(cur.prop.hasOwnProperty(propName)){if(propList.indexOf(propName)!==-1){delete cur.prop[propName];}}}}
this.animations.push(anim);},removeAnimationsOfObject:function(object){var i;i=this.animations.length;while(i--){if(object===this.animations[i].obj){this.animations.splice(i,1);}}},updateAnimations:function(){var animId,a,propId,t;for(animId=this.animations.length-1;animId>-1;animId--){a=this.animations[animId];if(a===undefined){continue;}
t=this.time-a.start;if(t>a.duration){this.animations.splice(animId,1);for(propId in a.prop){if(a.prop.hasOwnProperty(propId)){a.obj[propId]=a.prop[propId].end;}}
if(typeof a.callback==="string"){eval(a.callback);}else{a.callback.call(a.obj);}}else{for(propId in a.prop){if(a.prop.hasOwnProperty(propId)){a.obj[propId]=engine.ease(a.easing,t,a.prop[propId].begin,a.prop[propId].end-a.prop[propId].begin,a.duration);}}}}},execute:function(){var timer,i,exec;timer=new Date().getTime();if(!this.maskFunction()||engine.frames%this.framesPerExecution){return;}
if(engine.frames-this.lastFrame===this.framesPerExecution){this.time+=engine.gameTimeIncrease;}
this.lastFrame=engine.frames;this.last=engine.now;this.updateAnimations();i=this.executions.length;while(i--){if(i>=this.executions.length){continue;}
exec=this.executions[i];if(this.time>=exec.execTime){exec.func.call(exec.caller);this.executions.splice(i,1);}}
for(i=0;i<this.functions.length;i++){exec=this.functions[i];if(!exec.activity){throw new Error('Trying to exec non-existent attached function');}
exec.activity.call(exec.object);}
this.addFunctionsQueue();this.addExecutionsQueue();this.execTime=(new Date().getTime())-timer;}});new Class('Input.Keyboard',{Keyboard:function(){var key;document.addEventListener('keydown',function(event){keyboard.onKeyDown(event);if(engine.preventDefaultKeyboard){event.preventDefault();}},false);document.addEventListener('keyup',function(event){keyboard.onKeyUp(event);if(engine.preventDefaultKeyboard){event.preventDefault();}},false);this.keys=new Array(200);for(key=0;key<this.keys.length;key++){this.keys[key]={events:[]};}},onKeyDown:function(event){var key;if(event===undefined){throw new Error('Missing argument: event');}
if(!this.isDown(event.keyCode)){key=this.keys[event.keyCode];key.events=key.events.slice(0,1);key.events.unshift(new Date().getTime());}},onKeyUp:function(event){var key;if(event===undefined){throw new Error('Missing argument: event');}
if(this.isDown(event.keyCode)){key=this.keys[event.keyCode];key.events=key.events.slice(0,1);key.events.unshift(-new Date().getTime());}},isDown:function(key){if(key===undefined){throw new Error('Missing argument: key');}
if(typeof key==='string'){key=key.toUpperCase().charCodeAt(0);}
return this.keys[key].events.length&&this.keys[key].events[0]>0;},isPressed:function(key){if(key===undefined){throw new Error('Missing argument: key');}
if(typeof key==='string'){key=key.toUpperCase().charCodeAt(0);}
return this.keys[key].events.length&&this.keys[key].events[0]>engine.last;},isReleased:function(key){if(key===undefined){throw new Error('Missing argument: key');}
if(typeof key==='string'){key=key.toUpperCase().charCodeAt(0);}
return this.keys[key].events.length&&-this.keys[key].events[0]>engine.last;}});new Class('Input.Pointer',{Pointer:function(){var button;if(engine.host.hasTouch){document.addEventListener('touchstart',function(event){pointer.onTouchStart(event);},false);document.addEventListener('touchend',function(event){pointer.onTouchEnd(event);},false);document.addEventListener('touchmove',function(event){pointer.onTouchMove(event);},false);}
else{document.addEventListener('mousedown',function(event){pointer.onMouseDown(event);},false);document.addEventListener('mouseup',function(event){pointer.onMouseUp(event);},false);document.addEventListener('mousemove',function(event){engine.host.hasMouse=true;pointer.onMouseMove(event);},false);}
this.mouse=new Math.Vector();this.mouse.window=new Math.Vector();this.mouse.buttons=new Array(11);for(button=0;button<this.mouse.buttons.length;button++){this.mouse.buttons[button]=new Math.Vector();this.mouse.buttons[button].events=new Array(2);}
this.mouse.lastMoved=0;this.touches=new Array(10);for(button=0;button<this.touches.length;button++){this.touches[button]=new Math.Vector();this.touches[button].x=undefined;this.touches[button].y=undefined;this.touches[button].events=new Array(2);}},onMouseDown:function(event){if(event===undefined){throw new Error('Missing argument: event');}
var button;this.onMouseMove(event);if(!this.isDown(event.which)){button=this.mouse.buttons[event.which];button.events=button.events.slice(0,1);button.events.unshift(new Date().getTime());}},onMouseUp:function(event){if(event===undefined){throw new Error('Missing argument: event');}
var button;this.onMouseMove(event);if(this.isDown(event.which)){button=this.mouse.buttons[event.which];button.events=button.events.slice(0,1);button.events.unshift(-new Date().getTime());}},onMouseMove:function(event){if(event===undefined){throw new Error('Missing argument: event');}
var roomPos;this.mouse.window.set(event.pageX,event.pageY);this.mouse.set(this.mouse.window.x-engine.arena.offsetLeft-engine.mainCanvas.offsetLeft+document.body.scrollLeft,this.mouse.window.y-engine.arena.offsetTop-engine.mainCanvas.offsetTop+document.body.scrollTop);this.mouse.x=this.mouse.x/engine.arena.offsetWidth*engine.canvasResX;this.mouse.y=this.mouse.y/engine.arena.offsetHeight*engine.canvasResY;roomPos=this.calculateRoomPosition(this.mouse);this.mouse.x=roomPos.x;this.mouse.y=roomPos.y;this.mouse.buttons.forEach(function(){this.x=pointer.mouse.x;this.y=pointer.mouse.y;});this.mouse.lastMoved=new Date().getTime();if(this.cursor){this.cursor.x=this.mouse.x;this.cursor.y=this.mouse.y;}},onTouchStart:function(event){if(event===undefined){throw new Error('Missing argument: event');}
var i,eventTouch,pointerTouch,touchNumber;for(i=0;i<event.changedTouches.length;i++){if(i!=="length"){eventTouch=event.changedTouches[i];if(event.changedTouches[i].identifier>20){touchNumber=this.findTouchNumber();}
else{touchNumber=eventTouch.identifier;}
pointerTouch=this.touches[touchNumber];pointerTouch.identifier=eventTouch.identifier;pointerTouch.events=pointerTouch.events.slice(0,1);pointerTouch.events.unshift(new Date().getTime());}}
this.onTouchMove(event);},onTouchEnd:function(event){if(event===undefined){throw new Error('Missing argument: event');}
var i,eventTouch,pointerTouch;for(i=0;i<event.changedTouches.length;i++){eventTouch=event.changedTouches[i];if(event.changedTouches[i].identifier>20){pointerTouch=this.touches.getElementByPropertyValue('identifier',eventTouch.identifier);}
else{pointerTouch=this.touches[eventTouch.identifier];}
pointerTouch.events=pointerTouch.events.slice(0,1);pointerTouch.events.unshift(-new Date().getTime());}
this.onTouchMove(event);},onTouchMove:function(event){if(event===undefined){throw new Error('Missing argument: event');}
var i,eventTouch,pointerTouch,roomPos;for(i=0;i<event.touches.length;i++){eventTouch=event.touches[i];if(event.touches[i].identifier>20){pointerTouch=this.touches.getElementByPropertyValue('identifier',eventTouch.identifier);}
else{pointerTouch=this.touches[eventTouch.identifier];}
pointerTouch.set(eventTouch.pageX-engine.arena.offsetLeft-engine.mainCanvas.offsetLeft+document.body.scrollLeft,eventTouch.pageY-engine.arena.offsetTop-engine.mainCanvas.offsetTop+document.body.scrollTop);pointerTouch.x=pointerTouch.x/engine.arena.offsetWidth*engine.canvasResX;pointerTouch.y=pointerTouch.y/engine.arena.offsetHeight*engine.canvasResY;roomPos=this.calculateRoomPosition(pointerTouch);pointerTouch.x=roomPos.x;pointerTouch.y=roomPos.y;}},mouseHasMoved:function(){return engine.last<this.mouse.lastMoved;},isDown:function(button){if(button===undefined){throw new Error('Missing argument: button');}
var pointers;switch(this.getButtonType(button)){case"mouse":pointers=button===MOUSE_ANY?this.mouse.buttons:this.mouse.buttons[button];break;case"touch":pointers=button===TOUCH_ANY?this.touches:this.touches[button-TOUCH_1];break;case"any":pointers=this.mouse.buttons.concat(this.touches);}
return this.checkPointer(pointers,"down");},isPressed:function(button){if(button===undefined){throw new Error('Missing argument: button');}
var pointers;switch(this.getButtonType(button)){case"mouse":pointers=button===MOUSE_ANY?this.mouse.buttons:this.mouse.buttons[button];break;case"touch":pointers=button===TOUCH_ANY?this.touches:this.touches[button-TOUCH_1];break;case"any":pointers=this.mouse.buttons.concat(this.touches);}
return this.checkPointer(pointers,"pressed");},isReleased:function(button){if(button===undefined){throw new Error('Missing argument: button');}
var pointers;switch(this.getButtonType(button)){case"mouse":pointers=button===MOUSE_ANY?this.mouse.buttons:this.mouse.buttons[button];break;case"touch":pointers=button===TOUCH_ANY?this.touches:this.touches[button-TOUCH_1];break;case"any":pointers=this.mouse.buttons.concat(this.touches);}
return this.checkPointer(pointers,"released");},shapeIsPressed:function(button,shape,outside){button=button!==undefined?button:MOUSE_TOUCH_ANY;if(shape===undefined){throw new Error('Missing argument: shape');}
if(typeof shape.contains!=='function'){throw new Error('Argument shape has implement a "contains"-function');}
var i,pointers,pointer,ret;pointers=this.isPressed(button);if(!pointers){return false;}
ret=[];for(i=0;i<pointers.length;i++){pointer=pointers[i];if(pointer.x===false||pointer.y===false){continue;}
if(!outside&&shape.contains(pointer)){ret.push(pointer);}
else if(outside&&!shape.contains(pointer)){ret.push(pointer);}}
return ret.length?ret:false;},shapeIsReleased:function(button,shape,outside){button=button!==undefined?button:MOUSE_TOUCH_ANY;if(shape===undefined){throw new Error('Missing argument: shape');}
if(typeof shape.contains!=='function'){throw new Error('Argument shape has implement a "contains"-function');}
var i,pointers,pointer,ret;pointers=this.isReleased(button);if(!pointers){return false;}
ret=[];for(i=0;i<pointers.length;i++){pointer=pointers[i];if(pointer.x===false||pointer.y===false){continue;}
if(!outside&&shape.contains(pointer)){ret.push(pointer);}
else if(outside&&!shape.contains(pointer)){ret.push(pointer);}}
return ret.length?ret:false;},shapeIsDown:function(button,shape,outside){button=button!==undefined?button:MOUSE_TOUCH_ANY;if(shape===undefined){throw new Error('Missing argument: shape');}
if(typeof shape.contains!=='function'){throw new Error('Argument shape has implement a "contains"-function');}
var i,pointers,pointer,ret;pointers=this.isDown(button);if(!pointers){return false;}
ret=[];for(i=0;i<pointers.length;i++){pointer=pointers[i];if(pointer.x===false||pointer.y===false){continue;}
if(!outside&&shape.contains(pointer)){ret.push(pointer);}
else if(outside&&!shape.contains(pointer)){ret.push(pointer);}}
return ret.length?ret:false;},getButtonType:function(button){if(button>=MOUSE_ANY&&button<=MOUSE_10){return"mouse";}
else if(button>=TOUCH_ANY&&button<=TOUCH_10){return"touch";}
else if(button===MOUSE_TOUCH_ANY){return"any";}
else{throw new Error('Argument button has to be a pointer constant (see jseGlobals.js)');}},checkPointer:function(pointers,state){if(pointers==="undefined"){throw new Error("Missing argument: pointers");}
if(state==="undefined"){throw new Error("Missing argument: state");}
if(['pressed','released','down'].indexOf(state)===-1){throw new Error('Argument state must be one of the following values: "pressed", "released" or "down"');}
var i,pointer,ret;if(!Array.prototype.isPrototypeOf(pointers)){pointers=[pointers];}
ret=[];for(i=0;i<pointers.length;i++){pointer=pointers[i];switch(state){case"pressed":if(pointer.events[0]>engine.last||pointer.events[1]>engine.last){ret.push(pointer);}
break;case"released":if(-pointer.events[0]>engine.last||-pointer.events[1]>engine.last){ret.push(pointer);}
break;case"down":if(pointer.events[0]>0){ret.push(pointer);}
break;}}
return ret.length?ret:false;},calculateRoomPosition:function(vector){var ret,len,camera;ret=vector.copy();len=engine.cameras.length;while(len--){camera=engine.cameras[len];if(camera.projectionRegion.contains(vector)||len===0){ret.subtract(camera.projectionRegion);ret.x*=camera.captureRegion.width/camera.projectionRegion.width;ret.y*=camera.captureRegion.height/camera.projectionRegion.height;ret.add(camera.captureRegion);return ret;}}
return ret;},findTouchNumber:function(){var i;for(i=0;i<this.touches.length;i++){if(!this.checkPointer(this.touches[i],'down')){return i;}}
return false;},shapeIsHovered:function(shape,outside){if(!outside&&(shape.contains(this.mouse))){return true;}
else if(outside&&(!shape.contains(this.mouse))){return true;}
return false;},release:function(button){if(button===undefined){throw new Error('Missing argument: button');}
var i,pointers,events,unpressed;pointers=this.isPressed(button);if(!pointers){return false;}
for(i=0;i<pointers.length;i++){events=pointers[i].events;if(events[0]>engine.last){events.shift();events.push(undefined);unpressed=true;}
if(events[1]>engine.last){events.pop();events.push(undefined);unpressed=true;}}
return unpressed;},outside:function(){return new Math.Rectangle(engine.arena.offsetLeft,engine.arena.offsetTop,engine.arena.offsetWidth,engine.arena.offsetHeight).contains(this.mouse.window)===false;},resetCursor:function(){engine.arena.style.cursor='default';},setCursor:function(cursor){if(cursor===undefined){throw new Error('Missing argument: cursor');}
if(typeof cursor!=='string'){throw new Error('Argument cursor should be of type: string');}
var resource;resource=loader.getImage(cursor);if(resource){cursor="url('"+resource.src+"') 0 0, auto";}
else if(!/^\w*$/.test(cursor)){cursor="url('"+cursor+"') 0 0, auto";}
engine.arena.style.cursor=cursor;}});new Class('Sound.Effect',{Effect:function(audioElement){if(audioElement===undefined){throw new Error('Missing argument: audioElement');}
if(audioElement.toString()!=="[object HTMLAudioElement]"){throw new Error('Argument audioElement has to be of type HTMLAudioElement');}
var snd;this.source=audioElement;this.playbackId=0;this.elements=[];snd=this;this.source.addEventListener("canplaythrough",function(){snd.cacheCopies();},false);},cacheCopies:function(){var i;for(i=0;i<engine.cachedSoundCopies;i++){this.elements.push(this.source.cloneNode());this.elements[i].started=false;}},play:function(loop){var i,sound;if(engine.soundsMuted){return false;}
for(i=0;i<this.elements.length;i++){sound=this.elements[i];if((sound.started===false||sound.ended)&&!sound.loop){sound.started=true;sound.volume=1;sound.play();if(loop){sound.loop='loop';}
this.playbackId++;sound.playbackId=this.playbackId;return this.playbackId;}}
return false;},stop:function(playbackId){if(playbackId===undefined){throw new Error('Missing argument: playbackId');}
var i,sound;for(i=0;i<this.elements.length;i++){sound=this.elements[i];if(sound.playbackId===playbackId&&sound.started&&!sound.ended){sound.volume=0;sound.loop=false;return true;}}
return false;},stopAll:function(){var i,sound;for(i=0;i<this.elements.length;i++){sound=this.elements[i];if(sound.started&&!sound.ended){sound.volume=0;sound.loop=false;}}},stopLoop:function(playbackId){if(playbackId===undefined){throw new Error('Missing argument: playbackId');}
var i,sound;for(i=0;i<this.elements.length;i++){sound=this.elements[i];if(sound.playbackId===playbackId&&sound.started&&!sound.ended){sound.loop=false;return true;}}
return false;}});new Class('Sound.Music',{Music:function(audioElement){if(audioElement===undefined){throw new Error('Missing argument: audioElement');}
if(audioElement.toString()!=="[object HTMLAudioElement]"){throw new Error('Argument audioElement has to be of type HTMLAudioElement');}
this.source=audioElement;this.paused=false;},play:function(loop){if(engine.musicMuted){return false;}
this.source.play();this.paused=false;if(loop){this.source.loop="loop";}
return true;},pause:function(){this.paused=true;this.source.pause();},stop:function(){if(!this.source.ended){this.source.pause();this.source.currentTime=0;this.source.loop=false;return true;}
return false;},stopLoop:function(){if(this.source.started&&!this.source.ended){this.source.loop=false;return true;}
return false;}});