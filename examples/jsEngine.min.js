
Array.prototype.getElementByPropertyValue=function(property,value){var i;for(i=0;i<this.length;i++){if(this[i][property]===value){return this[i];}}
return false;};Array.prototype.sortByNumericProperty=function(property,desc){var sortedArray=[],copy=[],currentID,currentVal,i;Array.prototype.push.apply(copy,this);while(copy.length){currentVal=false;for(i=0;i<copy.length;i++){if(!desc){if(copy[i][property]<currentVal||currentVal===false){currentID=i;currentVal=copy[i][property];}}
else{if(copy[i][property]>currentVal||currentVal===false){currentID=i;currentVal=copy[i][property];}}}
sortedArray.push(copy.splice(currentID,1)[0]);}
return sortedArray;};Array.prototype.forEach=function(func){if(typeof func!=='function'){throw new Error('Argument func should be of type: function');}
var cp;cp=[];cp.push.apply(cp,this);for(var i=0;i<cp.length;i++){func.call(cp[i],i);}};Object.prototype.importProperties=function(from,copyIfPossible){var i;for(i in from){if(from.hasOwnProperty(i)){if(i===undefined){continue;}
if(!copyIfPossible||typeof from[i]!=='object'){this[i]=from[i];}
else{if(from[i].copy){this[i]=from[i].copy();}
else if(from[i].clone){this[i]=from[i].clone();}
else{this[i]=from[i];}}}}};Object.prototype.implements=function(checkClass){return(checkClass.prototype.isPrototypeOf(this)?true:this.inherits(checkClass));};Object.prototype.inherits=function(checkClass){if(this.inheritedClasses){return this.inheritedClasses.indexOf(checkClass)!==-1;}
return false;};KEY_LEFT=37;KEY_UP=38;KEY_RIGHT=39;KEY_DOWN=40;KEY_SPACE=32;KEY_BACKSPACE=8;KEY_TAB=9;KEY_ENTER=13;KEY_SHIFT=16;KEY_CONTROL=17;KEY_ALT_LEFT=18;KEY_CAPSLOCK=20;KEY_ESCAPE=27;KEY_ALT_RIGHT=0;KEY_F1=112;KEY_F2=113;KEY_F3=114;KEY_F4=115;KEY_F5=116;KEY_F6=117;KEY_F7=118;KEY_F8=119;KEY_F9=120;KEY_F10=121;KEY_F11=122;KEY_F12=123;MOUSE_ANY=0;MOUSE_1=1;MOUSE_2=2;MOUSE_3=3;MOUSE_4=4;MOUSE_5=5;MOUSE_6=6;MOUSE_7=7;MOUSE_8=8;MOUSE_9=9;MOUSE_10=10;TOUCH_ANY=20;TOUCH_1=21;TOUCH_2=22;TOUCH_3=23;TOUCH_4=24;TOUCH_5=25;TOUCH_6=26;TOUCH_7=27;TOUCH_8=28;TOUCH_9=29;TOUCH_10=30;MOUSE_TOUCH_ANY=100;SPEED_PIXELS_PER_SECOND=1;SPEED_PIXELS_PER_FRAME=2;polyfillsLoaded=true;if(!window.requestAnimationFrame){window.requestAnimationFrame=(function(){return window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback){window.setTimeout(callback,1000/60);};})();}
Class=function(className,inherits,properties){var i,inheritClass,newClass,propName;if(!/^\w*$/.test(className)){throw new Error("Invalid class name: "+className);}
if(inherits!==undefined&&!Array.prototype.isPrototypeOf(inherits)&&inherits.prototype===undefined){properties=inherits;inherits=undefined;}
eval('window.'+className+' = function () {this.'+className+'.apply(this, arguments); }');window[className].prototype[className]=function(){};newClass=window[className];newClass.prototype.className=className;newClass.prototype.inheritedClasses=[];function inherit(newClass,inheritClass){var functionName;newClass.prototype.inheritedClasses.push(inheritClass);Array.prototype.push.apply(newClass.prototype.inheritedClasses,inheritClass.prototype.inheritedClasses);for(functionName in inheritClass.prototype){if(typeof inheritClass.prototype[functionName]==="function"){newClass.prototype[functionName]=inheritClass.prototype[functionName];}}}
if(inherits){if(!Array.prototype.isPrototypeOf(inherits)){throw new Error("Arguments inherits is not an array");}
for(i=0;i<inherits.length;i++){inheritClass=inherits[i];inherit(newClass,inheritClass);}}
for(propName in properties){newClass.prototype[propName]=properties[propName];}};new Class('Engine',{Engine:function(options){this.options=options?options:{};this.load();},load:function(){var copyOpt,audioFormats,i,opt,gc;engine=this;this.host={hasTouch:'ontouchstart'in document,hasMouse:false,browserEngine:'Unknown',device:'Unknown',supportedAudio:[]};if(navigator.userAgent.match(/Firefox/)){this.host.browserEngine='Gecko';}else if(navigator.userAgent.match(/AppleWebKit/)){this.host.browserEngine='WebKit';if(navigator.userAgent.match(/iPad|iPhone/)){this.host.device='iDevice';}else if(navigator.userAgent.match(/Android/)){this.host.device='Android';}}else if(navigator.userAgent.match(/Trident/)){this.host.browserEngine='Trident';}
audioFormats=['mp3','ogg','wav'];for(i=0;i<audioFormats.length;i++){if(document.createElement('audio').canPlayType('audio/'+audioFormats[i])){this.host.supportedAudio.push(audioFormats[i]);}}
this.avoidSubPixelRendering=true;this.preloadSounds=true;switch(this.host.device){case'iDevice':this.preloadSounds=false;break;}
this.running=false;this.canvasResX=800;this.canvasResY=600;this.enginePath='js/jsEngine';this.focusOnLoad=true;this.themesPath='themes';this.drawBoundingBoxes=false;this.drawMasks=false;this.pauseOnBlur=true;this.disableRightClick=true;this.arena=document.getElementById('arena');this.autoResize=true;this.autoResizeLimitToResolution=true;this.cachedSoundCopies=5;this.gameClassPath="js/Game.js";this.loadText="jsEngine loading...";this.backgroundColor="#FFF";this.timeFactor=1;this.disableTouchScroll=true;this.cameras=[];this.defaultCollisionResolution=6;this.soundsMuted=false;this.musicMuted=false;copyOpt=['backgroundColor','disableTouchScroll','defaultCollisionResolution','focusOnLoad','loadText','soundsMuted','musicMuted','cachedSoundCopies','avoidSubPixelRendering','arena','disableRightClick','pauseOnBlur','drawBoundingBoxes','drawMasks','canvasResX','canvasResY','autoResize','autoResizeLimitToResolution','enginePath','themesPath','gameClassPath'];for(i=0;i<copyOpt.length;i++){opt=copyOpt[i];if(this.options[opt]!==undefined){this[opt]=this.options[opt];delete this.options[opt];}}
this.arena.style.position="absolute";this.arena.style.background="#fff";this.arena.style.userSelect="none";this.arena.style.webkitUserSelect="none";this.arena.style.MozUserSelect="none";this.mainCanvas=document.createElement("canvas");this.mainCanvas.style.display="block";this.mainCanvas.width=this.canvasResX;this.mainCanvas.height=this.canvasResY;this.arena.appendChild(this.mainCanvas);if(this.autoResize){this.autoResize=false;this.setAutoResize(true);}
else{this.autoResize=true;this.setAutoResize(false);}
if(this.disableTouchScroll){document.addEventListener('touchmove',function(event){event.preventDefault();},false);document.addEventListener('touchstart',function(event){event.preventDefault();},false);}
if(typeof Array.prototype.getElementByPropertyValue==="undefined"){this.loadFiles(this.enginePath+'/jseExtensions.js');}
if(window.polyfillsLoaded===undefined){this.loadFiles(this.enginePath+'/jsePolyfills.js');}
if(typeof KEY_UP==="undefined"){this.loadFiles(this.enginePath+'/jseGlobals.js');}
if(typeof Loader==="undefined"){this.loadFiles(this.enginePath+'/classes/Loader.js');}
loader=new Loader();loader.loadClasses([this.enginePath+'/classes/Animatable.js',this.enginePath+'/classes/Vector.js',this.enginePath+'/classes/View.js',this.enginePath+'/classes/Room.js',this.enginePath+'/classes/Line.js',this.enginePath+'/classes/Polygon.js',this.enginePath+'/classes/Rectangle.js',this.enginePath+'/classes/Circle.js',this.enginePath+'/classes/Camera.js',this.enginePath+'/classes/CustomLoop.js',this.enginePath+'/classes/Sprite.js',this.enginePath+'/classes/Collidable.js',this.enginePath+'/classes/TextBlock.js',this.enginePath+'/classes/GameObject.js',this.enginePath+'/classes/Keyboard.js',this.enginePath+'/classes/Pointer.js',this.enginePath+'/classes/Sound.js',this.enginePath+'/classes/Music.js']);gc=this.gameClassPath;loader.loadClasses([gc]);this.gameClassName=gc.match(/(\w*)\.\w+$/)[1];this.defaultTheme=this.options.themes[0];loader.onthemesloaded=function(){engine.initialize();};loader.loadThemes(this.options.themes);},initialize:function(){var i,d,objectName;this.objectIndex={};this.frames=0;this.last=new Date().getTime();this.now=this.last;this.gameTime=0;this.currentId=0;this.drawing=0;this.fps=0;this.fpsCounter=0;this.fpsSecCounter=0;this.roomList=[];this.masterRoom=new Room('master');this.currentRoom=new Room('main');this.defaultAnimationLoop=this.masterRoom.loops.eachFrame;this.defaultActivityLoop=this.masterRoom.loops.eachFrame;this.cameras.push(new Camera(new Rectangle(0,0,this.canvasResX,this.canvasResY),new Rectangle(0,0,this.canvasResX,this.canvasResY)));if(this.disableRightClick){this.arena.oncontextmenu=function(){return false;};}
keyboard=new Keyboard();pointer=new Pointer();if(this.pauseOnBlur){window.addEventListener('blur',function(){engine.stopMainLoop();});window.addEventListener('focus',function(){engine.startMainLoop();});}
if(window[this.gameClassName]!=="undefined"){objectName=this.gameClassName.substr(0,1).toLowerCase()+this.gameClassName.substr(1);eval(objectName+" = new "+this.gameClassName+'()');}
else{console.log('No game class found');loader.hideOverlay();}
this.startMainLoop();if(this.focusOnLoad){window.focus();}
if(this.onload){this.onload();}
console.log('jsEngine started');},setAutoResize:function(enable){if(enable&&!this.autoResize){this.autoResize=true;this.autoResizeCanvas();window.addEventListener('resize',engine.autoResizeCanvas,false);window.addEventListener('load',engine.autoResizeCanvas,false);}
else if(!enable&&this.autoResize){this.autoResize=false;window.removeEventListener('resize',engine.autoResizeCanvas,false);window.removeEventListener('load',engine.autoResizeCanvas,false);this.arena.style.top="50%";this.arena.style.left="50%";this.arena.style.marginLeft=-this.canvasResX/2+"px";this.arena.style.marginTop=-this.canvasResY/2+"px";this.mainCanvas.style.width=this.canvasResX+"px";this.mainCanvas.style.height=this.canvasResY+"px";}},autoResizeCanvas:function(){if(this!==engine){engine.autoResizeCanvas();return;}
var h,w,windowWH,gameWH;windowWH=window.innerWidth/window.innerHeight;gameWH=this.canvasResX/this.canvasResY;if(windowWH>gameWH){h=window.innerHeight;w=this.canvasResX/this.canvasResY*h;}else{w=window.innerWidth;h=this.canvasResY/this.canvasResX*w;}
if(this.autoResizeLimitToResolution){w=Math.min(w,this.canvasResX);h=Math.min(h,this.canvasResY);}
this.arena.style.top="50%";this.arena.style.left="50%";this.arena.style.marginTop=-h/2+"px";this.arena.style.marginLeft=-w/2+"px";this.mainCanvas.style.height=h+"px";this.mainCanvas.style.width=w+"px";},convertSpeed:function(speed,from,to){if(speed===undefined){throw new Error('Missing argument: speed');}
if(speed.implements(Vector)){return new Vector(this.convertSpeed(speed.x,from,to),this.convertSpeed(speed.y,from,to));}
from=from!==undefined?from:SPEED_PIXELS_PER_SECOND;to=to!==undefined?to:SPEED_PIXELS_PER_FRAME;switch(from){case SPEED_PIXELS_PER_SECOND:speed=speed*this.gameTimeIncrease/1000;break;case SPEED_PIXELS_PER_FRAME:break;}
switch(to){case SPEED_PIXELS_PER_SECOND:speed=speed/this.gameTimeIncrease*1000;break;case SPEED_PIXELS_PER_FRAME:break;}
return speed;},goToRoom:function(room){if(room===undefined){throw new Error('Missing argument: room');}
if(typeof room==="string"){room=this.roomList.getElementByPropertyValue('name',room);if(!room){throw new Error('Could not find a room with the specified name');}}
else{if(this.roomList.indexOf(room)===-1){throw new Error('Room is not on room list, has it been removed?');}}
this.currentRoom.onLeave();this.currentRoom=room;this.currentRoom.onEnter();},addRoom:function(room){if(room===undefined){throw new Error('Missing argument: room');}
if(this.roomList.indexOf(room)!==-1){throw new Error('Room is already on room list, rooms are automatically added upon instantiation');}
this.roomList.push(room);},removeRoom:function(room){if(room===undefined){throw new Error('Missing argument: room');}
var index;if(typeof room==="string"){room=this.roomList.getElementByPropertyValue('name',room);if(!room){throw new Error('Could not find a room with the specified name');}}
index=this.roomList.indexOf(room);if(index===-1){throw new Error('Room is not on room list, has it been removed?');}
if(room===this.masterRoom){throw new Error('Cannot remove master room');}
else if(room===this.currentRoom){throw new Error('Cannot remove current room, remember to leave the room first, by entering another room (use engine.goToRoom)');}
this.roomList.splice(i,1);},setSoundsMuted:function(muted){muted=muted!==undefined?muted:true;if(muted){loader.getAllSounds().forEach(function(){this.stopAll();});}
this.soundsMuted=muted;},setMusicMuted:function(muted){muted=muted!==undefined?muted:true;if(muted){loader.getAllMusic().forEach(function(){this.stop();});}
this.musicMuted=muted;},setDefaultTheme:function(themeName,enforce){if(themeName===undefined){throw new Error('Missing argument: themeName');}
if(loader.themes[themeName]===undefined){throw new Error('Trying to set unexisting theme: '+themeName);}
var i,refreshSource;enforce=enforce!==undefined?enforce:false;this.defaultTheme=themeName;refreshSource=function(){if(this.refreshSource){this.refreshSource();}};this.currentRoom.setTheme(undefined,enforce);},startMainLoop:function(){if(this.running){return;}
this.now=new Date().getTime();this.running=true;engine.mainLoop();},stopMainLoop:function(){if(!this.running){return;}
this.running=false;},mainLoop:function(){var name;if(!this.running){return;}
this.last=this.now;this.now=new Date().getTime();this.timeIncrease=this.now-this.last;this.gameTimeIncrease=this.timeIncrease*this.timeFactor;this.gameTime+=this.gameTimeIncrease;this.frames++;this.masterRoom.update();this.currentRoom.update();this.redraw();if(this.fpsMsCounter<1000){this.fpsCounter++;this.fpsMsCounter+=this.timeIncrease;}
else{this.fps=this.fpsCounter;this.fpsCounter=0;this.fpsMsCounter=0;}
requestAnimationFrame(function(time){engine.mainLoop(time);});},setCanvasResX:function(res){this.mainCanvas.width=res;this.canvasResX=res;if(this.autoResize){this.autoResizeCanvas();}},setCanvasResY:function(res){this.mainCanvas.height=res;this.canvasResY=res;if(this.autoResize){this.autoResizeCanvas();}},registerObject:function(obj,id){if(obj===undefined){throw new Error('Missing argument: obj');}
if(id===undefined){this.currentId++;id="obj"+(this.currentId-1);}else if(this.objectIndex[id]!==undefined){throw new Error('Object id already taken: '+id);}
this.objectIndex[id]=obj;obj.id=id;return id;},loadFiles:function(filePaths){var i,req,codeString;if(typeof filePaths==="string"){filePaths=[filePaths];}
for(i=0;i<filePaths.length;i++){req=new XMLHttpRequest();req.open('GET',filePaths[i],false);req.send();codeString=req.responseText+"\n//@ sourceURL=/"+filePaths[i];try{eval.call(window,codeString);}
catch(e){throw new Error('Failed loading "'+filePaths[i]);}}
if(window.loadedFiles===undefined){window.loadedFiles=[];}
window.loadedFiles=window.loadedFiles.concat(filePaths);},ajaxRequest:function(url,params,async,callback,caller){if(url===undefined){throw new Error('Missing argument: url');}
if(callback===undefined){throw new Error('Missing argument: callback');}
params=params!==undefined?params:'';async=async!==undefined?async:true;caller=caller!==undefined?caller:window;if(typeof params!=='string'){params='data='+JSON.stringify(params);}
var req;req=new XMLHttpRequest();if(async){req.onreadystatechange=function(){if(req.readyState===4&&req.status===200){callback.call(caller,req.responseText);}};}
req.open('POST',url,async);req.setRequestHeader("Content-type","application/x-www-form-urlencoded");req.send(params);if(!async){if(req.readyState===4&&req.status===200){callback.call(caller,req.responseText);}
else{throw new Error('XMLHttpRequest failed: '+url);}}},purge:function(obj){var len,name,loop,roomId,room,i;if(obj===undefined){throw new Error(obj);}
if(typeof obj==="string"){obj=this.objectIndex[obj];}
if(obj.children){len=obj.children.length;while(len--){engine.purge(obj.children[len]);}}
for(roomId=0;roomId<this.roomList.length;roomId++){room=this.roomList[roomId];for(name in room.loops){if(room.loops.hasOwnProperty(name)){loop=room.loops[name];loop.detachFunctionsByCaller(obj);loop.unScheduleByCaller(obj);loop.removeAnimationsOfObject(obj);}}}
if(obj.parent){obj.parent.removeChildren(obj);}
delete this.objectIndex[obj.id];},redraw:function(){var i,c;c=this.mainCanvas.getContext('2d');for(i=0;i<this.cameras.length;i++){this.cameras[i].capture();this.cameras[i].draw(c);}},dumpScreen:function(){var dataString,a;dataString=this.mainCanvas.toDataURL().replace(/image\/png/,'image/octet-stream');a=document.createElement('a');a.href=dataString;a.setAttribute('download','screendump.png');document.body.appendChild(a);a.click();document.body.removeChild(a,document.body);},ease:function(type,t,b,c,d){var a;switch(type){case"linear":t/=d;return b+c*t;case"quadIn":t/=d;return b+c*t*t;case"quadOut":t/=d;return b-c*t*(t-2);case"quadInOut":t=t/d*2;if(t<1){return b+c*t*t/2;}else{t--;return b+c*(1-t*(t-2))/2;}
case"powerIn":t/=d;a=c/Math.abs(c);return b+a*Math.pow(Math.abs(c),t);case"powerOut":t/=d;a=c/Math.abs(c);return b+c-a*Math.pow(Math.abs(c),1-t);case"powerInOut":t=t/d*2;a=c/Math.abs(c);if(t<1){return b+a*Math.pow(Math.abs(c),t)/2;}else{t--;return b+c-a*Math.pow(Math.abs(c),1-t)/2;}
case"sinusInOut":t/=d;return b+c*(1+Math.cos(Math.PI*(1+t)))/2;}
return b+c;},});new Class('Animatable',{animate:function(properties,options){if(properties===undefined){throw new Error('Missing argument: properties');}
if(options===undefined){throw new Error('Missing argument: options');}
var anim,i,c,loop,map,opt;anim={};map=properties;opt=options?options:{};if(!map){return false;}
anim.obj=this;loop=opt.loop!==undefined?opt.loop:(this.loop!==undefined?this.loop:engine.defaultAnimationLoop);anim.callback=opt.callback!==undefined?opt.callback:function(){};anim.easing=opt.easing!==undefined?opt.easing:"quadInOut";anim.dur=opt.dur!==undefined?opt.dur:1000;anim.prop={};for(i in map){if(map.hasOwnProperty(i)){anim.prop[i]={begin:this[i],end:map[i]};}}
c=0;for(i in anim.prop){if(anim.prop[i].begin===anim.prop[i].end){delete anim.prop[i];}else{c++;}}
if(!c&&anim.callback===function(){}){return;}
loop.addAnimation(anim);},isAnimated:function(){var roomId,room,name,loop,animId,animation;for(roomId=0;roomId<engine.roomList.length;roomId++){room=engine.roomList[roomId];for(name in room.loops){if(room.loops.hasOwnProperty(name)){loop=room.loops[name];for(animId=loop.animations.length-1;animId>-1;animId--){animation=loop.animations[animId];if(animation.obj===this){return true;}}}}}
return false;},getAnimations:function(){var animations,roomId,room,name,loop,animId,animation;animations=[];for(roomId=0;roomId<engine.roomList.length;roomId++){room=engine.roomList[roomId];for(name in room.loops){if(room.loops.hasOwnProperty(name)){loop=room.loops[name];for(animId=loop.animations.length-1;animId>-1;animId--){animation=loop.animations[animId];if(animation.obj===this){animations.push(animation);}}}}}
return animations;},stopAnimations:function(){var animations,roomId,room,name;animations=[];for(roomId=0;roomId<engine.roomList.length;roomId++){room=engine.roomList[roomId];for(name in room.loops){if(room.loops.hasOwnProperty(name)){room.loops[name].removeAnimationsOfObject(this);}}}}});new Class('Vector',[Animatable],{Vector:function(x,y){this.set(x,y);},set:function(x,y){this.x=x!==undefined?x:0;this.y=y!==undefined?y:0;return this;},setFromDirection:function(direction,length){if(typeof direction!=='number'){throw new Error('Argument direction should be of type: Number');}
if(typeof length!=='number'){throw new Error('Argument length should be of type: Number');}
this.x=Math.cos(direction)*length;this.y=Math.sin(direction)*length;return this;},copy:function(){return new Vector(this.x,this.y);},move:function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x+=x;this.y+=y;return this;},rotate:function(dir){if(typeof dir!=='number'){throw new Error('Argument dir should be of type: Number');}
this.setFromDirection(this.getDirection()+dir,this.getLength());return this;},scale:function(scaleH,scaleV){if(typeof scaleH!=='number'){throw new Error('Argument scaleH should be of type Number');}
scaleV=scaleV!==undefined?scaleV:scaleH;this.x*=scaleH;this.y*=scaleV;return this;},add:function(vector){if(vector.implements(Vector)){this.x+=vector.x;this.y+=vector.y;}
else if(typeof vector==='number'){this.x+=vector;this.y+=vector;}
else{throw new Error('Argument vector should be of type Vector or Number');}
return this;},subtract:function(vector){if(vector.implements(Vector)){this.x-=vector.x;this.y-=vector.y;}
else if(typeof vector==='number'){this.x-=vector;this.y-=vector;}
else{throw new Error('Argument vector should be of type Vector or Number');}
return this;},divide:function(vector){if(vector.implements(Vector)){this.x/=vector;this.y/=vector;}
else if(typeof vector==='number'){this.x/=vector;this.y/=vector;}
else{throw new Error('Argument vector should be of type Vector or Number');}
return this;},multiply:function(vector){if(!vector.implements(Vector)){throw new Error('Argument vector should be of type Vector');}
this.x*=vector.x;this.y*=vector.y;return this;},getDot:function(vector){if(!vector.implements(Vector)){throw new Error('Argument vector should be of type: Vector');}
return this.x*vector.x+this.y*vector.y;},getCross:function(vector){if(!vector.implements(Vector)){throw new Error('Argument vector should be of type: Vector');}
return this.x*vector.y-this.y*vector.x;},getLength:function(){return Math.sqrt(this.getDot(this));},getDirection:function(){return Math.atan2(this.y,this.x);},getDirectionTo:function(point){if(!point.implements(Vector)){throw new Error('Only Vectors or objects inheriting Vector are supported');}
return point.copy().subtract(this).getDirection();},getDistance:function(object){if(object.implements(Vector)){return object.copy().subtract(this).getLength();}
else if(object.implements(Line)){return object.getDistance(this);}
else if(object.implements(Circle)){return object.getDistance(this);}
else if(object.implements(Rectangle)){return object.getDistance(this);}
else if(object.implements(Polygon)){return object.getDistance(this);}
else{throw new Error('Agument object should be of type: Vector, Line, Circle, Rectangle or Polygon');}},drawCanvas:function(c,cameraOffset){c.save();c.translate(-cameraOffset.x,-cameraOffset.y);c.fillStyle='#f00';c.beginPath();c.moveTo(this.x,this.y);c.arc(this.x,this.y,2,0,Math.PI*2,true);c.fill();c.restore();},});new Class('View',[Vector],{View:function(){this.Vector();this.children=[];this.drawCacheCanvas=document.createElement('canvas');this.drawCacheCtx=this.drawCacheCanvas.getContext('2d');this.drawCacheEnabled=false;this.drawCacheOffset=new Vector();},getRoomPosition:function(){var pos,parent;pos=this.copy();parent=this;while((parent=parent.parent)!==undefined){pos.move(parent.x,parent.y);}
return pos;},addChildren:function(child1,child2){if(arguments.length===0){throw new Error('This function needs at least one argument');}
var i,child;for(i=0;i<arguments.length;i++){child=arguments[i];if(typeof child!=='object'){throw new Error('Argument "child" has to be of type "object"');}
if(child.parent){child.parent.removeChildren(child);}
this.children.push(child);child.parent=this;if(child.refreshSource){child.refreshSource();}}
return arguments;},insertBelow:function(insertChildren,child){if(insertChildren===undefined){throw new Error('Missing argument: insertChildren');}
if(child===undefined){throw new Error('Missing argument: child');}
var arr,i;if(!Array.prototype.isPrototypeOf(insertChildren)){arr=[];arr.push(insertChildren);insertChildren=arr;}
if((i=this.children.indexOf(child))!==-1){this.children.splice.apply(this.children,[i,0].concat(insertChildren));}
for(i=0;i<insertChildren.length;i++){child=insertChildren[i];child.parent=this;if(child.refreshSource){child.refreshSource();}}
return insertChildren;},getChildren:function(){var ret,i;ret=[];for(i=0;i<this.children.length;i++){ret.push(this.children[i]);}
return ret;},setTheme:function(themeName,recursive){if(themeName){if(loader.themes[themeName]===undefined){throw new Error('Trying to set unexisting theme: '+themeName);}}
else{themeName=undefined;}
var i;recursive=recursive!==undefined?recursive:false;this.theme=themeName;if(this.refreshSource){this.refreshSource();}
if(recursive){for(i=0;i<this.children.length;i++){this.children[i].setTheme(undefined,true);}}
else{this.applyToThisAndChildren(function(){if(this.refreshSource){this.refreshSource();}});}},applyToThisAndChildren:function(func){if(func===undefined){throw new Error('Missing argument: function');}
var i;func.call(this);for(i=0;i<this.children.length;i++){this.children[i].applyToThisAndChildren(func);}},setDrawCache:function(enabled){enabled=enabled===true;if(enabled===this.drawCacheEnabled){return;}
if(enabled){this.cacheDrawing();}
this.drawCacheEnabled=enabled;},cacheDrawing:function(){var drawRegion;drawRegion=this.getCombinedRedrawRegion();drawRegion.move(-this.x,-this.y);if(drawRegion){this.drawCacheOffset=new Vector(drawRegion.x,drawRegion.y);this.drawCacheCanvas.width=drawRegion.width;this.drawCacheCanvas.height=drawRegion.height;this.draw(this.drawCacheCtx,this.drawCacheOffset.copy().move(this.x,this.y),true);}},getCombinedRedrawRegion:function(){var box,addBox,i;if(this.getRedrawRegion){box=this.getRedrawRegion();}
for(i=0;i<this.children.length;i++){addBox=this.children[i].getCombinedRedrawRegion();if(addBox){if(box){box=box.combine(addBox);}
else{box=addBox;}}}
return box;},removeChildren:function(child1,child2){if(arguments.length===0){throw new Error('This function needs at least one argument');}
var i,childId,removed;removed=[];i=arguments.length;while(i>-1){childId=this.children.indexOf(arguments[i]);if(childId!==-1){this.children.splice(childId,1);removed.push(arguments[i]);arguments[i].parent=undefined;}
i--;}
return removed;},removeAllChildren:function(purge){purge=purge!==undefined?purge:true;var rmChild;rmChild=this.children.splice(0,this.children.length);rmChild.forEach(function(){this.parent=undefined;if(purge){this.remove(purge);}});},draw:function(c,cameraOffset,forceRedraw){var i,len,child,newOffset;if(this.drawCacheEnabled&&!forceRedraw){c.drawImage(this.drawCacheCanvas,this.x+this.drawCacheOffset.x-cameraOffset.x,this.y+this.drawCacheOffset.y-cameraOffset.y,this.drawCacheCanvas.width,this.drawCacheCanvas.height);}
else{if(this.drawCanvas){this.drawCanvas(c,cameraOffset);if(engine.drawBoundingBoxes&&this.drawBoundingBox){this.drawBoundingBox(c,cameraOffset);}
if(engine.drawMasks&&this.drawMask){this.drawMask(c,cameraOffset);}}
len=this.children.length;newOffset=cameraOffset.copy().move(-this.x,-this.y);for(i=0;i<len;i++){child=this.children[i];if(child.draw){child.draw(c,newOffset);}
else if(child.drawCanvas){child.draw(c,newOffset);}}}},drawCanvas:undefined,});new Class('Room',[View],{Room:function(name,onEntered,onLeft){this.View();this.name=name?name:engine.roomList.length;this.onEntere=onEntered!==undefined?onEntered:function(){};this.onLeft=onLeft!==undefined?onLeft:function(){};this.loops={};this.addLoop('eachFrame',new CustomLoop());engine.addRoom(this);},update:function(){var i;for(i in this.loops){if(this.loops.hasOwnProperty(i)){this.loops[i].execute();}}},addLoop:function(name,loop){if(loop===undefined){throw new Error('Missing argument: loop');}
if(name===undefined){throw new Error('Missing argument: name');}
if(this.loops[name]!==undefined){throw new Error('Name is taken: '+name);}
this.loops[name]=loop;},removeLoop:function(name){if(name===undefined){throw new Error('Missing argument: name');}
if(name==='eachFrame'){throw new Error('The "eachFrame" loop cannot be removed');}
delete this.loops[name];},remove:undefined,});new Class('Line',{Line:function(startVector,endVector){startVector=startVector!==undefined?startVector:new Vector(0,0);endVector=endVector!==undefined?endVector:new Vector(0,0);this.setFromVectors(startVector,endVector);},setFromVectors:function(startVector,endVector){if(!startVector.implements(Vector)){throw new Error('Agument startVector should be of type: Vector');}
if(!endVector.implements(Vector)){throw new Error('Agument endVector should be of type: Vector');}
this.a=startVector;this.b=endVector;return this;},setFromCoordinates:function(x1,y1,x2,y2){x1=x1!==undefined?x1:0;y1=y1!==undefined?y1:0;x2=x2!==undefined?x2:0;y2=y2!==undefined?y2:0;this.a=new Vector(x1,y1);this.b=new Vector(x2,y2);return this;},copy:function(){return new Line(this.a,this.b);},move:function(x,y){this.a.move(x,y);this.b.move(x,y);return this;},rotate:function(dir){if(typeof dir!=='number'){throw new Error('Argument dir should be of type: Number');}
this.a.rotate(dir);this.b.rotate(dir);return this;},scale:function(scaleH,scaleV){this.a.scale(scaleH,scaleV);this.b.scale(scaleH,scaleV);return this;},add:function(vector){this.a.add(vector);this.b.add(vector);return this;},subtract:function(vector){this.a.substract(vector);this.b.substract(vector);return this;},divide:function(vector){this.a.divide(vector);this.b.divide(vector);return this;},multiply:function(vector){this.a.multiply(vector);this.b.multiply(vector);return this;},intersects:function(object){if(object.implements(Line)){var c1,c2;c1=(this.b.x-this.a.x)*(object.a.y-this.b.y)-(object.a.x-this.b.x)*(this.b.y-this.a.y);c2=(this.b.x-this.a.x)*(object.b.y-this.b.y)-(object.b.x-this.b.x)*(this.b.y-this.a.y);if(c1*c2>0){return false;}
c1=(object.b.x-object.a.x)*(this.a.y-object.b.y)-(this.a.x-object.b.x)*(object.b.y-object.a.y);c2=(object.b.x-object.a.x)*(this.b.y-object.b.y)-(this.b.x-object.b.x)*(object.b.y-object.a.y);return c1*c2<0;}
else if(object.implements(Circle)){return object.intersects(this);}
else if(object.implements(Rectangle)){return object.getPolygon().intersects(this);}
else if(object.implements(Polygon)){return object.intersects(this);}
else{throw new Error('Agument object should be of type: Line, Rectangle, Circle or Polygon');}},getLength:function(){return this.b.copy().subtract(this.a).getLength();},getDistance:function(object){var ba,ab,bc,ac;if(object.implements(Vector)){ba=this.a.copy().subtract(this.b);ab=this.b.copy().subtract(this.a);bc=object.copy().subtract(this.b);ac=object.copy().subtract(this.a);if(ab.getDot(bc)>0){return bc.getLength();}
else if(ba.getDot(ac)>0){return ac.getLength();}
else{return Math.abs(ab.getCross(ac)/ab.getLength());}}
else if(object.implements(Line)){if(this.intersects(object)){return 0;}
else{return Math.min(this.getDistance(object.a),this.getDistance(object.b),object.getDistance(this.a),object.getDistance(this.b));}}
else if(object.implements(Rectangle)){return object.getDistance(this);}
else if(object.implements(Circle)){return object.getDistance(this);}
else{throw new Error('Agument object should be of type: Vector, Line, Circle, Rectangle or Polygon');}},drawCanvas:function(c,cameraOffset){c.save();c.translate(-cameraOffset.x,-cameraOffset.y);c.strokeStyle="#f00";c.beginPath();c.moveTo(this.a.x,this.a.y);c.lineTo(this.b.x,this.b.y);c.stroke();c.restore();},});new Class('Rectangle',[Animatable,Vector],{Rectangle:function(x,y,width,height){this.set(x,y,width,height);},set:function(x,y,width,height){this.x=x!==undefined?x:0;this.y=y!==undefined?y:0;this.width=width!==undefined?width:0;this.height=height!==undefined?height:0;return this;},setFromVectors:function(position,size){position=position!==undefined?position:new Vector();size=size!==undefined?size:new Vector();this.x=position.x;this.y=position.y;this.width=size.x;this.height=size.y;return this;},copy:function(){return new Rectangle(this.x,this.y,this.width,this.height);},move:function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x+=x;this.y+=y;return this;},moveTo:function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x=x;this.y=y;return this;},scale:function(scaleH,scaleV){if(typeof scaleH!=='number'){throw new Error('Argument scaleH should be of type Number');}
scaleV=scaleV!==undefined?scaleV:scaleH;this.width*=scaleH;this.height*=scaleV;return this;},combine:function(rectangle){if(!rectangle.implements(Rectangle)){throw new Error('Argument rectangle should be of type Rectangle');}
var pol=this.getPolygon();pol.points=pol.points.concat(rectangle.getPolygon().points);return pol.getBoundingRectangle();},getPolygon:function(){return new Polygon(this.getPoints());},getPoints:function(){return[new Vector(this.x,this.y),new Vector(this.x+this.width,this.y),new Vector(this.x+this.width,this.y+this.height),new Vector(this.x,this.y+this.height)];},getArea:function(){return this.width*this.height;},getDiagonal:function(){return Math.sqrt(Math.pow(this.width,2)+Math.pow(this.height,2));},getDistance:function(object){return this.getPolygon().getDistance(object);},contains:function(object){return this.getPolygon().contains(object);},intersects:function(object){return this.getPolygon().intersects(object);},drawCanvas:function(c,cameraOffset){c.save();c.translate(-cameraOffset.x,-cameraOffset.y);c.strokeStyle="#f00";c.beginPath();c.moveTo(this.x,this.y);c.lineTo(this.x+this.width,this.y);c.lineTo(this.x+this.width,this.y+this.height);c.lineTo(this.x,this.y+this.height);c.lineTo(this.x,this.y);c.stroke();c.closePath();c.restore();},});new Class('Polygon',{Polygon:function(points){this.setFromPoints(points);},setFromPoints:function(points){this.points=points;return this;},setFromCoordinates:function(x1,y1,x2,y2,x3,y3){var numPoints,i,x,y;numPoints=Math.floor(arguments.length/2);this.points=[];for(i=0;i<numPoints;i++){x=arguments[i*2];y=arguments[i*2+1];if(typeof x!=='number'||typeof y!=='number'){throw new Error('All arguments should be of type: Number');}
this.points.push(new Vector(x,y));}
return this;},move:function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type Number');}
return this.add(new Vector(x,y));},add:function(vector){if(!vector.implements(Vector)){throw new Error('Argument vector should be of type Vector');}
var i;for(i=0;i<this.points.length;i++){this.points[i].add(vector);}
return this;},rotate:function(dir){if(typeof dir!=='number'){throw new Error('Argument dir should be of type Number');}
var i;for(i=0;i<this.points.length;i++){this.points[i].rotate(dir);}
return this;},scale:function(scaleH,scaleV){var i;for(i=0;i<this.points.length;i++){this.points[i].scale(scaleH,scaleV);}
return this;},copy:function(){return new Polygon(this.getPoints());},getPoints:function(){var points,i;points=[];for(i=0;i<this.points.length;i++){points.push(this.points[i].copy());}
return points;},getLines:function(){var lines,points,i,to;lines=[];points=this.points;for(i=0;i<points.length;i++){to=i===points.length-1?0:i+1;lines.push(new Line(points[i],points[to]));}
return lines;},getBoundingRectangle:function(){if(this.points.length===0){throw new Error('Cannot create bounding rectangle for pointless polygon');}
var startVector,endVector,i;startVector=new Vector(this.points[0].x,this.points[0].y);endVector=startVector.copy();for(i=0;i<this.points.length;i++){startVector.x=Math.min(this.points[i].x,startVector.x);startVector.y=Math.min(this.points[i].y,startVector.y);endVector.x=Math.max(this.points[i].x,endVector.x);endVector.y=Math.max(this.points[i].y,endVector.y);}
return new Rectangle().setFromVectors(startVector,endVector.subtract(startVector));},getDistance:function(object){var dist,lines,objLines,i,ii,pVector;dist=2E+10308;lines=this.getLines();if(object.implements(Vector)){for(i=0;i<lines.length;i++){dist=Math.min(dist,lines[i].getDistance(object));if(dist<0){break;}}
return dist;}
else if(object.implements(Line)){for(i=0;i<lines.length;i++){dist=Math.min(dist,lines[i].getDistance(object));if(dist<0){break;}}
return dist;}
else if(object.implements(Circle)){pVector=new Vector(object.x,object.y);for(i=0;i<lines.length;i++){dist=Math.min(dist,lines[i].getDistance(pVector));if(dist<0){break;}}
return Math.max(0,dist-object.radius);}
else if(object.implements(Rectangle)){return object.getDistance(this);}
else if(object.implements(Polygon)){objLines=object.getLines();for(i=0;i<lines.length;i++){for(ii=0;ii<objLines.length;ii++){dist=Math.min(dist,lines[i].getDistance(objLines[ii]));if(dist<0){break;}}
if(dist<0){break;}}
return dist;}
else{throw new Error('Agument object should be of type: Vector, Line, Circle, Rectangle or Polygon');}},contains:function(object){if(object.implements(Vector)){if(this.intersects(new Line().setFromCoordinates(-123456,-98765,object.x,object.y),true)%2){return true;}
else{return false;}}
else if(object.implements(Line)){if(!this.intersects(object)&&this.contains(object.a)){return true;}
else{return false;}}
else if(object.implements(Circle)){if(this.contains(new Vector(object.x,object.y))){return!this.intersects(object);}
else{return false;}}
else if(object.implements(Rectangle)){return this.contains(object.getPolygon());}
else if(object.implements(Polygon)){if(object.points.length>0&&!this.intersects(object)&&this.contains(object.points[0])){return true;}
else{return false;}}
else{throw new Error('Argument object has to be of type: Vector, Line, Rectangle or Polygon');}},intersects:function(object,countIntersections){var intersects,intersectionCount,lines,line,oLines,oLine,i,ii;intersects=false;countIntersections=countIntersections!==undefined?countIntersections:false;if(countIntersections){intersectionCount=0;}
if(object.implements(Line)){lines=this.getLines();for(i=0;i<lines.length;i++){line=lines[i];if(line.intersects(object)){if(countIntersections){intersectionCount++;}
else{return true;}}}}
else if(object.implements(Circle)){lines=this.getLines();for(i=0;i<lines.length;i++){if(object.intersects(lines[i])){if(countIntersections){intersectionCount++;}
else{return true;}}}}
else if(object.implements(Rectangle)){return this.intersects(object.getPolygon());}
else if(object.implements(Polygon)){lines=this.getLines();oLines=object.getLines();for(i=0;i<lines.length;i++){line=lines[i];for(ii=0;ii<oLines.length;ii++){oLine=oLines[ii];if(line.intersects(oLine)){if(countIntersections){intersectionCount++;}
else{return true;}}}}}
else{throw new Error('Argument object has to be of type: Line, Circle, Rectangle or Polygon');}
if(countIntersections){return intersectionCount;}
else{return false;}},drawCanvas:function(c,cameraOffset){var i,len;c.save();c.translate(-cameraOffset.x,-cameraOffset.y);c.strokeStyle="#f00";c.beginPath();len=this.points.length;c.moveTo(this.points[len-1].x,this.points[len-1].y);for(i=0;i<len;i++){c.lineTo(this.points[i].x,this.points[i].y);}
c.stroke();c.restore();},});new Class('Circle',[Animatable],{Circle:function(x,y,radius){this.set(x,y,radius);},set:function(x,y,radius){x=x!==undefined?x:0;y=y!==undefined?y:0;radius=radius!==undefined?radius:0;this.x=x;this.y=y;this.radius=radius;return this;},copy:function(){return new Circle(this.x,this.y,this.radius);},move:function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x+=x;this.y+=y;return this;},moveTo:function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x=x;this.y=y;return this;},scale:function(factor){if(typeof factor!=='number'){throw new Error('Argument factor should be of type Number');}
this.radius*=factor;return this;},getArea:function(){return Math.pow(this.radius)*Math.PI;},getDistance:function(object){if(object.implements(Vector)){return Math.max(0,object.getDistance(new Vector(this.x,this.y))-this.radius);}
else if(object.implements(Line)){return Math.max(0,object.getDistance(new Vector(this.x,this.y))-this.radius);}
else if(object.implements(Circle)){return Math.max(0,new Vector(this.x,this.y).getDistance(new Vector(object.x,object.y))-(this.radius+object.radius));}
else if(object.implements(Rectangle)){return object.getDistance(this);}
else if(object.implements(Polygon)){return object.getDistance(this);}
else{throw new Error('Agument object should be of type: Vector, Line, Circle, Rectangle or Polygon');}},contains:function(object){var i,cDist;if(object.implements(Vector)){return object.copy().move(-this.x,-this.y).getLength()<this.radius;}
else if(object.implements(Line)){return this.contains(object.a)&&this.contains(object.b);}
else if(object.implements(Circle)){cDist=new Vector(object.x,object.y).move(-this.x,-this.y).getLength();return cDist+object.radius<this.radius;}
else if(object.implements(Rectangle)){return this.contains(object.getPolygon());}
else if(object.implements(Polygon)){for(i=0;i<object.points.length;i++){if(!this.contains(object.points[i])){return false;}}
return true;}
else{throw new Error('Argument object has to be of type: Vector, Line, Circle, Rectangle or Polygon');}},intersects:function(object){if(object.implements(Line)){return this.contains(object)===false&&object.getDistance(this)<=0;}
else if(object.implements(Circle)){return!this.contains(object)&&!object.contains(this)&&new Vector(this.x,this.y).getDistance(new Vector(object.x,object.y))<=this.radius+object.radius;}
else if(object.implements(Rectangle)){return object.getPolygon().intersects(this);}
else if(object.implements(Polygon)){return object.intersects(this);}
else{throw new Error('Argument object has to be of type: Line, Circle, Rectangle or Polygon');}},drawCanvas:function(c,cameraOffset){c.save();c.translate(-cameraOffset.x,-cameraOffset.y);c.strokeStyle="#f00";c.beginPath();c.arc(this.x,this.y,this.radius,0,Math.PI*2,true);c.stroke();c.restore();},});new Class('Camera',{Camera:function(captureRegion,projectionRegion){if(!captureRegion.implements(Rectangle)){throw new Error('Argument captureRegion should be of type: Rectangle');}
if(!projectionRegion.implements(Rectangle)){throw new Error('Argument projectionRegion should be of type: Rectangle');}
this.captureRegion=captureRegion;this.projectionRegion=projectionRegion;this.canvas=document.createElement('canvas');this.canvas.width=this.captureRegion.width;this.canvas.height=this.captureRegion.height;this.room=engine.currentRoom;this.ctx=this.canvas.getContext('2d');},updateCaptureCanvas:function(){if(this.captureRegion.width!==this.canvas.width){this.canvas.width=this.captureRegion.width;}
if(this.captureRegion.height!==this.canvas.height){this.canvas.height=this.captureRegion.height;}},capture:function(){this.updateCaptureCanvas();this.ctx.clearRect(0,0,this.captureRegion.width,this.captureRegion.height);engine.masterRoom.draw(this.ctx,this.captureRegion.copy());this.room.draw(this.ctx,this.captureRegion.copy());},draw:function(c){c.save();c.drawImage(this.canvas,this.projectionRegion.x,this.projectionRegion.y,this.projectionRegion.width,this.projectionRegion.height);c.restore();},});new Class('Loader',{Loader:function(){this.sounds={};this.images={};this.scripts={};this.loaded={classes:[]};this.themes={};this.callback=false;this.loadOverlay=document.createElement('div');this.loadOverlay.setAttribute('style','border: 0;position: absolute;top: 0;left: 0;width: 100%;height: 100%;z-index: 100;opacity: 1;');this.loadOverlay.id="loadOverlay";this.loadOverlay.innerHTML='<div id="loadOverlayText">'+engine.loadText+'</div>';engine.arena.appendChild(this.loadOverlay);},hideOverlay:function(callback){this.fadeCallback=callback;this.fadeOpacity=1;this.fade=function(){var obj=loader.loadOverlay;loader.fadeOpacity=Math.max(0,loader.fadeOpacity-0.1);loader.fadeOpacity=Math.floor(loader.fadeOpacity*100)/100;obj.style.opacity=loader.fadeOpacity;if(loader.fadeOpacity!==0){setTimeout(function(){loader.fade();},30);}
else{engine.arena.removeChild(loader.loadOverlay);delete loader.fade;if(loader.fadeCallback){loader.fadeCallback();}
delete loader.fadeCallback;}};this.fade();},getImage:function(resource,themeName){if(resource===undefined){throw new Error('Missing argument: resource');}
themeName=themeName!==undefined?themeName:engine.defaultTheme;return this.getResource(resource,'images',themeName);},getSound:function(resource,themeName){if(resource===undefined){throw new Error('Missing argument: resource');}
themeName=themeName!==undefined?themeName:engine.defaultTheme;return this.getResource(resource,'sfx',themeName);},getMusic:function(resource,themeName){if(resource===undefined){throw new Error('Missing argument: resource');}
themeName=themeName!==undefined?themeName:engine.defaultTheme;return this.getResource(resource,'music',themeName);},getMask:function(resource,themeName){if(resource===undefined){throw new Error('Missing argument: resource');}
themeName=themeName!==undefined?themeName:engine.defaultTheme;var mask;mask=this.getResource(resource,'masks',themeName);if(mask){return mask;}
else{mask=this.generateMask(resource);this.themes[themeName].masks[resource]=mask;return mask;}},getResource:function(resource,typeString,themeName){if(resource===undefined){throw new Error('Missing argument: resource');}
if(typeString===undefined){throw new Error('Missing argument: typeString');}
if(themeName===undefined){throw new Error('Missing argument: themeName');}
var res,inh,i;if(resource.indexOf('/')!==-1){resource=resource.replace(/\//g,'.');}
res=this.themes[themeName][typeString][resource];if(res===undefined){for(i=0;i<this.themes[themeName].inherit.length;i++){inh=this.themes[themeName].inherit[i];if(this.themes[inh]){res=this.themes[inh][typeString][resource];if(res){break;}}}}
return res===undefined?false:res;},getImageSources:function(){var object,sourceStrings,currentDir,loopThrough,inheritTheme,i;object=this.themes[engine.defaultTheme].images;sourceStrings=[];currentDir=[];loopThrough=function(object){var pushStr,name;if(object.src!==undefined){pushStr=currentDir.join('.');if(sourceStrings.indexOf(pushStr)===-1){sourceStrings.push(pushStr);}}
else{for(name in object){if(object.hasOwnProperty(name)){currentDir.push(name);loopThrough(object[name]);currentDir.pop();}}}};loopThrough(object);for(i=0;i<this.themes[engine.defaultTheme].inherit.length;i++){inheritTheme=this.themes[this.themes[engine.defaultTheme].inherit[i]];if(inheritTheme!==undefined&&inheritTheme.images!==undefined){loopThrough(inheritTheme.images);}}
return sourceStrings;},getAllSounds:function(){var res,themeName,theme,resourceString,resource;res=[];for(themeName in this.themes){if(this.themes.hasOwnProperty(themeName)){theme=this.themes[themeName];for(resourceString in theme.sfx){if(theme.sfx.hasOwnProperty(resourceString)){res.push(theme.sfx[resourceString]);}}}}
return res;},getAllMusic:function(){var res,themeName,theme,resourceString,resource;res=[];for(themeName in this.themes){if(this.themes.hasOwnProperty(themeName)){theme=this.themes[themeName];for(resourceString in theme.music){if(theme.music.hasOwnProperty(resourceString)){res.push(theme.music[resourceString]);}}}}
return res;},loadClasses:function(paths){if(paths===undefined){throw new Error('Missing argument: paths');}
var objectName,i;for(i in paths){if(paths.hasOwnProperty(i)){objectName=paths[i].match(/(\w*)\.\w+$/)[1];if(window[objectName]){continue;}
engine.loadFiles(paths[i]);this.loaded.classes[objectName]=paths[i];}}
return true;},reloadAllClasses:function(){var i;for(i in this.loaded.classes){if(this.loaded.classes.hasOwnProperty(i)){engine.loadFiles(this.loaded.classes[i]);}}},loadThemes:function(themeNames,callback){if(themeNames===undefined){throw new Error('Missing argument: themeNames');}
if(callback!==undefined){this.onthemesloaded=callback;}
var name,req,i,total,theme,codeString;for(i=0;i<themeNames.length;i++){name=themeNames[i];if(this.themes[name]){continue;}
req=new XMLHttpRequest();req.open('GET',engine.themesPath+'/'+name+'/theme.json',false);req.send();if(req.status===404){console.log('Theme not found: '+name);continue;}
codeString='theme = '+req.responseText+"\n//@ sourceURL=/"+engine.themesPath+'/'+name+'/theme.json';eval(codeString);if(theme.inherit.length){this.loadThemes(theme.inherit);}
this.themes[name]=theme;theme.resourcesCount=0;theme.resourcesLoaded=0;theme.masks={};theme.bBoxes={};this.loadResources(theme,theme.images,'images');this.loadResources(theme,theme.sfx,'sfx');this.loadResources(theme,theme.music,'music');}
total=0;for(i in this.themes){if(this.themes.hasOwnProperty(i)){total+=this.themes[i].resourcesCount;}}
if(total===0){if(this.onthemesloaded){this.onthemesloaded();}}},loadResources:function(theme,object,typeString){if(theme===undefined){throw new Error('Missing argument: theme');}
if(object===undefined){throw new Error('Missing argument: object');}
if(typeString===undefined){throw new Error('Missing argument: typeString');}
var onload,res,path,i,format,images;onload=function(){var resourceString,theme,i;if(this.hasAttribute('data-loaded')){return;}
this.setAttribute('data-loaded','true');theme=loader.themes[this.getAttribute('data-theme')];theme.resourcesLoaded++;loader.checkAllLoaded();};for(path in object){if(object.hasOwnProperty(path)){switch(typeString){case'images':res=new Image();res.src=engine.themesPath+"/"+theme.name+"/images/"+path.replace(/\./g,'/')+'.png';images=object[path].match(/; *(\d+) *images?/);if(images){res.imageLength=images[1]*1;}
else{res.imageLength=1;}
if(object[path].match(/; *bordered/)){res.spacing=1;}
else{res.spacing=0;}
theme.images[path]=res;theme.bBoxes[path]=[];for(i=0;i<100;i++){theme.bBoxes[path].push(false);}
res.onload=onload;theme.resourcesCount++;break;case'sfx':format=false;for(i=0;i<engine.host.supportedAudio.length;i++){if(object[path].search(engine.host.supportedAudio[i])!==-1){format=engine.host.supportedAudio[i];}}
if(!format){console.log('Sound was not available in a supported format: '+theme.name+"/sfx/"+path.replace(/\./g,'/'));continue;}
res=new Audio(engine.themesPath+"/"+theme.name+"/sfx/"+path.replace(/\./g,'/')+'.'+format);theme.sfx[path]=new Sound(res);if(engine.preloadSounds){res.setAttribute('preload','auto');res.addEventListener("canplaythrough",onload,false);theme.resourcesCount++;}
break;case'music':format=false;for(i=0;i<engine.host.supportedAudio.length;i++){if(object[path].search(engine.host.supportedAudio[i])!==-1){format=engine.host.supportedAudio[i];}}
if(!format){console.log('Sound was not available in a supported format: '+theme.name+"/sfx/"+path.replace(/\./g,'/'));continue;}
res=new Audio(engine.themesPath+"/"+theme.name+"/music/"+path.replace(/\./g,'/')+'.'+format);theme.music[path]=new Music(res);if(engine.preloadSounds){res.setAttribute('preload','auto');res.addEventListener("canplaythrough",onload,false);theme.resourcesCount++;}
break;}
res.setAttribute('data-theme',theme.name);res.setAttribute('data-resourceString',path.replace(/\./g,'/'));}}},generateMask:function(resourceString,alphaLimit){if(resourceString===undefined){throw new Error('Missing argument: resourceString');}
alphaLimit=alphaLimit!==undefined?alphaLimit:255;var image,canvas,ctx,bitmap,data,length,pixel,top,bottom,left,right,x,y;image=loader.getImage(resourceString);canvas=document.createElement('canvas');canvas.width=image.width;canvas.height=image.height;canvas.imageLength=image.imageLength;ctx=canvas.getContext('2d');if(image===false){throw new Error('Trying to create mask for non-existing resource: '+resourceString);}
ctx.drawImage(image,0,0,image.width,image.height);bitmap=ctx.getImageData(0,0,canvas.width,canvas.height);data=bitmap.data;length=data.length/4;top=bitmap.height;bottom=0;left=bitmap.width;right=0;for(pixel=0;pixel<length;pixel++){if(data[pixel*4+3]<alphaLimit){data[pixel*4]=0;data[pixel*4+1]=0;data[pixel*4+2]=0;data[pixel*4+3]=0;}
else{data[pixel*4]=0;data[pixel*4+1]=0;data[pixel*4+2]=0;data[pixel*4+3]=255;y=Math.floor(pixel/bitmap.width);x=pixel-y*bitmap.width;while(x>=Math.floor(image.width/image.imageLength)){x-=Math.floor(image.width/image.imageLength)+image.spacing;}
if(x<0){continue;}
top=Math.min(y,top);bottom=Math.max(y+1,bottom);left=Math.min(x,left);right=Math.max(x+1,right);}}
ctx.putImageData(bitmap,0,0);canvas.bBox=new Rectangle(left-bitmap.width/2,top-bitmap.height/2,right-left,bottom-top).getPolygon();return canvas;},checkAllLoaded:function(){var i,total,loaded,theme;total=0;loaded=0;for(i in this.themes){if(this.themes.hasOwnProperty(i)){theme=this.themes[i];total+=theme.resourcesCount;loaded+=theme.resourcesLoaded;}}
if(loaded===total){if(this.onthemesloaded){this.onthemesloaded();}
return true;}
return false;},});new Class('CustomLoop',{CustomLoop:function(framesPerExecution,maskFunction){this.framesPerExecution=framesPerExecution===undefined?1:framesPerExecution;this.maskFunction=maskFunction===undefined?function(){return true;}:maskFunction;this.functionsQueue=[];this.functions=[];this.executionsQueue=[];this.executions=[];this.animations=[];this.lastFrame=engine.frames;this.last=engine.now?engine.now:new Date().getTime();this.time=0;this.execTime=0;},attachFunction:function(caller,func){if(caller===undefined){throw new Error('Missing argument: caller');}
if(func===undefined){throw new Error('Missing argument: func');}
if(typeof func!=="function"){throw new Error('Argument func must be of type function');}
this.functionsQueue.push({object:caller,activity:func});},addFunctionsQueue:function(){this.functions=this.functions.concat(this.functionsQueue);this.functionsQueue=[];},detachFunction:function(caller,func){if(caller===undefined){throw new Error('Missing argument: caller');}
if(func===undefined){throw new Error('Missing argument: func');}
var i,a;for(i=0;i<this.functions.length;i++){a=this.functions[i];if(a.object===caller&&a.activity===func){this.functions.splice(i,1);return true;}}
for(i=0;i<this.functionsQueue.length;i++){a=this.functionsQueue[i];if(a.object===caller&&a.activity===func){this.functionsQueue.splice(i,1);return true;}}
return false;},detachFunctionsByFunction:function(func){if(func===undefined){throw new Error('Missing argument: func');}
var removeArray,i;removeArray=[];i=this.functions.length;while(i--){if(func===this.functions[i].func){removeArray.push(this.functions.splice(i,1));}}
i=this.functionsQueue.length;while(i--){if(func===this.functions[i].func){removeArray.push(this.functionsQueue.splice(i,1));}}
if(removeArray.length){return removeArray;}
else{return false;}},detachFunctionsByCaller:function(caller){if(caller===undefined){throw new Error('Missing argument: caller');}
var removeArray,i;removeArray=[];i=this.functions.length;while(i--){if(caller===this.functions[i].object){removeArray.push(this.functions.splice(i,1));}}
i=this.functionsQueue.length;while(i--){if(caller===this.functionsQueue[i].object){removeArray.push(this.functionsQueue.splice(i,1));}}
if(removeArray.length){return removeArray;}
else{return false;}},schedule:function(caller,func,delay){if(caller===undefined){throw new Error('Missing argument: caller');}
if(func===undefined){throw new Error('Missing argument: function');}
if(delay===undefined){throw new Error('Missing argument: delay');}
this.executionsQueue.push({func:func,execTime:this.time+delay,caller:caller,});},addExecutionsQueue:function(){this.executions=this.executions.concat(this.executionsQueue);this.executionsQueue=[];},unSchedule:function(caller,func){if(caller===undefined){throw new Error('Missing argument: caller');}
if(func===undefined){throw new Error('Missing argument: function');}
var i,exec;for(i=0;i<this.executions.length;i++){exec=this.executions[i];if(caller===exec.caller&&(exec.func===func||exec.func.toString()===func)){this.executions.splice(i,1);return true;}}
for(i=0;i<this.executionsQueue.length;i++){exec=this.executionsQueue[i];if(caller===exec.caller&&(exec.func===func||exec.func.toString()===func)){this.executionsQueue.splice(i,1);return true;}}
return false;},unScheduleByFunction:function(func){if(func===undefined){throw new Error('Missing argument: func');}
var unscheduledArray,i;unscheduledArray=[];i=this.executions.length;while(i--){exec=this.executions[i];if(func===exec.func){unscheduledArray.push(this.executions.splice(i,1));}}
i=this.executionsQueue.length;while(i--){exec=this.executionsQueue[i];if(func===exec.func){unscheduledArray.push(this.executionsQueue.splice(i,1));}}
if(unscheduledArray.length){return unscheduledArray;}
else{return false;}},unScheduleByCaller:function(caller){if(caller===undefined){throw new Error('Missing argument: caller');}
var unscheduledArray,i;unscheduledArray=[];i=this.executions.length;while(i--){exec=this.executions[i];if(caller===exec.caller){unscheduledArray.push(this.executions.splice(i,1));}}
i=this.executionsQueue.length;while(i--){exec=this.executionsQueue[i];if(caller===exec.caller){unscheduledArray.push(this.executionsQueue.splice(i,1));}}
if(unscheduledArray.length){return unscheduledArray;}
else{return false;}},unScheduleAll:function(){var removeArray;removeArray=[].concat(this.executions,this.executionsQueue);this.executions=[];this.executionsQueue=[];return removeArray;},addAnimation:function(animation){if(animation===undefined){throw new Error('Missing argument: animation');}
var anim,propList,currentAnimations,i,cur,propName;anim=animation;anim.start=this.time;propList=Object.keys(anim.prop);currentAnimations=anim.obj.getAnimations();for(i=0;i<currentAnimations.length;i++){cur=currentAnimations[i];for(propName in cur.prop){if(cur.prop.hasOwnProperty(propName)){if(propList.indexOf(propName)!==-1){delete cur.prop[propName];}}}}
this.animations.push(anim);},removeAnimationsOfObject:function(object){i=this.animations.length;while(i--){if(object===this.animations[i].obj){this.animations.splice(i,1);}}},updateAnimations:function(){var animId,a,propId,t;for(animId=this.animations.length-1;animId>-1;animId--){a=this.animations[animId];if(a===undefined){continue;}
t=this.time-a.start;if(t>a.dur){this.animations.splice(animId,1);for(propId in a.prop){if(a.prop.hasOwnProperty(propId)){a.obj[propId]=a.prop[propId].end;}}
if(typeof a.callback==="string"){eval(a.callback);}else{a.callback.call(a.obj);}}else{for(propId in a.prop){if(a.prop.hasOwnProperty(propId)){a.obj[propId]=engine.ease(a.easing,t,a.prop[propId].begin,a.prop[propId].end-a.prop[propId].begin,a.dur);}}}}},execute:function(){var timer,i,exec;timer=new Date().getTime();if(!this.maskFunction()||engine.frames%this.framesPerExecution){return;}
if(engine.frames-this.lastFrame===this.framesPerExecution){this.time+=engine.gameTimeIncrease;}
this.lastFrame=engine.frames;this.last=engine.now;this.updateAnimations();i=this.executions.length;while(i--){if(i>=this.executions.length){continue;}
exec=this.executions[i];if(this.time>=exec.execTime){exec.func.call(exec.caller);this.executions.splice(i,1);}}
for(i=0;i<this.functions.length;i++){exec=this.functions[i];if(!exec.activity){throw new Error('Trying to exec non-existent attached function');}
exec.activity.call(exec.object);}
this.addFunctionsQueue();this.addExecutionsQueue();this.execTime=(new Date().getTime())-timer;},});new Class('Sprite',[View,Animatable],{Sprite:function(source,x,y,dir,additionalProperties){if(source===undefined){throw new Error('Missing argument: source');}
this.View();this.x=x!==undefined?x:0;this.y=y!==undefined?y:0;this.source=source;this.dir=dir!==undefined?dir:0;engine.registerObject(this);this.imageNumber=0;this.imageLength=1;this.animationSpeed=30;this.animationLastSwitch=engine.gameTime;this.animationLoops=true;this.size=1;this.widthModifier=1;this.heightModifier=1;this.opacity=1;this.composite='source-over';this.importProperties(additionalProperties);if(!this.refreshSource()){throw new Error('Sprite source was not successfully loaded: '+source);}
this.offset=this.offset!==undefined?this.offset:new Vector(this.width/2,this.height/2);if(this.offset.x==='center'){this.offset.x=this.width/2;}
if(this.offset.y==='center'){this.offset.y=this.height/2;}
if(engine.avoidSubPixelRendering){this.offset.x=Math.round(this.offset.x);this.offset.y=Math.round(this.offset.y);}},getTheme:function(){var parent,theme;theme=this.theme;parent=this;while(theme===undefined){if(parent.theme){theme=parent.theme;}
else{if(parent.parent){parent=parent.parent;}
else{break;}}}
return theme?theme:engine.defaultTheme;},refreshSource:function(){var theme;theme=this.getTheme();this.bm=loader.getImage(this.source,theme);this.imageLength=this.bm.imageLength;this.imageNumber=Math.min(this.imageLength-1,this.imageNumber);this.width=Math.floor(this.bm.width/this.imageLength);this.height=this.bm.height;return this.bm;},setSource:function(source){if(source===undefined){throw new Error('Missing argument: source');}
if(this.source===source){return;}
this.source=source;this.refreshSource();},setWidth:function(width){this.widthModifier=width/(this.width*this.size);},setHeight:function(height){this.heightModifier=height/(this.height*this.size);},drawCanvas:function(c,cameraOffset){var x,y;if(this.size===0||this.widthModifier===0||this.heightModifier===0||this.opacity===0){return;}
if(engine.avoidSubPixelRendering){x=Math.round(this.x-cameraOffset.x);y=Math.round(this.y-cameraOffset.y);}
else{x=this.x-cameraOffset.x;y=this.y-cameraOffset.y;}
if(this.imageLength!==1&&this.animationSpeed!==0){if(engine.gameTime-this.animationLastSwitch>1000/this.animationSpeed){this.imageNumber=this.imageNumber+(this.animationSpeed>0?1:-1);this.animationLastSwitch=engine.gameTime;if(this.imageNumber===this.imageLength){this.imageNumber=this.animationLoops?0:this.imageLength-1;}
else if(this.imageNumber===-1){this.imageNumber=this.animationLoops?this.imageLength-1:0;}}}
c.globalAlpha=this.opacity;if(this.composite!=='source-over'){c.globalCompositeOperation=this.composite;}
if(this.dir!==0){c.translate(x,y);c.rotate(this.dir);c.scale(this.widthModifier*this.size,this.heightModifier*this.size);c.drawImage(this.bm,(this.width+this.bm.spacing)*this.imageNumber,0,this.width,this.height,-this.offset.x,-this.offset.y,this.width,this.height);c.scale(1/(this.widthModifier*this.size),1/(this.heightModifier*this.size));c.rotate(-this.dir);c.translate(-x,-y);}
else{c.translate(x,y);c.scale(this.widthModifier*this.size,this.heightModifier*this.size);c.drawImage(this.bm,(this.width+this.bm.spacing)*this.imageNumber,0,this.width,this.height,-this.offset.x,-this.offset.y,this.width,this.height);c.scale(1/(this.widthModifier*this.size),1/(this.heightModifier*this.size));c.translate(-x,-y);}
if(this.composite!=='source-over'){c.globalCompositeOperation='source-over';}
c.globalAlpha=1;},getRedrawRegion:function(){var ret;ret=new Rectangle(-this.offset.x,-this.offset.y,Math.floor(this.bm.width/this.imageLength),this.bm.height);ret=ret.getPolygon();ret=ret.scale(this.size*this.widthModifier,this.size*this.heightModifier);ret=ret.rotate(this.dir);ret=ret.getBoundingRectangle().add(this.getRoomPosition());ret.x=Math.floor(ret.x-1);ret.y=Math.floor(ret.y-1);ret.width=Math.ceil(ret.width+2);ret.height=Math.ceil(ret.height+2);return ret;},});new Class('Collidable',[Sprite],{Collidable:function(source,x,y,dir,additionalProperties){this.Sprite(source,x,y,dir,additionalProperties);this.mask=this.mask?this.mask:loader.getMask(source,this.getTheme());this.collisionResolution=this.collisionResolution?this.collisionResolution:engine.defaultCollisionResolution;},boundingBoxCollidesWith:function(objects,getCollidingObjects){if(objects===undefined){throw new Error('Missing argument: objects');}
if(!Array.prototype.isPrototypeOf(objects)){objects=[objects];}
getCollidingObjects=getCollidingObjects!==undefined?getCollidingObjects:false;var pol1,pol2,i,collidingObjects,obj;pol1=this.mask.bBox.copy().move(this.mask.width/2-this.offset.x,this.mask.height/2-this.offset.y).scale(this.size*this.widthModifier,this.size*this.heightModifier).rotate(this.dir).add(this.getRoomPosition());collidingObjects=[];for(i=0;i<objects.length;i++){obj=objects[i];pol2=obj.mask.bBox.copy().move(obj.mask.width/2-obj.offset.x,obj.mask.height/2-obj.offset.y).scale(obj.size*obj.widthModifier,obj.size*obj.heightModifier).rotate(obj.dir).add(obj.getRoomPosition());if(pol1.intersects(pol2)||pol1.contains(pol2.points[0])||pol2.contains(pol1.points[0])){if(getCollidingObjects){collidingObjects.push(obj);}
else{return true;}}}
if(collidingObjects.length){return collidingObjects;}
else{return false;}},maskCollidesWith:function(objects,getCollisionPosition){if(objects===undefined){throw new Error('Missing argument: objects');}
var canvas,mask,ctx,roomPos,obj,bitmap,i,data,length,pixel,pxArr,x,y,avX,avY,avDist,avDir,retVector;if(!Array.prototype.isPrototypeOf(objects)){objects=[objects];}
getCollisionPosition=getCollisionPosition!==undefined?getCollisionPosition:false;mask=this.mask;canvas=document.createElement('canvas');canvas.width=Math.ceil(this.width);canvas.height=Math.ceil(this.height);canvas.id='colCanvas';ctx=canvas.getContext('2d');ctx.fillStyle="#FFF";ctx.fillRect(0,0,canvas.width,canvas.height);ctx.save();ctx.scale(1/(this.size*this.widthModifier),1/(this.size*this.heightModifier));ctx.translate(this.offset.x*this.size*this.widthModifier,this.offset.y*this.size*this.heightModifier);ctx.rotate(-this.dir);roomPos=this.getRoomPosition();for(i=0;i<objects.length;i++){obj=objects[i];if(obj===this){continue;}
ctx.translate(obj.x-roomPos.x,obj.y-roomPos.y);ctx.scale(obj.widthModifier*obj.size,obj.heightModifier*obj.size);ctx.rotate(obj.dir);ctx.drawImage(obj.mask,(obj.width+obj.bm.spacing)*obj.imageNumber,0,obj.width,obj.height,-obj.offset.x,-obj.offset.y,obj.width,obj.height);ctx.rotate(-obj.dir);ctx.scale(1/(obj.widthModifier*obj.size),1/(obj.heightModifier*obj.size));ctx.translate(roomPos.x-obj.x,roomPos.y-obj.y);}
ctx.restore();ctx.globalAlpha=0.5;ctx.fillRect(0,0,canvas.width,canvas.height);ctx.translate(canvas.width/2,canvas.height/2);ctx.drawImage(mask,(this.width+this.bm.spacing)*this.imageNumber,0,this.width,this.height,-this.width/2,-this.height/2,this.width,this.height);bitmap=ctx.getImageData(0,0,canvas.width,canvas.height);data=bitmap.data;length=data.length/4;pxArr=[];for(pixel=0;pixel<length;pixel+=this.collisionResolution){x=pixel%bitmap.width;if(this.collisionResolution>1&&x<this.collisionResolution){y=Math.floor(pixel/bitmap.width);pixel-=x;if(y%2){pixel+=Math.floor(this.collisionResolution/2);}}
if(data[pixel*4]<127){if(getCollisionPosition){if(y===undefined){y=Math.floor(pixel/bitmap.width);}
pxArr.push({x:x,y:y});}
else{return true;}}}
if(pxArr.length>0){pxArr=pxArr.sortByNumericProperty('x');avX=(pxArr[0].x+pxArr[pxArr.length-1].x)/2;pxArr=pxArr.sortByNumericProperty('y');avY=(pxArr[0].y+pxArr[pxArr.length-1].y)/2;avX-=this.offset.x;avY-=this.offset.y;avX/=this.size*this.widthModifier;avY/=this.size*this.heightModifier;retVector=new Vector(avX,avY);retVector.rotate(this.dir);retVector.pixelCount=pxArr.length;return retVector;}
return false;},collidesWith:function(objects,getCollisionPosition,getCollidingObjects){if(objects===undefined){throw new Error('Missing argument: objects');}
var ret,i,position,totalPixels;if(!Array.prototype.isPrototypeOf(objects)){objects=[objects];}
getCollidingObjects=getCollidingObjects!==undefined?getCollidingObjects:false;if(this.size===0||this.widthModifier===0||this.heightModifier===0){return false;}
objects=this.boundingBoxCollidesWith(objects,true);if(objects===false){return false;}
if(!getCollisionPosition&&!getCollidingObjects){return this.maskCollidesWith(objects);}
else{ret={objects:[],positions:[],combinedPosition:false};if(getCollidingObjects===false){position=this.maskCollidesWith(objects,true);if(position){ret.positions.push(position);ret.combinedPosition=position.copy();ret.combinedPosition.pixelCount=0;}}
else{if(getCollisionPosition){for(i=0;i<objects.length;i++){position=this.maskCollidesWith(objects[i],true);if(position){ret.objects.push(objects[i]);ret.positions.push(position);}}
if(ret.positions.length){ret.combinedPosition=new Vector();ret.combinedPosition.pixelCount=0;ret.positions.forEach(function(){ret.combinedPosition.add(this.scale(this.pixelCount));ret.combinedPosition.pixelCount+=this.pixelCount;})
ret.combinedPosition.scale(1/ret.combinedPosition.pixelCount);}}
else{for(i=0;i<objects.length;i++){if(this.maskCollidesWith(objects[i])){ret.objects.push(objects[i]);}}}}}
if(ret.positions.length+ret.objects.length!==0){return ret;}
else{return false;}},drawBoundingBox:function(c,cameraOffset){var pol;pol=this.mask.bBox.copy().move(this.mask.width/2-this.offset.x,this.mask.height/2-this.offset.y).scale(this.size*this.widthModifier,this.size*this.heightModifier).rotate(this.dir);c.save();c.strokeStyle="#0F0";c.translate(this.x-cameraOffset.x,this.y-cameraOffset.y);c.beginPath();c.moveTo(pol.points[0].x,pol.points[0].y);c.lineTo(pol.points[1].x,pol.points[1].y);c.lineTo(pol.points[2].x,pol.points[2].y);c.lineTo(pol.points[3].x,pol.points[3].y);c.closePath();c.stroke();c.restore();},drawMask:function(c,cameraOffset){var mask;if(this.mask){mask=this.mask;}
else{return;}
c.save();c.translate(this.x-cameraOffset.x,this.y-cameraOffset.y);c.rotate(this.dir);c.scale(this.widthModifier*this.size,this.heightModifier*this.size);try{c.drawImage(this.mask,(this.width+this.bm.spacing)*this.imageNumber,0,this.width,this.height,-this.offset.x,-this.offset.y,this.width,this.height);}catch(e){console.log(this.source);console.log(this.bm);engine.stopMainLoop();throw new Error(e);}
c.restore();},});new Class('TextBlock',[Animatable,View],{TextBlock:function(string,x,y,width,additionalProperties){if(string===undefined){throw new Error('Missing argument: string');}
if(width===undefined){throw new Error('Missing argument: width');}
this.View();this.x=x!==undefined?x:0;this.y=y!==undefined?y:0;this.width=width;this.font='normal 14px Verdana';this.alignment='left';this.offset=new Vector();this.color="#000000";this.opacity=1;this.size=1;this.widthModifier=1;this.heightModifier=1;this.dir=0;this.composite='source-over';this.importProperties(additionalProperties);this.lineHeight=this.lineHeight?this.lineHeight:this.font.match(/[0.0-9]+/)*1.25;this.lines=[];this.lineWidth=[];this.bm=document.createElement('canvas');this.bmCtx=this.bm.getContext('2d');this.bm.width=this.width;this.bm.height=1000;engine.registerObject(this);this.setString(string);this.cacheRendering();if(engine.avoidSubPixelRendering){this.offset.x=Math.round(this.offset.x);this.offset.y=Math.round(this.offset.y);}},setString:function(string){if(string===undefined){throw new Error('Missing argument: string');}
this.string=string;if(typeof this.string!=='string'){this.string=this.string.toString();}
if(this.string===''){this.string=' ';}
this.stringToLines();this.cacheRendering();},setAlignment:function(alignment){if(alignment===undefined){throw new Error('Missing argument: alignment');}
if(/left|right|center/.test(alignment)===false){throw new Error('Invalid alignment given. Valid alignments are: "left", "right", "center"');}
this.alignment=alignment;this.cacheRendering();},setColor:function(colorString){if(colorString===undefined){throw new Error('Missing argument: colorString');}
this.color=colorString;this.cacheRendering();},cacheRendering:function(){var xOffset,i;this.bmCtx.clearRect(0,0,this.bm.width,this.bm.height);this.bmCtx.font=this.font;this.bmCtx.fillStyle=this.color;for(i=0;i<this.lines.length;i++){xOffset=0;switch(this.alignment){case'left':xOffset=0;break;case'right':xOffset=this.width-this.lineWidth[i];break;case'center':xOffset=(this.width-this.lineWidth[i])/2;break;}
if(this.lines[i]){this.bmCtx.fillText(this.lines[i],xOffset,this.lineHeight*(1+i));}}},stringToLines:function(){var lt,line,paragraphs,pid,words,wid,word;lt=document.createElement('span');lt.style.font=this.font;lt.style.visibility='hidden';lt.style.position='absolute';document.body.appendChild(lt);line=0;this.lines=[];this.lines[line]='';paragraphs=this.string.split("\n");for(pid=0;pid<paragraphs.length;pid++){words=paragraphs[pid].split(' ');for(wid=0;wid<words.length;wid++){word=words[wid];lt.innerHTML+=word+" ";if(lt.offsetWidth>this.width){line++;this.lines[line]='';lt.innerHTML='';lt.innerHTML+=word+" ";}
else{this.lineWidth[line]=lt.offsetWidth;}
this.lines[line]+=word+" ";}
line++;lt.innerHTML='';this.lines[line]='';}
lt.parentNode.removeChild(lt);this.bm.height=this.lines.length*this.lineHeight;},setWidth:function(width){this.widthModifier=width/(this.bm.width*this.size);},setHeight:function(height){this.heightModifier=height/(this.bm.height*this.size);},drawCanvas:function(c,cameraOffset){var x,y;if(/^\s*$/.test(this.string)){return;}
if(engine.avoidSubPixelRendering){x=Math.round(this.x-cameraOffset.x);y=Math.round(this.y-cameraOffset.y);}
else{x=this.x-cameraOffset.x;y=this.y-cameraOffset.y;}
c.globalAlpha=this.opacity;if(this.composite!=='source-over'){c.globalCompositeOperation=this.composite;}
if(this.dir!==0){c.translate(x,y);c.rotate(this.dir);c.scale(this.widthModifier*this.size,this.heightModifier*this.size);c.drawImage(this.bm,this.width,0,this.width,this.height,-this.offset.x,-this.offset.y,this.width,this.height);c.scale(1/(this.widthModifier*this.size),1/(this.heightModifier*this.size));c.rotate(-this.dir);c.translate(-x,-y);}
else{c.translate(x,y);c.scale(this.widthModifier*this.size,this.heightModifier*this.size);c.drawImage(this.bm,this.width,0,this.width,this.height,-this.offset.x,-this.offset.y,this.width,this.height);c.scale(1/(this.widthModifier*this.size),1/(this.heightModifier*this.size));c.translate(-x,-y);}
if(this.composite!=='source-over'){c.globalCompositeOperation='source-over';}
c.globalAlpha=1;},getRedrawRegion:function(){var ret;ret=new Rectangle(-this.offset.x,-this.offset.y,this.bm.width,this.bm.height);ret=ret.getPolygon();ret=ret.scale(this.size*this.widthModifier,this.size*this.heightModifier);ret=ret.rotate(this.dir);ret=ret.getBoundingRectangle().add(this.getRoomPosition());ret.x=Math.floor(ret.x-1);ret.y=Math.floor(ret.y-1);ret.width=Math.ceil(ret.width+2);ret.height=Math.ceil(ret.height+2);return ret;},});new Class('GameObject',[Collidable],{GameObject:function(source,x,y,dir,additionalProperties){if(source===undefined){throw new Error('Missing argument: source');}
if(x===undefined){throw new Error('Missing argument: x');}
if(y===undefined){throw new Error('Missing argument: y');}
this.Collidable(source,x,y,dir,additionalProperties);this.loop=this.loop?this.loop:engine.currentRoom.loops.eachFrame;this.loop.attachFunction(this,this.updatePosition);this.speed=this.speed?this.speed:new Vector(0,0);this.alive=true;},updatePosition:function(){if(this.alive){this.add(engine.convertSpeed(this.speed));}},});new Class('Keyboard',{Keyboard:function(){var key;document.addEventListener('keydown',function(event){keyboard.onKeyDown(event);event.preventDefault();return false;},false);document.addEventListener('keyup',function(event){keyboard.onKeyUp(event);event.preventDefault();return false;},false);this.keys=new Array(200);for(key=0;key<this.keys.length;key++){this.keys[key]={events:[]};}},onKeyDown:function(event){var key;if(event===undefined){throw new Error('Missing argument: event');}
if(!this.isDown(event.keyCode)){key=this.keys[event.keyCode];key.events=key.events.slice(0,1);key.events.unshift(new Date().getTime());}},onKeyUp:function(event){var key;if(event===undefined){throw new Error('Missing argument: event');}
if(this.isDown(event.keyCode)){key=this.keys[event.keyCode];key.events=key.events.slice(0,1);key.events.unshift(-new Date().getTime());}},isDown:function(key){if(key===undefined){throw new Error('Missing argument: key');}
if(typeof key==='string'){key=key.toUpperCase().charCodeAt(0);}
return this.keys[key].events.length&&this.keys[key].events[0]>0;},isPressed:function(key){if(key===undefined){throw new Error('Missing argument: key');}
if(typeof key==='string'){key=key.toUpperCase().charCodeAt(0);}
return this.keys[key].events.length&&this.keys[key].events[0]>engine.last;},isReleased:function(key){if(key===undefined){throw new Error('Missing argument: key');}
if(typeof key==='string'){key=key.toUpperCase().charCodeAt(0);}
return this.keys[key].events.length&&-this.keys[key].events[0]>engine.last;},});new Class('Pointer',{Pointer:function(){var button;if(engine.host.hasTouch){document.addEventListener('touchstart',function(event){pointer.onTouchStart(event);},false);document.addEventListener('touchend',function(event){pointer.onTouchEnd(event);},false);document.addEventListener('touchmove',function(event){pointer.onTouchMove(event);},false);}
else{document.addEventListener('mousedown',function(event){pointer.onMouseDown(event);},false);document.addEventListener('mouseup',function(event){pointer.onMouseUp(event);},false);document.addEventListener('mousemove',function(event){engine.host.hasMouse=true;pointer.onMouseMove(event);},false);if(engine.options.cursor){engine.arena.style.cursor="url('"+loader.getImage(engine.options.cursor).src+"') 0 0, auto";}}
this.mouse=new Vector();this.mouse.window=new Vector();this.mouse.buttons=new Array(11);for(button=0;button<this.mouse.buttons.length;button++){this.mouse.buttons[button]=new Vector();this.mouse.buttons[button].events=new Array(2);}
this.mouse.lastMoved=0;this.touches=new Array(10);for(button=0;button<this.touches.length;button++){this.touches[button]=new Vector();this.touches[button].x=undefined;this.touches[button].y=undefined;this.touches[button].events=new Array(2);}},onMouseDown:function(event){if(event===undefined){throw new Error('Missing argument: event');}
var button;this.onMouseMove(event);if(!this.isDown(event.which)){button=this.mouse.buttons[event.which];button.events=button.events.slice(0,1);button.events.unshift(new Date().getTime());}},onMouseUp:function(event){if(event===undefined){throw new Error('Missing argument: event');}
var button;this.onMouseMove(event);if(this.isDown(event.which)){button=this.mouse.buttons[event.which];button.events=button.events.slice(0,1);button.events.unshift(-new Date().getTime());}},onMouseMove:function(event){if(event===undefined){throw new Error('Missing argument: event');}
var roomPos;this.mouse.window.set(event.pageX,event.pageY);this.mouse.set(this.mouse.window.x-engine.arena.offsetLeft-engine.mainCanvas.offsetLeft+document.body.scrollLeft,this.mouse.window.y-engine.arena.offsetTop-engine.mainCanvas.offsetTop+document.body.scrollTop);this.mouse.x=this.mouse.x/engine.arena.offsetWidth*engine.canvasResX;this.mouse.y=this.mouse.y/engine.arena.offsetHeight*engine.canvasResY;roomPos=this.calculateRoomPosition(this.mouse);this.mouse.x=roomPos.x;this.mouse.y=roomPos.y;this.mouse.buttons.forEach(function(){this.x=pointer.mouse.x;this.y=pointer.mouse.y;});this.mouse.lastMoved=new Date().getTime();if(this.cursor){this.cursor.x=this.mouse.x;this.cursor.y=this.mouse.y;}},onTouchStart:function(event){if(event===undefined){throw new Error('Missing argument: event');}
var i,eventTouch,pointerTouch,touchNumber;for(i=0;i<event.changedTouches.length;i++){if(i!=="length"){eventTouch=event.changedTouches[i];if(event.changedTouches[i].identifier>20){touchNumber=this.findTouchNumber();}
else{touchNumber=eventTouch.identifier;}
pointerTouch=this.touches[touchNumber];pointerTouch.identifier=eventTouch.identifier;pointerTouch.events=pointerTouch.events.slice(0,1);pointerTouch.events.unshift(new Date().getTime());}}
this.onTouchMove(event);},onTouchEnd:function(event){if(event===undefined){throw new Error('Missing argument: event');}
var i,eventTouch,pointerTouch;for(i=0;i<event.changedTouches.length;i++){eventTouch=event.changedTouches[i];if(event.changedTouches[i].identifier>20){pointerTouch=this.touches.getElementByPropertyValue('identifier',eventTouch.identifier);}
else{pointerTouch=this.touches[eventTouch.identifier];}
pointerTouch.events=pointerTouch.events.slice(0,1);pointerTouch.events.unshift(-new Date().getTime());}
this.onTouchMove(event);},onTouchMove:function(event){if(event===undefined){throw new Error('Missing argument: event');}
var i,eventTouch,pointerTouch,roomPos;for(i=0;i<event.touches.length;i++){eventTouch=event.touches[i];if(event.touches[i].identifier>20){pointerTouch=this.touches.getElementByPropertyValue('identifier',eventTouch.identifier);}
else{pointerTouch=this.touches[eventTouch.identifier];}
pointerTouch.set(eventTouch.pageX-engine.arena.offsetLeft-engine.mainCanvas.offsetLeft+document.body.scrollLeft,eventTouch.pageY-engine.arena.offsetTop-engine.mainCanvas.offsetTop+document.body.scrollTop);pointerTouch.x=pointerTouch.x/engine.arena.offsetWidth*engine.canvasResX;pointerTouch.y=pointerTouch.y/engine.arena.offsetHeight*engine.canvasResY;roomPos=this.calculateRoomPosition(pointerTouch);pointerTouch.x=roomPos.x;pointerTouch.y=roomPos.y;}},mouseHasMoved:function(){return engine.last<this.mouse.lastMoved;},isDown:function(button){if(button===undefined){throw new Error('Missing argument: button');}
var i,pointers;switch(this.getButtonType(button)){case"mouse":pointers=button===MOUSE_ANY?this.mouse.buttons:this.mouse.buttons[button];break;case"touch":pointers=button===TOUCH_ANY?this.touches:this.touches[button-TOUCH_1];break;case"any":pointers=this.mouse.buttons.concat(this.touches);}
return this.checkPointer(pointers,"down");},isPressed:function(button){if(button===undefined){throw new Error('Missing argument: button');}
var i,pointers;switch(this.getButtonType(button)){case"mouse":pointers=button===MOUSE_ANY?this.mouse.buttons:this.mouse.buttons[button];break;case"touch":pointers=button===TOUCH_ANY?this.touches:this.touches[button-TOUCH_1];break;case"any":pointers=this.mouse.buttons.concat(this.touches);}
return this.checkPointer(pointers,"pressed");},isReleased:function(button){if(button===undefined){throw new Error('Missing argument: button');}
var i,pointers;switch(this.getButtonType(button)){case"mouse":pointers=button===MOUSE_ANY?this.mouse.buttons:this.mouse.buttons[button];break;case"touch":pointers=button===TOUCH_ANY?this.touches:this.touches[button-TOUCH_1];break;case"any":pointers=this.mouse.buttons.concat(this.touches);}
return this.checkPointer(pointers,"released");},shapeIsPressed:function(button,shape,outside){button=button!==undefined?button:MOUSE_TOUCH_ANY;if(shape===undefined){throw new Error('Missing argument: shape');}
if(typeof shape.contains!=='function'){throw new Error('Argument shape has implement a "contains"-function');}
var i,pointers,pointer,ret,check;pointers=this.isPressed(button);if(!pointers){return false;}
ret=[];for(i=0;i<pointers.length;i++){pointer=pointers[i];if(pointer.x===false||pointer.y===false){continue;}
if(!outside&&shape.contains(pointer)){ret.push(pointer);}
else if(outside&&!shape.contains(pointer)){ret.push(pointer);}}
return ret.length?ret:false;},shapeIsReleased:function(button,shape,outside){button=button!==undefined?button:MOUSE_TOUCH_ANY;if(shape===undefined){throw new Error('Missing argument: shape');}
if(typeof shape.contains!=='function'){throw new Error('Argument shape has implement a "contains"-function');}
var i,pointers,pointer,ret,check;pointers=this.isReleased(button);if(!pointers){return false;}
ret=[];for(i=0;i<pointers.length;i++){pointer=pointers[i];if(pointer.x===false||pointer.y===false){continue;}
if(!outside&&shape.contains(pointer)){ret.push(pointer);}
else if(outside&&!shape.contains(pointer)){ret.push(pointer);}}
return ret.length?ret:false;},shapeIsDown:function(button,shape,outside){button=button!==undefined?button:MOUSE_TOUCH_ANY;if(shape===undefined){throw new Error('Missing argument: shape');}
if(typeof shape.contains!=='function'){throw new Error('Argument shape has implement a "contains"-function');}
var i,pointers,pointer,ret,check;pointers=this.isDown(button);if(!pointers){return false;}
ret=[];for(i=0;i<pointers.length;i++){pointer=pointers[i];if(pointer.x===false||pointer.y===false){continue;}
if(!outside&&shape.contains(pointer)){ret.push(pointer);}
else if(outside&&!shape.contains(pointer)){ret.push(pointer);}}
return ret.length?ret:false;},getButtonType:function(button){if(button>=MOUSE_ANY&&button<=MOUSE_10){return"mouse";}
else if(button>=TOUCH_ANY&&button<=TOUCH_10){return"touch";}
else if(button===MOUSE_TOUCH_ANY){return"any";}
else{throw new Error('Argument button has to be a pointer constant (see jseGlobals.js)');}},checkPointer:function(pointers,state){if(pointers==="undefined"){throw new Error("Missing argument: pointers");}
if(state==="undefined"){throw new Error("Missing argument: state");}
if(['pressed','released','down'].indexOf(state)===-1){throw new Error('Argument state must be one of the following values: "pressed", "released" or "down"');}
var i,pointer,ret;if(!Array.prototype.isPrototypeOf(pointers)){pointers=[pointers];}
ret=[];for(i=0;i<pointers.length;i++){pointer=pointers[i];switch(state){case"pressed":if(pointer.events[0]>engine.last||pointer.events[1]>engine.last){ret.push(pointer);}
break;case"released":if(-pointer.events[0]>engine.last||-pointer.events[1]>engine.last){ret.push(pointer);}
break;case"down":if(pointer.events[0]>0){ret.push(pointer);}
break;}}
return ret.length?ret:false;},calculateRoomPosition:function(vector){var ret,len,camera;ret=vector.copy();len=engine.cameras.length;while(len--){camera=engine.cameras[len];if(camera.projectionRegion.contains(vector)||len===0){ret.subtract(camera.projectionRegion);ret.x*=camera.captureRegion.width/camera.projectionRegion.width;ret.y*=camera.captureRegion.height/camera.projectionRegion.height;ret.add(camera.captureRegion);return ret;}}
return ret;},findTouchNumber:function(){var i;for(i=0;i<this.touches.length;i++){if(!this.checkPointer(this.touches[i],'down')){return i;}}},shapeIsHovered:function(shape,outside){if(!outside&&(shape.contains(this.mouse))){return true;}
else if(outside&&(!shape.contains(this.mouse))){return true;}
return false;},unPress:function(button){if(button===undefined){throw new Error('Missing argument: button');}
var i,ii,pointers;pointers=this.isPressed(button);if(!pointers){return false;}
for(i=0;i<pointers.length;i++){events=pointers[i].events;if(events[0]>engine.last){events.shift();events.push(undefined);unpressed=true;}
if(events[1]>engine.last){events.pop();events.push(undefined);unpressed=true;}}
return true;},outside:function(){return new Rectangle(engine.arena.offsetLeft,engine.arena.offsetTop,engine.arena.offsetWidth,engine.arena.offsetHeight).contains(this.mouse.window)===false;},});new Class('Sound',{Sound:function(audioElement){if(audioElement===undefined){throw new Error('Missing argument: audioElement');}
if(audioElement.toString()!=="[object HTMLAudioElement]"){throw new Error('Argument audioElement has to be of type HTMLAudioElement');}
var i,snd;this.source=audioElement;this.playbackId=0;this.elements=[];snd=this;this.source.addEventListener("canplaythrough",function(){snd.cacheCopies();},false);},cacheCopies:function(){for(i=0;i<engine.cachedSoundCopies;i++){this.elements.push(this.source.cloneNode());this.elements[i].started=false;}},play:function(loop){var i,sound;if(engine.soundsMuted){return false;}
for(i=0;i<this.elements.length;i++){sound=this.elements[i];if((sound.started===false||sound.ended)&&!sound.loop){sound.started=true;sound.volume=1;sound.play();if(loop){sound.loop='loop';}
this.playbackId++;sound.playbackId=this.playbackId;return this.playbackId;}}
return false;},stop:function(playbackId){if(playbackId===undefined){throw new Error('Missing argument: playbackId');}
var i,sound;for(i=0;i<this.elements.length;i++){sound=this.elements[i];if(sound.playbackId===playbackId&&sound.started&&!sound.ended){sound.volume=0;sound.loop=false;return true;}}
return false;},stopAll:function(){var i,sound;for(i=0;i<this.elements.length;i++){sound=this.elements[i];if(sound.started&&!sound.ended){sound.volume=0;sound.loop=false;return true;}}},stopLoop:function(playbackId){if(playbackId===undefined){throw new Error('Missing argument: playbackId');}
var i,sound;for(i=0;i<this.elements.length;i++){sound=this.elements[i];if(sound.playbackId===playbackId&&sound.started&&!sound.ended){sound.loop=false;return true;}}
return false;},});new Class('Music',{Music:function(audioElement){if(audioElement===undefined){throw new Error('Missing argument: audioElement');}
if(audioElement.toString()!=="[object HTMLAudioElement]"){throw new Error('Argument audioElement has to be of type HTMLAudioElement');}
this.source=audioElement;this.paused=false;},play:function(loop){if(engine.musicMuted){return false;}
this.source.play();this.source.paused=false;if(loop){this.source.loop="loop";}
return true;},pause:function(){this.paused=true;this.source.pause();},stop:function(){if(!this.source.ended){this.source.pause();this.source.currentTime=0;this.source.loop=false;return true;}
return false;},stopLoop:function(){if(this.source.started&&!this.source.ended){this.source.loop=false;return true;}
return false;},});