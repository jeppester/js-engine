
jseCreateClass=function(className,inherits){var constructorName,i,inheritClass,newClass;if(!/^\w*$/.test(className)){throw new Error("Invalid class name: "+className);}
constructorName=className.charAt(0).toLowerCase()+className.slice(1);eval('window.'+className+' = function () {this.'+constructorName+'.apply(this, arguments); }');window[className].prototype[constructorName]=function(){};newClass=window[className];newClass.prototype.className=className;newClass.prototype.extendedObjects=[];newClass.prototype.extends=function(object){return this.extendedObjects.indexOf(object)!==-1;}
newClass.prototype.implements=function(object){return(object.prototype.isPrototypeOf(this)?true:this.extends(object));}
if(inherits){if(!Array.prototype.isPrototypeOf(inherits)){throw new Error("Arguments inherits is not an array");}
for(i=0;i<inherits.length;i++){inheritClass=inherits[i];jseExtend(newClass,inheritClass);}}
return newClass;};jseExtend=function(newClass,inheritClass){var functionName;newClass.prototype.extendedObjects.push(inheritClass);Array.prototype.push.apply(newClass.prototype.extendedObjects,inheritClass.prototype.extendedObjects);for(functionName in inheritClass.prototype){if(typeof inheritClass.prototype[functionName]==="function"){newClass.prototype[functionName]=inheritClass.prototype[functionName];}}};jsePurge=function(obj){var name,loop,i;if(obj===undefined){throw new Error(obj);}
if(typeof obj==="string"){obj=engine.objectIndex[obj];}
for(name in engine.loops){if(engine.loops.hasOwnProperty(name)){loop=engine.loops[name];i=loop.activities.length;while(i--){if(obj===loop.activities[i].object){loop.activities.splice(i,1);}}
i=loop.activitiesQueue.length;while(i--){if(obj===loop.activitiesQueue[i].object){loop.activitiesQueue.splice(i,1);}}
i=loop.animations.length;while(i--){if(obj===loop.animations[i].obj){loop.animations.splice(i,1);}}}}
if(obj.parent){obj.parent.removeChildren(obj);}
delete engine.objectIndex[obj.id];};jseSyncLoad=function(filePaths){var i,req,codeString;if(typeof filePaths==="string"){filePaths=[filePaths];}
for(i=0;i<filePaths.length;i++){req=new XMLHttpRequest();req.open('GET',filePaths[i],false);req.send();codeString=req.responseText+"\n//@ sourceURL=/"+filePaths[i];try{eval.call(window,codeString);}
catch(e){throw new Error('Failed loading "'+filePaths[i]+'": '+e.type+' "'+e.arguments[0]+'"');}}
if(window.loadedFiles===undefined){window.loadedFiles=[];}
window.loadedFiles=window.loadedFiles.concat(filePaths);};jseRequest=function(url,params,async,callback,caller){if(url===undefined){throw new Error('Missing argument: url');}
params=params!==undefined?params:'';async=async!==undefined?async:true;caller=caller!==undefined?caller:window;if(typeof params!=='string'){params='data='+JSON.stringify(params);}
if(async&&callback===undefined){throw new Error('Callback function needed for asynchronous requests');}
var req;req=new XMLHttpRequest();if(async){req.onreadystatechange=function(){if(req.readyState===4&&req.status===200){callback.call(caller,req.responseText);}};}
req.open('POST',url,async);req.setRequestHeader("Content-type","application/x-www-form-urlencoded");req.send(params);if(!async){if(req.readyState===4&&req.status===200){return req.responseText;}
else{console.log('XMLHttpRequest failed: '+url);}}};jsonEncode=function(obj,ignore){function jsonIterate(obj,ignore){var ret,i;ignore=ignore===undefined?[]:ignore;switch(typeof obj){case'string':case'number':case'boolean':ret+='"'+obj+'",';break;case'object':if(obj instanceof Array){ret+='[';for(i=0;i<obj.length;i++){ret+=jsonIterate(obj[i],ignore);}
ret+='],';}else{ret+='{';for(i in obj){if(obj.hasOwnProperty(i)){if(ignore.indexOf(i)!==-1){continue;}
ret+='"'+i+'":';ret+=jsonIterate(obj[i],ignore);}}
ret+='},';}
break;}
return ret;}
var json=jsonIterate(obj,ignore);return json.replace(/,\}/gi,'}').replace(/,\]/gi,']').replace(/,$/,'');};Array.prototype.getElementByPropertyValue=function(property,value){var i;for(i=0;i<this.length;i++){if(this[i][property]===value){return this[i];}}
return undefined;};Array.prototype.sortByNumericProperty=function(property,desc){var sortedArray=[],copy=[],currentID,currentVal,i;Array.prototype.push.apply(copy,this);while(copy.length){currentVal=false;for(i=0;i<copy.length;i++){if(!desc){if(copy[i][property]<currentVal||currentVal===false){currentID=i;currentVal=copy[i][property];}}
else{if(copy[i][property]>currentVal||currentVal===false){currentID=i;currentVal=copy[i][property];}}}
sortedArray.push(copy.splice(currentID,1)[0]);}
return sortedArray;};Array.prototype.forEach=function(func){for(var i=0;i<this.length;i++){func.call(this[i],i);}};Object.prototype.importProperties=function(from){var i;for(i in from){if(from.hasOwnProperty(i)){if(i===undefined){continue;}
this[i]=from[i];}}};Object.prototype.implements=function(object){return object.prototype.isPrototypeOf(this);}
KEY_LEFT=37;KEY_UP=38;KEY_RIGHT=39;KEY_DOWN=40;KEY_SPACE=32;KEY_BACKSPACE=8;KEY_TAB=9;KEY_ENTER=13;KEY_SHIFT=16;KEY_CONTROL=17;KEY_ALT_LEFT=18;KEY_CAPSLOCK=20;KEY_ESCAPE=27;KEY_ALT_RIGHT=0;KEY_F1=112;KEY_F2=113;KEY_F3=114;KEY_F4=115;KEY_F5=116;KEY_F6=117;KEY_F7=118;KEY_F8=119;KEY_F9=120;KEY_F10=121;KEY_F11=122;KEY_F12=123;MOUSE_ANY=0;MOUSE_1=1;MOUSE_2=2;MOUSE_3=3;MOUSE_4=4;MOUSE_5=5;MOUSE_6=6;MOUSE_7=7;MOUSE_8=8;MOUSE_9=9;MOUSE_10=10;TOUCH_ANY=20;TOUCH_1=21;TOUCH_2=22;TOUCH_3=23;TOUCH_4=24;TOUCH_5=25;TOUCH_6=26;TOUCH_7=27;TOUCH_8=28;TOUCH_9=29;TOUCH_10=30;MOUSE_TOUCH_ANY=100;SPEED_PIXELS_PER_SECOND=1;SPEED_PIXELS_PER_FRAME=2;polyfillsLoaded=true;if(!window.requestAnimationFrame){window.requestAnimationFrame=(function(){return window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback,element){window.setTimeout(callback,1000/60);};})();}
Engine=function(options){this.engine(options);};Engine.prototype.engine=function(options){this.options=options?options:{};this.load();};Engine.prototype.load=function(){var copyOpt,audioFormats,i,opt,req,gc;engine=this;this.host={hasTouch:'ontouchstart'in document,hasMouse:false,browserEngine:'Unknown',device:'Unknown',supportedAudio:[]};if(navigator.userAgent.match(/Firefox/)){this.host.browserEngine='Gecko';}else if(navigator.userAgent.match(/AppleWebKit/)){this.host.browserEngine='WebKit';if(navigator.userAgent.match(/iPad|iPhone/)){this.host.device='iDevice';}else if(navigator.userAgent.match(/Android/)){this.host.device='Android';}}else if(navigator.userAgent.match(/Trident/)){this.host.browserEngine='Trident';}
audioFormats=['mp3','ogg','wav'];for(i=0;i<audioFormats.length;i++){if(document.createElement('audio').canPlayType('audio/'+audioFormats[i])){this.host.supportedAudio.push(audioFormats[i]);}}
this.avoidSubPixelRendering=true;this.preloadSounds=true;switch(this.host.browserEngine){case'Gecko':break;case'WebKit':this.avoidSubPixelRendering=false;break;case'Trident':break;}
switch(this.host.device){case'iDevice':this.preloadSounds=false;break;case'Android':this.avoidSubPixelRendering=true;break;}
this.running=false;this.manualRedrawDepths=[];this.canvasResX=800;this.canvasResY=600;this.enginePath='js/jsEngine';this.themesPath='themes';this.drawBBoxes=false;this.drawMasks=false;this.useRotatedBoundingBoxes=true;this.pauseOnBlur=true;this.disableRightClick=true;this.arena=document.getElementById('arena');this.autoResize=true;this.autoResizeLimitToResolution=true;this.compositedDepths=[];this.cachedSoundCopies=5;this.gameClassPath="js/Game.js";this.backgroundColor="#FFF";this.timeFactor=1;this.soundsMuted=false;this.musicMuted=false;copyOpt=['backgroundColor','soundsMuted','musicMuted','cacheSounds','cachedSoundCopies','avoidSubPixelRendering','arena','disableRightClick','useRotatedBoundingBoxes','pauseOnBlur','drawBBoxes','drawMasks','loopsPerColCheck','manualRedrawDepths','compositedDepths','canvasResX','canvasResY','autoResize','autoResizeLimitToResolution','enginePath','themesPath','gameClassPath'];for(i=0;i<copyOpt.length;i++){opt=copyOpt[i];if(this.options[opt]!==undefined){this[opt]=this.options[opt];delete this.options[opt];}}
this.mainCanvas=document.createElement("canvas");this.mainCanvas.style.display="block";this.mainCanvas.width=this.canvasResX;this.mainCanvas.height=this.canvasResY;this.arena.appendChild(this.mainCanvas);if(this.autoResize){this.autoResize=false;this.setAutoResize(true);}
else{this.autoResize=true;this.setAutoResize(false);}
if(typeof jseCreateClass==="undefined"){req=new XMLHttpRequest();req.open('GET',this.enginePath+'/jseFunctions.js',false);req.send();eval(req.responseText);}
if(typeof Array.prototype.getElementByPropertyValue==="undefined"){jseSyncLoad(this.enginePath+'/jseExtensions.js');}
if(window.polyfillsLoaded===undefined){jseSyncLoad(this.enginePath+'/jsePolyfills.js');}
if(typeof KEY_UP==="undefined"){jseSyncLoad(this.enginePath+'/jseGlobals.js');}
if(typeof Loader==="undefined"){jseSyncLoad(this.enginePath+'/objects/Loader.js');}
loader=new Loader();loader.loadObjects([this.enginePath+'/objects/Animatable.js',this.enginePath+'/objects/Animator.js',this.enginePath+'/objects/View.js',this.enginePath+'/objects/Vector.js',this.enginePath+'/objects/Line.js',this.enginePath+'/objects/Polygon.js',this.enginePath+'/objects/Rectangle.js',this.enginePath+'/objects/Circle.js',this.enginePath+'/objects/CustomLoop.js',this.enginePath+'/objects/Sprite.js',this.enginePath+'/objects/Collidable.js',this.enginePath+'/objects/TextBlock.js',this.enginePath+'/objects/GameObject.js',this.enginePath+'/objects/Keyboard.js',this.enginePath+'/objects/Pointer.js',this.enginePath+'/objects/Sound.js',this.enginePath+'/objects/Music.js']);gc=this.gameClassPath;loader.loadObjects([gc]);this.gameClassName=gc.match(/(\w*)\.\w+$/)[1];this.defaultTheme=this.options.themes[0];loader.onthemesloaded=function(){engine.initialize();};loader.loadThemes(this.options.themes);};Engine.prototype.initialize=function(){var i,d,objectName;this.objectIndex={};this.frames=0;this.last=new Date().getTime();this.now=this.last;this.gameTime=0;this.executingLoops=false;this.currentId=0;this.drawing=0;this.loops={};this.fps=0;this.fpsCounter=0;this.fpsSecCounter=0;this.depth=[];this.addLoop('eachFrame',new CustomLoop());this.defaultAnimationLoop='eachFrame';this.defaultActivityLoop='eachFrame';this.depthMap=[];for(i=0;i<this.options.depths;i++){d=new View();d.manualRedraw=this.manualRedrawDepths.indexOf(i)!==-1;d.composited=this.compositedDepths.indexOf(i)!==-1;d.ownCanvas=this.makeCanvas();if(d.manualRedraw||d.composited){d.ctx=d.ownCanvas.getContext('2d');}
else{d.ctx=this.mainCanvas.getContext('2d');}
this.depth.push(d);}
if(this.disableRightClick){this.arena.oncontextmenu=function(){return false;};}
keyboard=new Keyboard();pointer=new Pointer();animator=new Animator();if(this.pauseOnBlur){window.addEventListener('blur',function(){engine.stopMainLoop();});window.addEventListener('focus',function(){engine.startMainLoop();});}
if(window[this.gameClassName]!=="undefined"){objectName=this.gameClassName.substr(0,1).toLowerCase()+this.gameClassName.substr(1);eval(objectName+" = new "+this.gameClassName+'()');}
else{console.log('No game class found');loader.hideOverlay();}
this.startMainLoop();console.log('jsEngine started');};Engine.prototype.setAutoResize=function(enable){if(enable&&!this.autoResize){this.autoResize=true;this.autoResizeCanvas();window.addEventListener('resize',engine.autoResizeCanvas,false);window.addEventListener('load',engine.autoResizeCanvas,false);}
else if(!enable&&this.autoResize){this.autoResize=false;window.removeEventListener('resize',engine.autoResizeCanvas,false);window.removeEventListener('load',engine.autoResizeCanvas,false);this.arena.style.top="50%";this.arena.style.left="50%";this.arena.style.marginLeft=-this.canvasResX/2+"px";this.arena.style.marginTop=-this.canvasResY/2+"px";this.mainCanvas.style.width=this.canvasResX+"px";this.mainCanvas.style.height=this.canvasResY+"px";}}
Engine.prototype.autoResizeCanvas=function(){if(this!==engine){engine.autoResizeCanvas();return;}
var h,w,windowWH,gameWH;windowWH=window.innerWidth/window.innerHeight;gameWH=this.canvasResX/this.canvasResY;if(windowWH>gameWH){h=window.innerHeight;w=this.canvasResX/this.canvasResY*h;}else{w=window.innerWidth;h=this.canvasResY/this.canvasResX*w;}
if(this.autoResizeLimitToResolution){w=Math.min(w,this.canvasResX);h=Math.min(h,this.canvasResY);}
this.arena.style.top="50%";this.arena.style.left="50%";this.arena.style.marginTop=-h/2+"px";this.arena.style.marginLeft=-w/2+"px";this.mainCanvas.style.height=h+"px";this.mainCanvas.style.width=w+"px";};Engine.prototype.makeCanvas=function(){var c;c=document.createElement("canvas");c.width=this.canvasResX;c.height=this.canvasResY;return c;};Engine.prototype.convertSpeed=function(speed,from,to){if(speed===undefined){throw new Error('Missing argument: speed');}
if(speed.implements(Vector)){return new Vector(this.convertSpeed(speed.x,from,to),this.convertSpeed(speed.y,from,to));}
from=from!==undefined?from:SPEED_PIXELS_PER_SECOND;to=to!==undefined?to:SPEED_PIXELS_PER_FRAME;switch(from){case SPEED_PIXELS_PER_SECOND:speed=speed*this.timeIncrease/1000;break;case SPEED_PIXELS_PER_FRAME:break;}
switch(to){case SPEED_PIXELS_PER_SECOND:speed=speed/this.timeIncrease*1000;break;case SPEED_PIXELS_PER_FRAME:break;}
return speed;};Engine.prototype.clearStage=function(){var depthId;for(depthId=0;depthId<this.depth.length;depthId++){this.depth[depthId].removeAllChildren();}};Engine.prototype.setSoundsMuted=function(muted){muted=muted!==undefined?muted:true;if(muted){loader.getAllSounds().forEach(function(){this.stopAll();});}
this.soundsMuted=muted;};Engine.prototype.setMusicMuted=function(muted){muted=muted!==undefined?muted:true;if(muted){loader.getAllMusic().forEach(function(){this.stop();});}
this.musicMuted=muted;};Engine.prototype.setDefaultTheme=function(themeName,enforce){if(themeName===undefined){throw new Error('Missing argument: themeName');}
if(loader.themes[themeName]===undefined){throw new Error('Trying to set unexisting theme: '+themeName);}
var i,refreshSource;enforce=enforce!==undefined?enforce:false;this.defaultTheme=themeName;i=this.depth.length;refreshSource=function(){if(this.refreshSource){this.refreshSource();}};while(i--){if(enforce){this.depth[i].setTheme(undefined,enforce);}
else{this.depth[i].applyToThisAndChildren(refreshSource);}}
this.redraw(1);};Engine.prototype.addLoop=function(name,loop){if(loop===undefined){throw new Error('Missing argument: loop');}
if(name===undefined){throw new Error('Missing argument: name');}
this.loops[name]=loop;};Engine.prototype.removeLoop=function(name){if(name===undefined){throw new Error('Missing argument: name');}
delete this.loops[name];};Engine.prototype.startMainLoop=function(){if(this.running){return;}
this.last=new Date().getTime();this.running=true;engine.mainLoop();};Engine.prototype.stopMainLoop=function(){if(!this.running){return;}
this.running=false;};Engine.prototype.mainLoop=function(test){var name;if(!this.running){return;}
this.now=new Date().getTime();this.timeIncrease=(this.now-this.last)*this.timeFactor;this.executingLoops=true;this.frames++;animator.updateAllLoops();for(name in this.loops){if(this.loops.hasOwnProperty(name)){this.loops[name].execute();}}
this.gameTime+=this.timeIncrease;this.executingLoops=false;this.lastLoopTime=this.now-this.last;this.last=this.now;this.redraw(0);if(this.fpsMsCounter<1000){this.fpsCounter++;this.fpsMsCounter+=this.lastLoopTime;}
else{this.fps=this.fpsCounter;this.fpsCounter=0;this.fpsMsCounter=0;}
requestAnimationFrame(function(time){engine.mainLoop(time);});};Engine.prototype.setCanvasResX=function(res){this.mainCanvas.width=res;this.canvasResX=res;if(this.autoResize){this.autoResizeCanvas();}};Engine.prototype.setCanvasResY=function(res){this.mainCanvas.height=res;this.canvasResY=res;if(this.autoResize){this.autoResizeCanvas();}};Engine.prototype.registerObject=function(obj,id){if(obj===undefined){throw new Error('Missing argument: obj');}
if(id===undefined){this.currentId++;id="obj"+(this.currentId-1);}else if(this.objectIndex[id]!==undefined){throw new Error('Object id already taken: '+id);}
this.objectIndex[id]=obj;obj.id=id;return id;};Engine.prototype.redraw=function(drawManualRedrawDepths){if(drawManualRedrawDepths===undefined){throw new Error('Missing argument: manualRedrawDepths');}
var i,d;this.mainCanvas.getContext('2d').fillStyle=this.backgroundColor;this.mainCanvas.getContext('2d').fillRect(0,0,this.canvasResX,this.canvasResY);for(i=0;i<this.depth.length;i++){d=this.depth[i];if(d.manualRedraw||d.composited){if(d.manualRedraw){if(drawManualRedrawDepths){d.ctx.clearRect(0,0,this.canvasResX,this.canvasResY);d.drawChildren(d.ctx);}}
else{d.ctx.clearRect(0,0,this.canvasResX,this.canvasResY);d.drawChildren(d.ctx);}
this.mainCanvas.getContext('2d').drawImage(d.ownCanvas,0,0,this.canvasResX,this.canvasResY);}
else{d.drawChildren(d.ctx);}}};jseCreateClass('Animator');Animator.prototype.addAnimation=function(animation,loop){if(animation===undefined){throw new Error('Missing argument: animation');}
if(loop===undefined){throw new Error('Missing argument: loop');}
var anim,propList,currentAnimations,i,cur,propName;loop=engine.loops[loop];anim=animation;anim.start=loop.time;propList=Object.keys(anim.prop);currentAnimations=anim.obj.getAnimations();for(i=0;i<currentAnimations.length;i++){cur=currentAnimations[i];for(propName in cur.prop){if(cur.prop.hasOwnProperty(propName)){if(propList.indexOf(propName)!==-1){delete cur.prop[propName];}}}}
loop.animations.push(anim);};Animator.prototype.updateAllLoops=function(){var name;for(name in engine.loops){if(engine.loops.hasOwnProperty(name)){this.updateLoop(name);}}};Animator.prototype.updateLoop=function(loop){if(loop===undefined){throw new Error('Missing argument: loop');}
var animId,a,propId,t;loop=engine.loops[loop];for(animId=loop.animations.length-1;animId>-1;animId--){a=loop.animations[animId];if(a===undefined){continue;}
t=loop.time-a.start;if(t>a.dur){loop.animations.splice(animId,1);for(propId in a.prop){if(a.prop.hasOwnProperty(propId)){a.obj[propId]=a.prop[propId].end;}}
if(typeof a.callback==="string"){eval(a.callback);}else{a.callback.call(a.obj);}}else{for(propId in a.prop){if(a.prop.hasOwnProperty(propId)){a.obj[propId]=this.ease(a.easing,t,a.prop[propId].begin,a.prop[propId].end-a.prop[propId].begin,a.dur);}}}}};Animator.prototype.ease=function(type,t,b,c,d){var a;switch(type){case"linear":t/=d;return b+c*t;case"quadIn":t/=d;return b+c*t*t;case"quadOut":t/=d;return b-c*t*(t-2);case"quadInOut":t=t/d*2;if(t<1){return b+c*t*t/2;}else{t--;return b+c*(1-t*(t-2))/2;}
case"powerIn":t/=d;a=c/Math.abs(c);return b+a*Math.pow(Math.abs(c),t);case"powerOut":t/=d;a=c/Math.abs(c);return b+c-a*Math.pow(Math.abs(c),1-t);case"powerInOut":t=t/d*2;a=c/Math.abs(c);if(t<1){return b+a*Math.pow(Math.abs(c),t)/2;}else{t--;return b+c-a*Math.pow(Math.abs(c),1-t)/2;}
case"sinusInOut":t/=d;return b+c*(1+Math.cos(Math.PI*(1+t)))/2;}
return b+c;};jseCreateClass('Animatable');Animatable.prototype.animate=function(properties,options){if(properties===undefined){throw new Error('Missing argument: properties');}
if(options===undefined){throw new Error('Missing argument: options');}
var anim,i,c,loop,map,opt;anim={},map=properties,opt=options?options:{};if(!map){return false;}
anim.obj=this;loop=opt.loop!==undefined?opt.loop:engine.defaultAnimationLoop;anim.callback=opt.callback!==undefined?opt.callback:function(){};anim.easing=opt.easing!==undefined?opt.easing:"quadInOut";anim.dur=opt.dur!==undefined?opt.dur:1000;anim.prop={};for(i in map){if(map.hasOwnProperty(i)){anim.prop[i]={begin:this[i],end:map[i]};}}
c=0;for(i in anim.prop){if(anim.prop[i].begin===anim.prop[i].end){delete anim.prop[i];}else{c++;}}
if(!c&&anim.callback===function(){}){console.log('Animation skipped, nothing to animate');return;}
animator.addAnimation(anim,loop);};Animatable.prototype.isAnimated=function(){var name,loop,animId,animation;for(name in engine.loops){if(engine.loops.hasOwnProperty(name)){loop=engine.loops[name];for(animId=loop.animations.length-1;animId>-1;animId--){animation=loop.animations[animId];if(animation.obj===this){return true;}}}}
return false;};Animatable.prototype.getAnimations=function(){var animations,name,loop,animId,animation;animations=[];for(name in engine.loops){if(engine.loops.hasOwnProperty(name)){loop=engine.loops[name];for(animId=loop.animations.length-1;animId>-1;animId--){animation=loop.animations[animId];if(animation.obj===this){animations.push(animation);}}}}
return animations;};Animatable.prototype.stopAnimations=function(){var animations,name,loop,animId,animation;animations=[];for(name in engine.loops){if(engine.loops.hasOwnProperty(name)){loop=engine.loops[name];for(animId=loop.animations.length-1;animId>-1;animId--){animation=loop.animations[animId];if(animation.obj===this){loop.animations.splice(animId,1);}}}}};jseCreateClass('View');View.prototype.view=function(){this.children=[];};View.prototype.addChildren=function(child1,child2){if(arguments.length===0){throw new Error('This function needs at least one argument');}
var i,child;for(i=0;i<arguments.length;i++){child=arguments[i];if(typeof child!=='object'){throw new Error('Argument "child" has to be of type "object"');}
this.children.push(child);child.parent=this;if(child.setDepth&&this.depth!==undefined){child.setDepth(this.depth);}
if(child.refreshSource){child.refreshSource();}}
return arguments;};View.prototype.insertBelow=function(insertChildren,child){if(insertChildren===undefined){throw new Error('Missing argument: insertChildren');}
if(child===undefined){throw new Error('Missing argument: child');}
var arr,i;if(!Array.prototype.isPrototypeOf(insertChildren)){arr=[];arr.push(insertChildren);insertChildren=arr;}
if((i=this.children.indexOf(child))!==-1){this.children.splice.apply(this.children,[i,0].concat(insertChildren));}
for(i=0;i<insertChildren.length;i++){child=insertChildren[i];child.parent=this;if(child.setDepth&&this.depth!==undefined){child.setDepth(this.depth);}
if(child.refreshSource){child.refreshSource();}}
return insertChildren;};View.prototype.getChildren=function(){var ret,i;ret=[];for(i=0;i<this.children.length;i++){ret.push(this.children[i]);}
return ret;};View.prototype.setTheme=function(themeName,recursive){if(themeName){if(loader.themes[themeName]===undefined){throw new Error('Trying to set unexisting theme: '+themeName);}}
else{themeName=undefined;}
var i;recursive=recursive!==undefined?recursive:false;this.theme=themeName;if(this.refreshSource){this.refreshSource();}
if(recursive){for(i=0;i<this.children.length;i++){this.children[i].setTheme(undefined,true);}}
else{this.applyToThisAndChildren(function(){if(this.refreshSource){this.refreshSource();}});}};View.prototype.applyToThisAndChildren=function(func){if(func===undefined){throw new Error('Missing argument: function');}
var i;func.call(this);for(i=0;i<this.children.length;i++){this.children[i].applyToThisAndChildren(func);}};View.prototype.remove=function(){this.removeAllChildren();jsePurge(this);};View.prototype.removeAllChildren=function(){if(this.children.length){this.removeChildren.apply(this,this.children);}};View.prototype.removeChildren=function(child1,child2){if(arguments.length===0){throw new Error('This function needs at least one argument');}
var i,childId,removed;removed=[];i=arguments.length;while(i>-1){childId=this.children.indexOf(arguments[i]);if(childId!==-1){this.children.splice(childId,1);removed.push(arguments[i]);arguments[i].parent=undefined;}
i--;}
return removed;};View.prototype.drawChildren=function(ctx){var i;if(this.drawCanvas){this.drawCanvas(ctx);if(engine.drawBBoxes&&this.drawBBox){if(engine.useRotatedBoundingBoxes){this.drawRotatedBBox(ctx);}
else{this.drawBBox(ctx);}}
if(engine.drawMasks&&this.drawMask){this.drawMask(ctx);}}
if(!this.children){console.log(this);return;}
for(i=0;i<this.children.length;i++){if(this.children[i].drawChildren){this.children[i].drawChildren(ctx);}}};jseCreateClass('Vector',[Animatable,View]);Vector.prototype.vector=function(x,y){this.view();this.set(x,y);};Vector.prototype.set=function(x,y){this.x=x!==undefined?x:0;this.y=y!==undefined?y:0;return this;};Vector.prototype.setFromDirection=function(direction,length){if(typeof direction!=='number'){throw new Error('Argument direction should be of type: Number');}
if(typeof length!=='number'){throw new Error('Argument length should be of type: Number');}
this.x=Math.cos(direction)*length;this.y=Math.sin(direction)*length;return this;};Vector.prototype.copy=function(){return new Vector(this.x,this.y);};Vector.prototype.move=function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x+=x;this.y+=y;return this;};Vector.prototype.rotate=function(dir){if(typeof dir!=='number'){throw new Error('Argument dir should be of type: Number');}
this.setFromDirection(this.getDirection()+dir,this.getLength());return this;};Vector.prototype.scale=function(factor){if(typeof factor!=='number'){throw new Error('Argument factor should be of type Number');}
this.x*=factor;this.y*=factor;return this;};Vector.prototype.add=function(vector){if(vector.implements(Vector)){this.x+=vector.x;this.y+=vector.y;}
else if(typeof vector==='number'){this.x+=vector;this.y+=vector;}
else{throw new Error('Argument vector should be of type Vector or Number');}
return this;};Vector.prototype.subtract=function(vector){if(vector.implements(Vector)){this.x-=vector.x;this.y-=vector.y;}
else if(typeof vector==='number'){this.x-=vector;this.y-=vector;}
else{throw new Error('Argument vector should be of type Vector or Number');}
return this;};Vector.prototype.divide=function(vector){if(vector.implements(Vector)){this.x/=vector;this.y/=vector;}
else if(typeof vector==='number'){this.x/=vector;this.y/=vector;}
else{throw new Error('Argument vector should be of type Vector or Number');}
return this;};Vector.prototype.multiply=function(vector){if(!vector.implements(Vector)){throw new Error('Argument vector should be of type Vector');}
this.x*=vector.x;this.y*=vector.y;return this;};Vector.prototype.getDot=function(vector){if(!vector.implements(Vector)){throw new Error('Argument vector should be of type: Vector');}
return this.x*vector.x+this.y*vector.y;};Vector.prototype.getCross=function(vector){if(!vector.implements(Vector)){throw new Error('Argument vector should be of type: Vector');}
return this.x*vector.y+this.y*vector.x;};Vector.prototype.getLength=function(){return Math.sqrt(this.getDot(this));};Vector.prototype.getDirection=function(){return Math.atan2(this.y,this.x);};Vector.prototype.getDirectionTo=function(point){if(!point.implements(Vector)){throw new Error('Only Vectors or objects inheriting Vector are supported');}
return point.copy().subtract(this).getDirection();};Vector.prototype.getDistance=function(object){if(object.implements(Vector)){return object.copy().subtract(this).getLength();}
else if(object.implements(Line)){return object.getDistance(this);}
else if(object.implements(Circle)){return object.getDistance(this);}
else if(object.implements(Rectangle)){return object.getDistance(this);}
else if(object.implements(Polygon)){return object.getDistance(this);}
else{throw new Error('Agument object should be of type: Vector, Line, Circle, Rectangle or Polygon');}}
Vector.prototype.drawCanvas=function(c){c.save();c.fillStyle='#f00';c.strokeStyle="#f00";c.moveTo(this.x,this.y);c.arc(this.x,this.y,2,0,Math.PI*2,true);c.fill();c.restore();};jseCreateClass('Line',[View]);Line.prototype.line=function(startVector,endVector){startVector=startVector!==undefined?startVector:new Vector(0,0);endVector=endVector!==undefined?endVector:new Vector(0,0);this.view();this.setFromVectors(startVector,endVector);};Line.prototype.setFromVectors=function(startVector,endVector){if(!startVector.implements(Vector)){throw new Error('Agument startVector should be of type: Vector');}
if(!endVector.implements(Vector)){throw new Error('Agument endVector should be of type: Vector');}
this.a=startVector;this.b=endVector;return this;};Line.prototype.setFromCoordinates=function(x1,y1,x2,y2){x1=x1!==undefined?x1:0;y1=y1!==undefined?y1:0;x2=x2!==undefined?x2:0;y2=y2!==undefined?y2:0;this.a=new Vector(x1,y1);this.b=new Vector(x2,y2);return this;};Line.prototype.copy=function(){return new Line(this.a,this.b);};Line.prototype.move=function(x,y){this.a.move(x,y);this.b.move(x,y);return this;};Line.prototype.rotate=function(dir){if(typeof dir!=='number'){throw new Error('Argument dir should be of type: Number');}
this.a.rotate(dir);this.b.rotate(dir);return this;};Line.prototype.scale=function(factor){if(typeof factor!=='number'){throw new Error('Argument factor should be of type: Number');}
this.a.scale(factor);this.b.scale(factor);return this;};Line.prototype.add=function(vector){this.a.add(vector);this.b.add(vector);return this;};Line.prototype.subtract=function(vector){this.a.substract(vector);this.b.substract(vector);return this;};Line.prototype.divide=function(vector){this.a.divide(vector);this.b.divide(vector);return this;};Line.prototype.multiply=function(vector){this.a.multiply(vector);this.b.multiply(vector);return this;};Line.prototype.intersects=function(object){if(object.implements(Line)){var c1,c2;c1=(this.b.x-this.a.x)*(object.a.y-this.b.y)-(object.a.x-this.b.x)*(this.b.y-this.a.y);c2=(this.b.x-this.a.x)*(object.b.y-this.b.y)-(object.b.x-this.b.x)*(this.b.y-this.a.y);if(c1*c2>0){return false;}
c1=(object.b.x-object.a.x)*(this.a.y-object.b.y)-(this.a.x-object.b.x)*(object.b.y-object.a.y);c2=(object.b.x-object.a.x)*(this.b.y-object.b.y)-(this.b.x-object.b.x)*(object.b.y-object.a.y);return c1*c2<0;}
else if(object.implements(Circle)){return object.intersects(this);}
else if(object.implements(Rectangle)){return object.getPolygon().intersects(this);}
else if(object.implements(Polygon)){return object.intersects(this);}
else{throw new Error('Agument object should be of type: Line, Rectangle, Circle or Polygon');}};Line.prototype.getLength=function(){return this.b.copy().subtract(this.a).getLength();};Line.prototype.getDistance=function(object){var ba,ab,bc,ac;if(object.implements(Vector)){ba=this.a.copy().subtract(this.b);ab=this.b.copy().subtract(this.a);bc=object.copy().subtract(this.b);ac=object.copy().subtract(this.a);if(ab.getDot(bc)>0){return bc.getLength();}
else if(ba.getDot(ac)>0){return ac.getLength();}
else{return Math.abs(ab.getCross(ac)/ab.getLength());}}
else if(object.implements(Line)){return Math.min(this.getDistance(object.a),this.getDistance(object.b),object.getDistance(this.a),object.getDistance(this.b));}
else if(object.implements(Rectangle)){return object.getDistance(this);}
else if(object.implements(Circle)){return object.getDistance(this);}
else{throw new Error('Agument object should be of type: Vector, Line, Circle, Rectangle or Polygon');}};Line.prototype.drawCanvas=function(c){c.save();c.strokeStyle="#f00";c.beginPath();c.moveTo(this.a.x,this.a.y);c.lineTo(this.b.x,this.b.y);c.stroke();c.restore();};jseCreateClass('Rectangle',[Animatable,View]);Rectangle.prototype.rectangle=function(x,y,width,height){this.view();this.set(x,y,width,height);};Rectangle.prototype.set=function(x,y,width,height){this.x=x!==undefined?x:0;this.y=y!==undefined?y:0;this.width=width!==undefined?width:0;this.height=height!==undefined?height:0;return this;};Rectangle.prototype.setFromVectors=function(position,size){position=position!==undefined?position:new Vector();size=size!==undefined?size:new Vector();this.x=position.x;this.y=position.y;this.width=size.x;this.height=size.y;return this;};Rectangle.prototype.copy=function(){return new Rectangle(this.x,this.y,this.width,this.height);};Rectangle.prototype.move=function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x+=x;this.y+=y;return this;};Rectangle.prototype.moveTo=function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x=x;this.y=y;return this;};Rectangle.prototype.scale=function(factor){if(typeof factor!=='number'){throw new Error('Argument factor should be of type Number');}
this.width*=factor;this.height*=factor;return this;};Rectangle.prototype.getPolygon=function(){return new Polygon(this.getPoints());};Rectangle.prototype.getPoints=function(){return[new Vector(this.x,this.y),new Vector(this.x+this.width,this.y),new Vector(this.x+this.width,this.y+this.height),new Vector(this.x,this.y+this.height)];};Rectangle.prototype.getArea=function(){return this.width*this.height;};Rectangle.prototype.getDiagonal=function(){return Math.sqrt(Math.pow(this.width,2)+Math.pow(this.height,2));};Vector.prototype.getDistance=function(object){this.getPolygon().getDistance(object);}
Rectangle.prototype.contains=function(object){var polygon=this.getPolygon();return polygon.contains(object);};Rectangle.prototype.drawCanvas=function(c){var i,len;c.save();c.strokeStyle="#f00";c.moveTo(this.x,this.y);c.lineTo(this.x+this.width,this.y);c.lineTo(this.x+this.width,this.y+this.height);c.lineTo(this.x,this.y+this.height);c.lineTo(this.x,this.y);c.stroke();c.restore();};jseCreateClass('Polygon',[View]);Polygon.prototype.polygon=function(points){this.view();this.setFromPoints(points);};Polygon.prototype.setFromPoints=function(points){this.points=points;return this;};Polygon.prototype.setFromCoordinates=function(x1,y1,x2,y2,x3,y3){var numPoints,i,x,y;numPoints=Math.floor(arguments.length/2);this.points=[];for(i=0;i<numPoints;i++){x=arguments[i*2];y=arguments[i*2+1];if(typeof x!=='number'||typeof y!=='number'){throw new Error('All arguments should be of type: Number');}
this.points.push(new Vector(x,y));}
return this;};Polygon.prototype.move=function(x,y){var moveVect,i;moveVect=new Vector(x,y);for(i=0;i<this.points.length;i++){this.points[i].add(moveVect);}
return this;};Polygon.prototype.rotate=function(dir){var i;for(i=0;i<this.points.length;i++){this.points[i].rotate(dir);}
return this;};Polygon.prototype.scale=function(factor){if(typeof factor!=='number'){throw new Error('Argument factor should be of type Number');}
var i;for(i=0;i<this.points.length;i++){this.points[i].scale(factor);}
return this;};Polygon.prototype.copy=function(){return new Polygon(this.getPoints());};Polygon.prototype.getPoints=function(){var points,i;points=[];for(i=0;i<this.points.length;i++){points.push(this.points[i].copy());}
return points;};Polygon.prototype.getLines=function(){var lines,points,i,to;lines=[];points=this.points;for(i=0;i<points.length;i++){to=i===points.length-1?0:i+1;lines.push(new Line(points[i],points[to]));}
return lines;};Polygon.prototype.getDistance=function(object){var min,lines,i,pVector;dist=2E+10308;lines=this.getLines();if(object.implements(Vector)){for(i=0;i<lines.length;i++){dist=Math.min(dist,lines[i].getDistance(object));}
return dist;}
else if(object.implements(Line)){for(i=0;i<lines.length;i++){dist=Math.min(dist,lines[i].getDistance(object));}
return dist;}
else if(object.implements(Circle)){pVector=new Vector(object.x,object.y);for(i=0;i<lines.length;i++){dist=Math.min(dist,lines[i].getDistance(object));}
return dist-object.radius;}
else if(object.implements(Rectangle)){return object.getDistance(this);}
else if(object.implements(Polygon)){}
else{throw new Error('Agument object should be of type: Vector, Line, Circle, Rectangle or Polygon');}};Polygon.prototype.contains=function(object){var polRect;if(object.implements(Vector)){if(this.intersects(new Line().setFromCoordinates(-100000,-100000,object.x,object.y),true)%2){return true;}
else{return false;}}
else if(object.implements(Line)){if(!this.intersects(object)&&this.contains(object.a)){return true;}
else{return false;}}
else if(object.implements(Polygon)){if(object.points.length>0&&!this.intersects(object)&&this.contains(object.points[0])){return true;}
else{return false;}}
else if(object.implements(Rectangle)){polRect=object.getPolygon();return this.contains(polRect);}
else if(object.implements(Circle)){if(this.contains(new Vector(object.x,object.y))){return!this.intersects(object);}
else{return false;}}
else{throw new Error('Argument object has to be of type: Vector, Line, Rectangle or Polygon');}};Polygon.prototype.intersects=function(object,countIntersections){var intersects,intersectionCount,lines,line,oLines,oLine,i,ii,polRect,inside,outside,pVector;intersects=false;countIntersections=countIntersections!==undefined?countIntersections:false;if(countIntersections){intersectionCount=0;}
if(object.implements(Line)){lines=this.getLines();for(i=0;i<lines.length;i++){line=lines[i];if(line.intersects(object)){if(countIntersections){intersectionCount++;}
else{return true;}}}}
else if(object.implements(Polygon)){lines=this.getLines();oLines=object.getLines();for(i=0;i<lines.length;i++){line=lines[i];for(ii=0;ii<oLines.length;ii++){oLine=oLines[ii];if(line.intersects(oLine)){if(countIntersections){intersectionCount++;}
else{return true;}}}}}
else if(object.implements(Rectangle)){polRect=object.getPolygon();return this.intersects(polRect);}
else if(object.implements(Circle)){lines=this.getLines();for(i=0;i<lines.length;i++){if(object.intersects(lines[i])){return true;}}
return false;}
else{throw new Error('Argument object has to be of type: Line, Rectangle, Circle or Polygon');}
if(countIntersections){return intersectionCount;}
else{return false;}};Polygon.prototype.drawCanvas=function(c){var i,len;c.save();c.strokeStyle="#f00";len=this.points.length;c.moveTo(this.points[len-1].x,this.points[len-1].y);for(i=0;i<len;i++){c.lineTo(this.points[i].x,this.points[i].y);}
c.stroke();c.restore();};jseCreateClass('Circle',[Animatable,View]);Circle.prototype.circle=function(x,y,radius){this.view();this.set(x,y,radius);};Circle.prototype.set=function(x,y,radius){x=x!==undefined?x:0;y=y!==undefined?y:0;radius=radius!==undefined?radius:0;this.x=x;this.y=y;this.radius=radius;return this;};Circle.prototype.copy=function(){return new Circle(this.x,this.y,this.radius);};Circle.prototype.move=function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x+=x;this.y+=y;return this;};Circle.prototype.moveTo=function(x,y){if(typeof x!=='number'){throw new Error('Argument x should be of type: Number');}
if(typeof y!=='number'){throw new Error('Argument y should be of type: Number');}
this.x=x;this.y=y;return this;};Circle.prototype.scale=function(factor){if(typeof factor!=='number'){throw new Error('Argument factor should be of type Number');}
this.radius*=factor;return this;};Circle.prototype.getArea=function(){return Math.pow(this.radius)*Math.PI;};Circle.prototype.getDistance=function(object){if(object.implements(Vector)){return object.getDistance(new Vector(-this.x,-this.y))-this.radius;}
else if(object.implements(Line)){return object.getDistance(new Vector(this.x,this.y))-this.radius;}
else if(object.implements(Circle)){return object.getDistance(this);}
else if(object.implements(Rectangle)){return object.getDistance(this);}
else if(object.implements(Polygon)){return object.getDistance(this);}
else{throw new Error('Agument object should be of type: Vector, Line, Circle, Rectangle or Polygon');}}
Circle.prototype.contains=function(object){var i,cDist;if(object.implements(Vector)){return object.copy().move(-this.x,-this.y).getLength()<this.radius;}
else if(object.implements(Line)){return this.contains(object.a)&&this.contains(object.b);}
else if(object.implements(Circle)){cDist=new Vector(object.x,object.y).move(-this.x,-this.y).getLength();return cDist+object.radius<this.radius;}
else if(object.implements(Rectangle)){return this.contains(object.getPolygon());}
else if(object.implements(Polygon)){for(i=0;i<object.points.length;i++){if(!this.contains(object.points[i])){return false;}}
return true;}
else{throw new Error('Argument object has to be of type: Vector, Line, Circle, Rectangle or Polygon');}};Circle.prototype.intersects=function(object){if(object.implements(Line)){return this.contains(object)===false&&object.getDistance(this)<0;}
else if(object.implements(Circle)){return new Vector(this.x,this.y).move(-object.x,-object.y).getLength<this.radius+object.radius;}
else if(object.implements(Rectangle)){return object.getPolygon().intersects(this);}
else if(object.implements(Polygon)){return object.intersects(this);}
else{throw new Error('Argument object has to be of type: Line, Circle, Rectangle or Polygon');}};Circle.prototype.drawCanvas=function(c){c.save();c.strokeStyle="#f00";c.beginPath();c.arc(this.x,this.y,this.radius,0,Math.PI*2,true);c.stroke();c.restore();};jseCreateClass('Loader');Loader.prototype.loader=function(){this.sounds={};this.images={};this.scripts={};this.loaded={classes:[]};this.themes={};this.callback=false;this.loadOverlay=document.createElement('div');this.loadOverlay.setAttribute('style','border: 0;position: absolute;top: 0;left: 0;width: 100%;height: 100%;z-index: 100;opacity: 1;');this.loadOverlay.id="loadOverlay";this.loadOverlay.innerHTML='<div id="loadOverlayText">JsEngine loading...</div>';engine.arena.appendChild(this.loadOverlay);};Loader.prototype.hideOverlay=function(callback){this.fadeCallback=callback;this.fadeOpacity=1;this.fade=function(){var obj=loader.loadOverlay;loader.fadeOpacity=Math.max(0,loader.fadeOpacity-0.1);obj.style.opacity=loader.fadeOpacity;if(loader.fadeOpacity!==0){setTimeout(function(){loader.fade();},30);}
else{engine.arena.removeChild(loader.loadOverlay);delete loader.fade;if(loader.fadeCallback){loader.fadeCallback();}
delete loader.fadeCallback;}};this.fade();};Loader.prototype.getImage=function(ressource,themeName){if(ressource===undefined){throw new Error('Missing argument: ressource');}
themeName=themeName!==undefined?themeName:engine.defaultTheme;return this.getRessource(ressource,'images',themeName);};Loader.prototype.getSound=function(ressource,themeName){if(ressource===undefined){throw new Error('Missing argument: ressource');}
themeName=themeName!==undefined?themeName:engine.defaultTheme;return this.getRessource(ressource,'sfx',themeName);};Loader.prototype.getMusic=function(ressource,themeName){if(ressource===undefined){throw new Error('Missing argument: ressource');}
themeName=themeName!==undefined?themeName:engine.defaultTheme;return this.getRessource(ressource,'music',themeName);};Loader.prototype.getMask=function(ressource,themeName){if(ressource===undefined){throw new Error('Missing argument: ressource');}
themeName=themeName!==undefined?themeName:engine.defaultTheme;var mask;mask=this.getRessource(ressource,'masks',themeName);if(mask){return mask;}
else{mask=this.generateMask(ressource);this.themes[themeName].masks[ressource]=mask;return mask;}};Loader.prototype.getRessource=function(ressource,typeString,themeName){if(ressource===undefined){throw new Error('Missing argument: ressource');}
if(typeString===undefined){throw new Error('Missing argument: typeString');}
if(themeName===undefined){throw new Error('Missing argument: themeName');}
var res,inh,i;if(ressource.indexOf('/')!==-1){ressource=ressource.replace(/\//g,'.');}
res=this.themes[themeName][typeString][ressource];if(res===undefined){for(i=0;i<this.themes[themeName].inherit.length;i++){inh=this.themes[themeName].inherit[i];if(this.themes[inh]){res=this.themes[inh][typeString][ressource];if(res){break;}}}}
return res===undefined?false:res;};Loader.prototype.getImageSources=function(){var object,sourceStrings,currentDir,loopThrough,inheritTheme,i;object=this.themes[engine.defaultTheme].images;sourceStrings=[];currentDir=[];loopThrough=function(object){var pushStr,name;if(object.src!==undefined){pushStr=currentDir.join('.');if(sourceStrings.indexOf(pushStr)===-1){sourceStrings.push(pushStr);}}
else{for(name in object){if(object.hasOwnProperty(name)){currentDir.push(name);loopThrough(object[name]);currentDir.pop();}}}};loopThrough(object);for(i=0;i<this.themes[engine.defaultTheme].inherit.length;i++){inheritTheme=this.themes[this.themes[engine.defaultTheme].inherit[i]];if(inheritTheme!==undefined&&inheritTheme.images!==undefined){loopThrough(inheritTheme.images);}}
return sourceStrings;};Loader.prototype.getAllSounds=function(){var res,themeName,theme,ressourceString,ressource;res=[];for(themeName in this.themes){if(this.themes.hasOwnProperty(themeName)){theme=this.themes[themeName];for(ressourceString in theme.sfx){if(theme.sfx.hasOwnProperty(ressourceString)){res.push(theme.sfx[ressourceString]);}}}}
return res;};Loader.prototype.getAllMusic=function(){var res,themeName,theme,ressourceString,ressource;res=[];for(themeName in this.themes){if(this.themes.hasOwnProperty(themeName)){theme=this.themes[themeName];for(ressourceString in theme.music){if(theme.music.hasOwnProperty(ressourceString)){res.push(theme.music[ressourceString]);}}}}
return res;};Loader.prototype.loadObjects=function(paths){if(paths===undefined){throw new Error('Missing argument: paths');}
var objectName,i;for(i in paths){if(paths.hasOwnProperty(i)){objectName=paths[i].match(/(\w*)\.\w+$/)[1];if(window[objectName]){continue;}
jseSyncLoad(paths[i]);this.loaded.classes[objectName]=paths[i];}}
return true;};Loader.prototype.reloadAllClasses=function(){var i;for(i in this.loaded.classes){if(this.loaded.classes.hasOwnProperty(i)){jseSyncLoad(this.loaded.classes[i]);}}};Loader.prototype.loadThemes=function(themeNames,callback){if(themeNames===undefined){throw new Error('Missing argument: themeNames');}
if(callback!==undefined){this.onthemesloaded=callback;}
var name,req,i,total,theme,codeString;for(i=0;i<themeNames.length;i++){name=themeNames[i];if(this.themes[name]){continue;}
req=new XMLHttpRequest();req.open('GET',engine.themesPath+'/'+name+'/theme.json',false);req.send();if(req.status===404){console.log('Theme not found: '+name);continue;}
codeString='theme = '+req.responseText+"\n//@ sourceURL=/"+engine.themesPath+'/'+name+'/theme.json';eval(codeString);if(theme.inherit.length){this.loadThemes(theme.inherit);}
this.themes[name]=theme;theme.ressourcesCount=0;theme.ressourcesLoaded=0;theme.masks={};theme.bBoxes={};this.loadRessources(theme,theme.images,'images');this.loadRessources(theme,theme.sfx,'sfx');this.loadRessources(theme,theme.music,'music');}
total=0;for(i in this.themes){if(this.themes.hasOwnProperty(i)){total+=this.themes[i].ressourcesCount;}}
if(total===0){if(this.onthemesloaded){this.onthemesloaded();}}};Loader.prototype.loadRessources=function(theme,object,typeString){if(theme===undefined){throw new Error('Missing argument: theme');}
if(object===undefined){throw new Error('Missing argument: object');}
if(typeString===undefined){throw new Error('Missing argument: typeString');}
var onload,res,path,i,format,images;onload=function(){var ressourceString,theme,i;if(this.hasAttribute('data-loaded')){return;}
if(engine.preGenerateBoundingBoxes&&this.toString()==='[object HTMLImageElement]'){ressourceString=this.getAttribute('data-ressourceString');theme=this.getAttribute('data-theme');console.log('Pre-generating bounding box: '+ressourceString);for(i=0;i<100;i++){loader.getBBox(ressourceString,theme,i/50*Math.PI);}}
this.setAttribute('data-loaded','true');theme=loader.themes[this.getAttribute('data-theme')];theme.ressourcesLoaded++;loader.checkAllLoaded();};for(path in object){if(object.hasOwnProperty(path)){switch(typeString){case'images':res=new Image();res.src=engine.themesPath+"/"+theme.name+"/images/"+path.replace(/\./g,'/')+'.png';if(images=object[path].match(/; *(\d+) *images?/)){res.imageLength=images[1];}
else{res.imageLength=1;}
if(images=object[path].match(/; *bordered/)){res.spacing=1;}
else{res.spacing=0;}
theme.images[path]=res;theme.bBoxes[path]=[];for(i=0;i<100;i++){theme.bBoxes[path].push(false);}
res.onload=onload;theme.ressourcesCount++;break;case'sfx':format=false;for(i=0;i<engine.host.supportedAudio.length;i++){if(object[path].search(engine.host.supportedAudio[i])!==-1){format=engine.host.supportedAudio[i];}}
if(!format){console.log('Sound was not available in a supported format: '+theme.name+"/sfx/"+path.replace(/\./g,'/'));continue;}
res=new Audio(engine.themesPath+"/"+theme.name+"/sfx/"+path.replace(/\./g,'/')+'.'+format);theme.sfx[path]=new Sound(res);if(engine.preloadSounds){res.setAttribute('preload','auto');res.addEventListener("canplaythrough",onload,false);theme.ressourcesCount++;}
break;case'music':format=false;for(i=0;i<engine.host.supportedAudio.length;i++){if(object[path].search(engine.host.supportedAudio[i])!==-1){format=engine.host.supportedAudio[i];}}
if(!format){console.log('Sound was not available in a supported format: '+theme.name+"/sfx/"+path.replace(/\./g,'/'));continue;}
res=new Audio(engine.themesPath+"/"+theme.name+"/music/"+path.replace(/\./g,'/')+'.'+format);theme.music[path]=new Music(res);if(engine.preloadSounds){res.setAttribute('preload','auto');res.addEventListener("canplaythrough",onload,false);theme.ressourcesCount++;}
break;}
res.setAttribute('data-theme',theme.name);res.setAttribute('data-ressourceString',path.replace(/\./g,'/'));}}};Loader.prototype.generateMask=function(ressourceString,alphaLimit){if(ressourceString===undefined){throw new Error('Missing argument: ressourceString');}
alphaLimit=alphaLimit!==undefined?alphaLimit:255;var image,canvas,ctx,bitmap,data,length,pixel,top,bottom,left,right,x,y;image=loader.getImage(ressourceString);canvas=document.createElement('canvas');canvas.width=image.width;canvas.height=image.height;ctx=canvas.getContext('2d');if(image===false){console.log(ressourceString);}
ctx.drawImage(image,0,0,image.width,image.height);bitmap=ctx.getImageData(0,0,canvas.width,canvas.height);data=bitmap.data;length=data.length/4;top=bitmap.height;bottom=0;left=bitmap.width;right=0;for(pixel=0;pixel<length;pixel++){if(data[pixel*4+3]<alphaLimit){data[pixel*4]=0;data[pixel*4+1]=0;data[pixel*4+2]=0;data[pixel*4+3]=0;}
else{data[pixel*4]=0;data[pixel*4+1]=0;data[pixel*4+2]=0;data[pixel*4+3]=255;y=Math.floor(pixel/bitmap.width);x=pixel-y*bitmap.width;while(x>=Math.floor(image.width/image.imageLength)){x-=Math.floor(image.width/image.imageLength)+image.spacing;}
if(x<0){continue;}
top=Math.min(y,top);bottom=Math.max(y+1,bottom);left=Math.min(x,left);right=Math.max(x+1,right);}}
ctx.putImageData(bitmap,0,0);canvas.bBox=new Rectangle(left-bitmap.width/2,top-bitmap.height/2,right-left,bottom-top).getPolygon();return canvas;};Loader.prototype.checkAllLoaded=function(){var i,total,loaded,theme;total=0;loaded=0;for(i in this.themes){if(this.themes.hasOwnProperty(i)){theme=this.themes[i];total+=theme.ressourcesCount;loaded+=theme.ressourcesLoaded;}}
if(loaded===total){if(this.onthemesloaded){this.onthemesloaded();}
return true;}
return false;};jseCreateClass('CustomLoop');CustomLoop.prototype.customLoop=function(framesPerExecution,maskFunction){this.framesPerExecution=framesPerExecution===undefined?1:framesPerExecution;this.maskFunction=maskFunction===undefined?function(){return true;}:maskFunction;this.activitiesQueue=[];this.activities=[];this.animations=[];this.lastFrame=engine.frames;this.last=engine.now?engine.now:new Date().getTime();this.time=0;this.execTime=0;this.scheduledExecutions=[];};CustomLoop.prototype.attachFunction=function(caller,func){if(caller===undefined){throw new Error('Missing argument: caller');}
if(func===undefined){throw new Error('Missing argument: func');}
if(typeof func!=="function"){throw new Error('Argument func must be of type function');}
this.activitiesQueue.push({object:caller,activity:func});};CustomLoop.prototype.detachFunction=function(caller,func){if(caller===undefined){throw new Error('Missing argument: caller');}
if(func===undefined){throw new Error('Missing argument: func');}
var removeArray,i,a;removeArray=[];for(i=0;i<this.activities.length;i++){a=this.activities[i];if(a.object===caller&&a.activity===func){removeArray.push(this.activities.splice(i,1));}}
for(i=0;i<this.activitiesQueue.length;i++){a=this.activitiesQueue[i];if(a.object===caller&&a.activity===func){removeArray.push(this.activitiesQueue.splice(i,1));}}
if(removeArray.length){return removeArray;}
else{return false;}};CustomLoop.prototype.schedule=function(func,delay,caller){if(func===undefined){throw new Error('Missing argument: function');}
if(delay===undefined){throw new Error('Missing argument: delay');}
caller=caller!==undefined?caller:this;this.scheduledExecutions.push({func:func,execTime:this.time+delay,caller:caller,});};CustomLoop.prototype.unScheduleAll=function(){this.scheduledExecutions=[];};CustomLoop.prototype.unSchedule=function(func,caller){if(func===undefined){throw new Error('Missing argument: function');}
caller=caller!==undefined?caller:this;var i,exec;for(i=0;i<this.scheduledExecutions.length;i++){exec=this.scheduledExecutions[i];if(caller===exec.caller&&(exec.func===func||exec.func.toString()===func)){this.scheduledExecutions.splice(i,1);break;}}};CustomLoop.prototype.addQueue=function(){this.activities=this.activities.concat(this.activitiesQueue);this.activitiesQueue=[];};CustomLoop.prototype.execute=function(){var timer,i,exec;timer=new Date().getTime();if(!this.maskFunction()||engine.frames%this.framesPerExecution){return;}
if(engine.frames-this.lastFrame===this.framesPerExecution){this.time+=engine.timeIncrease;}
this.lastFrame=engine.frames;this.last=engine.now;for(i=0;i<this.scheduledExecutions.length;i++){exec=this.scheduledExecutions[i];if(this.time>=exec.execTime){exec.func.call(exec.caller);this.scheduledExecutions.splice(i,1);}}
for(i=0;i<this.activities.length;i++){exec=this.activities[i];if(!exec.activity){console.log('Trying to exec non-existent attached function');console.log(exec);return;}
exec.activity.call(exec.object);}
this.addQueue();this.execTime=(new Date().getTime())-timer;};jseCreateClass('Sprite',[View,Animatable,Vector]);Sprite.prototype.sprite=function(source,x,y,dir,additionalProperties){if(source===undefined){throw new Error('Missing argument: source');}
this.vector(x,y);this.view();this.source=source;this.dir=dir!==undefined?dir:0;engine.registerObject(this);this.imageSpeed=10;this.currentImage=0;this.imageTimeOffset=engine.gameTime;this.size=1;this.opacity=1;this.composite='source-over';this.importProperties(additionalProperties);if(!this.refreshSource()){throw new Error('Sprite source was not successfully loaded: '+source);}
this.offset=this.offset!==undefined?this.offset:new Vector(this.width/2,this.height/2);if(this.offset.x==='center'){this.offset.x=this.width/2;}
if(this.offset.y==='center'){this.offset.y=this.height/2;}
if(engine.avoidSubPixelRendering){this.offset.x=Math.round(this.offset.x);this.offset.y=Math.round(this.offset.y);}};Sprite.prototype.getTheme=function(){var parent,theme;theme=this.theme;parent=this;while(theme===undefined){if(parent.theme){theme=parent.theme;}
else{if(parent.parent){parent=parent.parent;}
else{break;}}}
return theme?theme:engine.defaultTheme;};Sprite.prototype.refreshSource=function(){var theme;theme=this.getTheme();this.bm=loader.getImage(this.source,theme);this.imageLength=this.bm.imageLength*1;this.currentImage=Math.min(this.imageLength-1,this.currentImage);this.width=Math.floor(this.bm.width/this.imageLength);this.height=this.bm.height;return this.bm;};Sprite.prototype.setSource=function(source){if(source===undefined){throw new Error('Missing argument: source');}
if(this.source===source){return;}
this.source=source;this.refreshSource();};Sprite.prototype.drawCanvas=function(c){c.save();if(engine.avoidSubPixelRendering){c.translate(Math.round(this.x),Math.round(this.y));}
else{c.translate(this.x,this.y);}
if(this.imageLength!==1){this.currentImage=Math.floor((engine.gameTime-this.imageTimeOffset)/1000*this.imageSpeed)%this.imageLength;}
c.globalAlpha=this.opacity;c.rotate(this.dir);c.globalCompositeOperation=this.composite;c.drawImage(this.bm,(this.width+this.bm.spacing)*this.currentImage,0,this.width,this.height,-this.offset.x*this.size,-this.offset.y*this.size,this.width*this.size,this.height*this.size);c.restore();};jseCreateClass('Collidable',[Sprite]);Collidable.prototype.collidable=function(source,x,y,dir,additionalProperties){this.sprite(source,x,y,dir,additionalProperties);};Collidable.prototype.polygonCollidesWith=function(objects,getCollidingObjects){if(objects===undefined){throw new Error('Missing argument: objects');}
if(!Array.prototype.isPrototypeOf(objects)){objects=[objects];}
getCollidingObjects=getCollidingObjects!==undefined?getCollidingObjects:false;var pol1,pol2,i,collidingObjects,obj;pol1=this.mask.bBox.copy().move(this.mask.width/2-this.offset.x,this.mask.height/2-this.offset.y).rotate(this.dir).scale(this.size).move(this.x,this.y);collidingObjects=[];for(i=0;i<objects.length;i++){obj=objects[i];pol2=obj.mask.bBox.copy().move(obj.mask.width/2-obj.offset.x,obj.mask.height/2-obj.offset.y).rotate(obj.dir).scale(obj.size).move(obj.x,obj.y);if(pol1.intersects(pol2)||pol1.contains(pol2.points[0])||pol2.contains(pol1.points[0])){if(getCollidingObjects){collidingObjects.push(obj);}
else{return true;}}}
if(collidingObjects.length){return collidingObjects;}
else{return false;}};Collidable.prototype.bBoxCollidesWith=function(objects,getCollidingObjects){if(objects===undefined){throw new Error('Missing argument: objects');}
if(!Array.prototype.isPrototypeOf(objects)){objects=[objects];}
getCollidingObjects=getCollidingObjects!==undefined?getCollidingObjects:false;var obj,rVect,bb1,bb2,i,collidingObjects;rVect=new Vector(this.bm.width/2-this.offset.x,this.bm.height/2-this.offset.y).rotate(this.dir);bb1=this.mask.bBox.copy().rotate(this.dir).move(rVect.x+this.x,rVect.y+this.y).scale(this.size);bb1={x1:Math.min(bb1.points[0].x,bb1.points[1].x,bb1.points[2].x,bb1.points[3].x),x2:Math.max(bb1.points[0].x,bb1.points[1].x,bb1.points[2].x,bb1.points[3].x),y1:Math.min(bb1.points[0].y,bb1.points[1].y,bb1.points[2].y,bb1.points[3].y),y2:Math.max(bb1.points[0].y,bb1.points[1].y,bb1.points[2].y,bb1.points[3].y)};collidingObjects=[];for(i=0;i<objects.length;i++){obj=objects[i];rVect=new Vector(obj.bm.width/2-obj.offset.x,obj.bm.height/2-obj.offset.y).rotate(obj.dir);bb2=obj.mask.bBox.copy().rotate(obj.dir).move(rVect.x+obj.x,rVect.y+obj.y).scale(obj.size);bb2={x1:Math.min(bb2.points[0].x,bb2.points[1].x,bb2.points[2].x,bb2.points[3].x),x2:Math.max(bb2.points[0].x,bb2.points[1].x,bb2.points[2].x,bb2.points[3].x),y1:Math.min(bb2.points[0].y,bb2.points[1].y,bb2.points[2].y,bb2.points[3].y),y2:Math.max(bb2.points[0].y,bb2.points[1].y,bb2.points[2].y,bb2.points[3].y)};if(bb1.x1<bb2.x2&&bb1.x2>bb2.x1&&bb1.y1<bb2.y2&&bb1.y2>bb2.y1){if(getCollidingObjects){collidingObjects.push(obj);}
else{return true;}}}
if(collidingObjects.length){return collidingObjects;}
else{return false;}};Collidable.prototype.collidesWith=function(objects,resolution,getCollisionPosition,checkBBox){if(objects===undefined){throw new Error('Missing argument: objects');}
if(!Array.prototype.isPrototypeOf(objects)){objects=[objects];}
resolution=resolution!==undefined?resolution:2;getCollisionPosition=getCollisionPosition!==undefined?getCollisionPosition:false;checkBBox=checkBBox!==undefined?checkBBox:true;var canvas,mask,ctx,obj,bitmap,i,data,length,pixel,pxArr,x,y,avX,avY,avDist,avDir;if(this.size===0){return false;}
if(checkBBox){if(engine.useRotatedBoundingBoxes){objects=this.polygonCollidesWith(objects,true);}
else{objects=this.bBoxCollidesWith(objects,true);}
if(objects===false){return false;}}
mask=loader.getMask(this.source,this.getTheme());canvas=document.createElement('canvas');canvas.width=Math.ceil(mask.width*this.size);canvas.height=Math.ceil(mask.height*this.size);ctx=canvas.getContext('2d');ctx.fillStyle="#FFF";ctx.fillRect(0,0,canvas.width,canvas.height);ctx.globalAlpha=0.5;ctx.save();ctx.drawImage(mask,(this.width+this.bm.spacing)*this.currentImage,0,this.width,this.height,0,0,this.width*this.size,this.height*this.size);ctx.translate(this.offset.x*this.size,this.offset.y*this.size);ctx.rotate(-this.dir);for(i=0;i<objects.length;i++){obj=objects[i];mask=loader.getMask(obj.source,obj.getTheme());ctx.translate(obj.x-this.x,obj.y-this.y);ctx.rotate(obj.dir);ctx.drawImage(obj.mask,(obj.width+obj.bm.spacing)*obj.currentImage,0,obj.width,obj.height,-obj.offset.x*obj.size,-obj.offset.y*obj.size,obj.width*obj.size,obj.height*obj.size);ctx.translate(this.x-obj.x,this.y-obj.y);ctx.rotate(-obj.dir);}
ctx.restore();bitmap=ctx.getImageData(0,0,canvas.width,canvas.height);data=bitmap.data;length=data.length/4;pxArr=[];for(pixel=0;pixel<length;pixel+=resolution){if(data[pixel*4]<127){if(getCollisionPosition){y=Math.floor(pixel/bitmap.width);x=pixel-y*bitmap.width;pxArr.push({x:x,y:y});}
else{return true;}}}
if(pxArr.length>0){pxArr=pxArr.sortByNumericProperty('x');avX=(pxArr[0].x+pxArr[pxArr.length-1].x)/2;pxArr=pxArr.sortByNumericProperty('y');avY=(pxArr[0].y+pxArr[pxArr.length-1].y)/2;avX-=this.offset.x*this.size;avY-=this.offset.y*this.size;avDir=Math.atan2(avY,avX);avDist=Math.sqrt(Math.pow(avX,2)+Math.pow(avY,2));avDir+=this.dir;avX=Math.cos(avDir)*avDist;avY=Math.sin(avDir)*avDist;return{x:avX,y:avY,dir:avDir};}
return false;};Collidable.prototype.drawBBox=function(){var c,pol,rVect,x1,y1,x2,y2;rVect=new Vector(this.bm.width/2-this.offset.x,this.bm.height/2-this.offset.y).rotate(this.dir);pol=this.mask.bBox.copy().rotate(this.dir).move(rVect.x,rVect.y).scale(this.size);x1=Math.min(pol.points[0].x,pol.points[1].x,pol.points[2].x,pol.points[3].x);x2=Math.max(pol.points[0].x,pol.points[1].x,pol.points[2].x,pol.points[3].x);y1=Math.min(pol.points[0].y,pol.points[1].y,pol.points[2].y,pol.points[3].y);y2=Math.max(pol.points[0].y,pol.points[1].y,pol.points[2].y,pol.points[3].y);c=this.ctx;c.save();c.strokeStyle="#00F";c.translate(this.x,this.y);c.strokeRect(x1,y1,x2-x1,y2-y1);c.restore();};Collidable.prototype.drawRotatedBBox=function(c){var pol;pol=this.mask.bBox.copy().move(this.mask.width/2-this.offset.x,this.mask.height/2-this.offset.y).rotate(this.dir).scale(this.size);c.save();c.strokeStyle="#0F0";c.translate(this.x,this.y);c.beginPath();c.moveTo(pol.points[0].x,pol.points[0].y);c.lineTo(pol.points[1].x,pol.points[1].y);c.lineTo(pol.points[2].x,pol.points[2].y);c.lineTo(pol.points[3].x,pol.points[3].y);c.closePath();c.stroke();c.restore();};Collidable.prototype.drawMask=function(c){var mask;if(this.mask){mask=this.mask;}
else{return;}
c.save();c.translate(this.x,this.y);c.rotate(this.dir);try{c.drawImage(this.mask,(this.width+this.bm.spacing)*this.currentImage,0,this.width,this.height,-this.offset.x*this.size,-this.offset.y*this.size,this.width*this.size,this.height*this.size);}catch(e){console.log(this.source);console.log(this.bm);engine.stopMainLoop();throw new Error(e);}
c.restore();};jseCreateClass('TextBlock',[Animatable,View,Vector]);TextBlock.prototype.textBlock=function(string,x,y,width,additionalProperties){if(string===undefined){throw new Error('Missing argument: string');}
if(width===undefined){throw new Error('Missing argument: width');}
this.view();this.vector(x,y);this.width=width;this.font='normal 14px Verdana';this.alignment='left';this.offset=new Vector();this.color="#000000";this.opacity=1;this.size=1;this.dir=0;this.composite='source-over';this.importProperties(additionalProperties);this.lineHeight=this.lineHeight?this.lineHeight:this.font.match(/[0.0-9]+/)*1.25;this.lines=[];this.lineWidth=[];this.cache=document.createElement('canvas');this.cacheCtx=this.cache.getContext('2d');this.cache.width=this.width;this.cache.height=1000;engine.registerObject(this);this.setString(string);this.cacheRendering();if(engine.avoidSubPixelRendering){this.offset.x=Math.round(this.offset.x);this.offset.y=Math.round(this.offset.y);}};TextBlock.prototype.setString=function(string){if(string===undefined){throw new Error('Missing argument: string');}
this.string=string;if(typeof this.string!=='string'){this.string=this.string.toString();}
if(this.string===''){this.string=' ';}
this.stringToLines();this.cacheRendering();};TextBlock.prototype.setAlignment=function(alignment){if(alignment===undefined){throw new Error('Missing argument: alignment');}
if(/left|right|center/.test(alignment)===false){throw new Error('Invalid alignment given. Valid alignments are: "left", "right", "center"');}
this.alignment=alignment;this.cacheRendering();};TextBlock.prototype.setColor=function(colorString){if(colorString===undefined){throw new Error('Missing argument: colorString');}
this.color=colorString;this.cacheRendering();};TextBlock.prototype.cacheRendering=function(){var xOffset,i;this.cacheCtx.clearRect(0,0,this.cache.width,this.cache.height);this.cacheCtx.font=this.font;this.cacheCtx.fillStyle=this.color;for(i=0;i<this.lines.length;i++){xOffset=0;switch(this.alignment){case'left':xOffset=0;break;case'right':xOffset=this.width-this.lineWidth[i];break;case'center':xOffset=(this.width-this.lineWidth[i])/2;break;}
if(this.lines[i]){this.cacheCtx.fillText(this.lines[i],xOffset,this.lineHeight*(1+i));}}};TextBlock.prototype.stringToLines=function(){var lt,line,paragraphs,pid,words,wid,word;lt=document.createElement('span');lt.style.font=this.font;lt.style.visibility='hidden';lt.style.position='absolute';document.body.appendChild(lt);line=0;this.lines=[];this.lines[line]='';paragraphs=this.string.split("\n");for(pid=0;pid<paragraphs.length;pid++){words=paragraphs[pid].split(' ');for(wid=0;wid<words.length;wid++){word=words[wid];lt.innerHTML+=word+" ";if(lt.offsetWidth>this.width){line++;this.lines[line]='';lt.innerHTML='';lt.innerHTML+=word+" ";}
else{this.lineWidth[line]=lt.offsetWidth;}
this.lines[line]+=word+" ";}
line++;lt.innerHTML='';this.lines[line]='';}
lt.parentNode.removeChild(lt);};TextBlock.prototype.drawCanvas=function(c){if(/^\s*$/.test(this.string)){return;}
c.save();if(engine.avoidSubPixelRendering){c.translate(Math.round(this.x),Math.round(this.y));}
else{c.translate(this.x,this.y);}
c.rotate(this.dir);c.globalAlpha=this.opacity;c.globalCompositeOperation=this.composite;c.drawImage(this.cache,-this.offset.x*this.size,-this.offset.y*this.size,this.cache.width*this.size,this.cache.height*this.size);c.restore();};jseCreateClass('GameObject',[Collidable]);GameObject.prototype.gameObject=function(source,x,y,dir,additionalProperties){if(source===undefined){throw new Error('Missing argument: source');}
if(x===undefined){throw new Error('Missing argument: x');}
if(y===undefined){throw new Error('Missing argument: y');}
this.sprite(source,x,y,dir,additionalProperties);this.mask=this.mask?this.mask:loader.getMask(source,this.getTheme());this.loop=this.loop?this.loop:'eachFrame';engine.loops[this.loop].attachFunction(this,this.updatePosition);this.speed=this.speed?this.speed:new Vector(0,0);this.alive=true;};GameObject.prototype.updatePosition=function(){if(this.alive){this.add(engine.convertSpeed(this.speed));}};jseCreateClass('Keyboard');Keyboard.prototype.keyboard=function(){var key;document.addEventListener('keydown',function(event){keyboard.onKeyDown(event);},false);document.addEventListener('keyup',function(event){keyboard.onKeyUp(event);},false);this.keys=new Array(200);for(key=0;key<this.keys.length;key++){this.keys[key]={events:[]};}};Keyboard.prototype.onKeyDown=function(event){var key;if(event===undefined){throw new Error('Missing argument: event');}
if(!this.isDown(event.keyCode)){key=this.keys[event.keyCode];key.events=key.events.slice(0,1);key.events.unshift(new Date().getTime());}};Keyboard.prototype.onKeyUp=function(event){var key;if(event===undefined){throw new Error('Missing argument: event');}
if(this.isDown(event.keyCode)){key=this.keys[event.keyCode];key.events=key.events.slice(0,1);key.events.unshift(-new Date().getTime());}};Keyboard.prototype.isDown=function(key){if(key===undefined){throw new Error('Missing argument: key');}
if(typeof key==='string'){key=key.toUpperCase().charCodeAt(0);}
return this.keys[key].events.length&&this.keys[key].events[0]>0;};Keyboard.prototype.isPressed=function(key){if(key===undefined){throw new Error('Missing argument: key');}
if(typeof key==='string'){key=key.toUpperCase().charCodeAt(0);}
return this.keys[key].events.length&&this.keys[key].events[0]>engine.last;};Keyboard.prototype.isReleased=function(key){if(key===undefined){throw new Error('Missing argument: key');}
if(typeof key==='string'){key=key.toUpperCase().charCodeAt(0);}
return this.keys[key].events.length&&-this.keys[key].events[0]>engine.last;};jseCreateClass('Pointer');Pointer.prototype.pointer=function(){var button;if(engine.host.hasTouch){engine.arena.addEventListener('touchstart',function(event){pointer.onTouchStart(event);},false);engine.arena.addEventListener('touchend',function(event){pointer.onTouchEnd(event);},false);document.addEventListener('touchmove',function(event){pointer.onTouchMove(event);},false);}
else{engine.arena.addEventListener('mousedown',function(event){pointer.onMouseDown(event);},false);engine.arena.addEventListener('mouseup',function(event){pointer.onMouseUp(event);},false);document.addEventListener('mousemove',function(event){engine.host.hasMouse=true;pointer.onMouseMove(event);},false);if(engine.options.cursor){engine.arena.style.cursor="url('"+loader.getImage(engine.options.cursor).src+"') 0 0, auto";}}
this.mouse=new Vector();this.mouse.window=new Vector();this.mouse.screen=new Vector();this.mouse.buttons=new Array(11);for(button=0;button<this.mouse.buttons.length;button++){this.mouse.buttons[button]=new Vector();this.mouse.buttons[button].events=new Array(2);}
this.mouse.lastMoved=0;this.touches=new Array(10);for(button=0;button<this.touches.length;button++){this.touches[button]=new Vector();this.touches[button].x=undefined;this.touches[button].y=undefined;this.touches[button].events=new Array(2);}};Pointer.prototype.onMouseDown=function(event){if(event===undefined){throw new Error('Missing argument: event');}
var button;this.onMouseMove(event);if(!this.isDown(event.which)){button=this.mouse.buttons[event.which];button.events=button.events.slice(0,1);button.events.unshift(new Date().getTime());}};Pointer.prototype.onMouseUp=function(event){if(event===undefined){throw new Error('Missing argument: event');}
var button;this.onMouseMove(event);if(this.isDown(event.which)){button=this.mouse.buttons[event.which];button.events=button.events.slice(0,1);button.events.unshift(-new Date().getTime());}};Pointer.prototype.onMouseMove=function(event){if(event===undefined){throw new Error('Missing argument: event');}
this.mouse.window.set(event.pageX,event.pageY);this.mouse.set(this.mouse.window.x-engine.arena.offsetLeft-engine.mainCanvas.offsetLeft+document.body.scrollLeft,this.mouse.window.y-engine.arena.offsetTop-engine.mainCanvas.offsetTop+document.body.scrollTop);this.mouse.x=this.mouse.x/engine.arena.offsetWidth*engine.canvasResX;this.mouse.y=this.mouse.y/engine.arena.offsetHeight*engine.canvasResY;this.mouse.buttons.forEach(function(){this.x=pointer.mouse.x;this.y=pointer.mouse.y;})
this.mouse.lastMoved=new Date().getTime();if(this.cursor){this.cursor.x=this.mouse.x;this.cursor.y=this.mouse.y;}};Pointer.prototype.onTouchStart=function(event){if(event===undefined){throw new Error('Missing argument: event');}
var i,eventTouch,pointerTouch,touchNumber;for(i=0;i<event.changedTouches.length;i++){if(i!=="length"){eventTouch=event.changedTouches[i];if(event.changedTouches[i].identifier>20){touchNumber=this.findTouchNumber();}
else{touchNumber=eventTouch.identifier;}
pointerTouch=this.touches[touchNumber];pointerTouch.identifier=eventTouch.identifier;pointerTouch.events=pointerTouch.events.slice(0,1);pointerTouch.events.unshift(new Date().getTime());}}
this.onTouchMove(event);};Pointer.prototype.onTouchEnd=function(event){if(event===undefined){throw new Error('Missing argument: event');}
var i,eventTouch,pointerTouch;for(i=0;i<event.changedTouches.length;i++){eventTouch=event.changedTouches[i];if(event.changedTouches[i].identifier>20){pointerTouch=this.touches.getElementByPropertyValue('identifier',eventTouch.identifier);}
else{pointerTouch=this.touches[eventTouch.identifier];}
pointerTouch.events=pointerTouch.events.slice(0,1);pointerTouch.events.unshift(-new Date().getTime());}
this.onTouchMove(event);};Pointer.prototype.onTouchMove=function(event){if(event===undefined){throw new Error('Missing argument: event');}
var i,eventTouch,pointerTouch;for(i=0;i<event.touches.length;i++){eventTouch=event.touches[i];if(event.touches[i].identifier>20){pointerTouch=this.touches.getElementByPropertyValue('identifier',eventTouch.identifier);}
else{pointerTouch=this.touches[eventTouch.identifier];}
pointerTouch.set(eventTouch.pageX-engine.arena.offsetLeft-engine.mainCanvas.offsetLeft+document.body.scrollLeft,eventTouch.pageY-engine.arena.offsetTop-engine.mainCanvas.offsetTop+document.body.scrollTop);pointerTouch.x=pointerTouch.x/engine.arena.offsetWidth*engine.canvasResX;pointerTouch.y=pointerTouch.y/engine.arena.offsetHeight*engine.canvasResY;}};Pointer.prototype.hasMoved=function(){return engine.last<this.mouse.lastMoved;};Pointer.prototype.isDown=function(button){if(button===undefined){throw new Error('Missing argument: button');}
var i,pointers;switch(this.getButtonType(button)){case"mouse":pointers=button===MOUSE_ANY?this.mouse.buttons:this.mouse.buttons[button];break;case"touch":pointers=button===TOUCH_ANY?this.touches:this.touches[button-TOUCH_1];break;case"any":pointers=this.mouse.buttons.concat(this.touches);}
return this.checkPointer(pointers,"down");};Pointer.prototype.isPressed=function(button){if(button===undefined){throw new Error('Missing argument: button');}
var i,pointers;switch(this.getButtonType(button)){case"mouse":pointers=button===MOUSE_ANY?this.mouse.buttons:this.mouse.buttons[button];break;case"touch":pointers=button===TOUCH_ANY?this.touches:this.touches[button-TOUCH_1];break;case"any":pointers=this.mouse.buttons.concat(this.touches);}
return this.checkPointer(pointers,"pressed");};Pointer.prototype.isReleased=function(button){if(button===undefined){throw new Error('Missing argument: button');}
var i,pointers;switch(this.getButtonType(button)){case"mouse":pointers=button===MOUSE_ANY?this.mouse.buttons:this.mouse.buttons[button];break;case"touch":pointers=button===TOUCH_ANY?this.touches:this.touches[button-TOUCH_1];break;case"any":pointers=this.mouse.buttons.concat(this.touches);}
return this.checkPointer(pointers,"released");};Pointer.prototype.shapeIsPressed=function(button,shape,outside){button=button!==undefined?button:MOUSE_TOUCH_ANY;if(shape===undefined){throw new Error('Missing argument: shape');}
if(typeof shape.contains!=='function'){throw new Error('Argument shape has implement a "contains"-function');}
var i,pointers,ret,check;pointers=this.isPressed(button);if(!pointers){return false;}
ret=[];for(i=0;i<pointers.length;i++){if(!outside&&shape.contains(pointers[i])){ret.push(pointers[i]);}
else if(outside&&!shape.contains(pointers[i])){ret.push(pointers[i]);}}
return ret.length?ret:false;};Pointer.prototype.shapeIsReleased=function(button,shape,outside){button=button!==undefined?button:MOUSE_TOUCH_ANY;if(shape===undefined){throw new Error('Missing argument: shape');}
if(typeof shape.contains!=='function'){throw new Error('Argument shape has implement a "contains"-function');}
var i,pointers,ret,check;pointers=this.isReleased(button);if(!pointers){return false;}
ret=[];for(i=0;i<pointers.length;i++){if(!outside&&shape.contains(pointers[i])){ret.push(pointers[i]);}
else if(outside&&!shape.contains(pointers[i])){ret.push(pointers[i]);}}
return ret.length?ret:false;};Pointer.prototype.shapeIsDown=function(button,shape,outside){button=button!==undefined?button:MOUSE_TOUCH_ANY;if(shape===undefined){throw new Error('Missing argument: shape');}
if(typeof shape.contains!=='function'){throw new Error('Argument shape has implement a "contains"-function');}
var i,pointers,ret,check;pointers=this.isDown(button);if(!pointers){return false;}
ret=[];for(i=0;i<pointers.length;i++){if(!outside&&shape.contains(pointers[i])){ret.push(pointers[i]);}
else if(outside&&!shape.contains(pointers[i])){ret.push(pointers[i]);}}
return ret.length?ret:false;};Pointer.prototype.getButtonType=function(button){if(button>=MOUSE_ANY&&button<=MOUSE_10){return"mouse";}
else if(button>=TOUCH_ANY&&button<=TOUCH_10){return"touch";}
else if(button===MOUSE_TOUCH_ANY){return"any";}
else{throw new Error('Argument button has to be a pointer constant (see jseGlobals.js)');}};Pointer.prototype.checkPointer=function(pointers,state){if(pointers==="undefined"){throw new Error("Missing argument: pointers");}
if(state==="undefined"){throw new Error("Missing argument: state");}
if(['pressed','released','down'].indexOf(state)===-1){throw new Error('Argument state must be one of the following values: "pressed", "released" or "down"');}
var i,pointer,ret;if(!Array.prototype.isPrototypeOf(pointers)){pointers=[pointers];}
ret=[];for(i=0;i<pointers.length;i++){pointer=pointers[i];switch(state){case"pressed":if(pointer.events[0]>engine.last||pointer.events[1]>engine.last){ret.push(pointer);}
break;case"released":if(-pointer.events[0]>engine.last||-pointer.events[1]>engine.last){ret.push(pointer);}
break;case"down":if(pointer.events[0]>0){ret.push(pointer);}
break;}}
return ret.length?ret:false;};Pointer.prototype.findTouchNumber=function(){var i;for(i=0;i<this.touches.length;i++){if(!this.checkPointer(this.touches[i],'down')){return i;}}}
Pointer.prototype.shapeIsHovered=function(shape,outside){if(!outside&&(shape.contains(this.mouse))){return true;}
else if(outside&&(!shape.contains(this.mouse))){return true;}
return false;};Pointer.prototype.unPress=function(button){if(button===undefined){throw new Error('Missing argument: button');}
var i,ii,pointers;pointers=this.isPressed(button);if(!pointers){return false;}
for(i=0;i<pointers.length;i++){events=pointers[i].events;if(events[0]>engine.last){events.shift();events.push(undefined);unpressed=true;}
if(events[1]>engine.last){events.pop();events.push(undefined);unpressed=true;}}
return true;};Pointer.prototype.outside=function(){return this.mouse.x<0||this.mouse.x>engine.arena.offsetWidth||this.mouse.y<0||this.mouse.y>engine.arena.offsetHeight;};jseCreateClass('Sound');Sound.prototype.sound=function(audioElement){if(audioElement===undefined){throw new Error('Missing argument: audioElement');}
if(audioElement.toString()!=="[object HTMLAudioElement]"){throw new Error('Argument audioElement has to be of type HTMLAudioElement');}
var i;this.source=audioElement;this.playbackId=0;this.elements=[];for(i=0;i<engine.cachedSoundCopies;i++){this.elements.push(this.source.cloneNode());this.elements[i].started=false;}};Sound.prototype.play=function(loop){var i,sound;if(engine.soundsMuted){return false;}
for(i=0;i<this.elements.length;i++){sound=this.elements[i];if((sound.started===false||sound.ended)&&!sound.loop){sound.started=true;sound.volume=1;sound.play();if(loop){sound.loop='loop';}
this.playbackId++;sound.playbackId=this.playbackId;return this.playbackId;}}
return false;};Sound.prototype.stop=function(playbackId){if(playbackId===undefined){throw new Error('Missing argument: playbackId');}
var i,sound;for(i=0;i<this.elements.length;i++){sound=this.elements[i];if(sound.playbackId===playbackId&&sound.started&&!sound.ended){sound.volume=0;sound.loop=false;return true;}}
return false;};Sound.prototype.stopAll=function(){var i,sound;for(i=0;i<this.elements.length;i++){sound=this.elements[i];if(sound.started&&!sound.ended){sound.volume=0;sound.loop=false;return true;}}};Sound.prototype.stopLoop=function(playbackId){if(playbackId===undefined){throw new Error('Missing argument: playbackId');}
var i,sound;for(i=0;i<this.elements.length;i++){sound=this.elements[i];if(sound.playbackId===playbackId&&sound.started&&!sound.ended){sound.loop=false;return true;}}
return false;};jseCreateClass('Music');Music.prototype.music=function(audioElement){if(audioElement===undefined){throw new Error('Missing argument: audioElement');}
if(audioElement.toString()!=="[object HTMLAudioElement]"){throw new Error('Argument audioElement has to be of type HTMLAudioElement');}
this.source=audioElement;this.paused=false;};Music.prototype.play=function(loop){if(engine.musicMuted){return false;}
this.source.play();this.source.paused=false;if(loop){this.source.loop="loop";}
return true;};Music.prototype.pause=function(){this.paused=true;this.source.pause();};Music.prototype.stop=function(){if(!this.source.ended){this.source.pause();this.source.currentTime=0;this.source.loop=false;return true;}
return false;};Music.prototype.stopLoop=function(){if(this.source.started&&!this.source.ended){this.source.loop=false;return true;}
return false;};